<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Sql on DRAPORLAND</title>
    <link>https://drapor.me/categories/sql/</link>
    <description>Recent content in Sql on DRAPORLAND</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright &amp;copy; 2018 Drapor |  Powered by Hugo</copyright>
    <lastBuildDate>Tue, 08 Aug 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://drapor.me/categories/sql/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>SQL的时间／日期无脑转换</title>
      <link>https://drapor.me/posts/170808_sql_time_switch/</link>
      <pubDate>Tue, 08 Aug 2017 00:00:00 +0000</pubDate>
      
      <guid>https://drapor.me/posts/170808_sql_time_switch/</guid>
      <description>&lt;p&gt;最近在公司写数据需求的时候，由于各个表里存的日期和时间格式不尽相同，所以时常会遇到各种格式的日期转换的问题，一度搞得我非常烦躁。后来终于忍无可忍，仔细地去研究了一波，发现其实并没有想象中的那么麻烦，在此做个总结。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Codewars上一道5 kyu的SQL题</title>
      <link>https://drapor.me/posts/170721_a_sql_ex/</link>
      <pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://drapor.me/posts/170721_a_sql_ex/</guid>
      <description>具体思路和过程以后有时间再来整理（Flag）。
原题目的url是https://www.codewars.com/kata/calculating-running-total
参考了一下简单的情况 http://sql55.com/query/cumulative-amount-1.php ，然后自己建表鼓捣了一会儿，
终于得(meng)出了一个可行的答案：
SELECT CAST(p1.created_at AS DATE) AS date, COUNT(DISTINCT p1.title) AS count, COUNT(p2.title)/COUNT(DISTINCT p1.title) AS total FROM posts p1 INNER JOIN posts p2 ON to_char(p1.created_at, &amp;#39;YYYY-MM-DD&amp;#39;) &amp;gt;= to_char(p2.created_at, &amp;#39;YYYY-MM-DD&amp;#39;) GROUP BY date ORDER BY date</description>
    </item>
    
    <item>
      <title>SQL Syntax(Ⅲ)</title>
      <link>https://drapor.me/posts/170425_sql3/</link>
      <pubDate>Tue, 25 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://drapor.me/posts/170425_sql3/</guid>
      <description>&lt;p&gt;后面储存过程、事务处理、游标和一些高级特性感觉太遥远就只是翻了翻，没作整理。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Syntax(Ⅱ)</title>
      <link>https://drapor.me/posts/170423_sql2/</link>
      <pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://drapor.me/posts/170423_sql2/</guid>
      <description>&lt;p&gt;继续。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>SQL Syntax(Ⅰ)</title>
      <link>https://drapor.me/posts/170422_sql1/</link>
      <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
      
      <guid>https://drapor.me/posts/170422_sql1/</guid>
      <description>这两天刚好在翻《SQL必知必会》，就顺手写几篇Markdown整理一下语法吧。

检索数据 SELECT column0, column1,... --&amp;#39;\*&amp;#39; for all FROM table_name; - In SQL Server and Access,
SELECT TOP [num] column0, column1,... FROM table_name;  In DB2,  SELECT column0, column1,... FROM table_name FETCH FIRST [num] ROWS ONLY;  In Oracle,  SELECT column0, column1,... FROM table_name WHERE ROWNUM &amp;lt;= [num];  In MySQL, MariaDB, PostgreSQL and SQLite  SELECT column0, column1,... FROM table_name LIMIT [num] {OFFSET [num]};  Select distinct value  SELECT DISTINCT column_name FROM table_name;  Annotation  # Here is a comment SELECT column0 -- Here is also a comment FROM table_name; /* Also a comment~ */ 排列检索数据 SELECT column0, column1,.</description>
    </item>
    
  </channel>
</rss>