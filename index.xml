<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>DRAPORLAND</title>
    <link>https://jrd.pub/</link>
    <description>Recent content on DRAPORLAND</description>
    <generator>Hugo2</generator>
    <language>zh-cn</language>
    <lastBuildDate>Thu, 31 Oct 2024 00:00:00 +0800</lastBuildDate>
    <atom:link href="https://jrd.pub/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>「时间就是金钱」</title>
      <link>https://jrd.pub/241031_time_is_money/</link>
      <pubDate>Thu, 31 Oct 2024 00:00:00 +0800</pubDate>
      <guid>https://jrd.pub/241031_time_is_money/</guid>
      <summary></summary>
      <description>&lt;br&gt;&#xA;&lt;p&gt;「时间就是金钱」从小就听。回想起来，那会儿好像更多强调的是时间珍贵，提醒大家要珍惜时间。如今回头再看这句话，似乎有一些新的理解。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;如果把人生看作一种投资过程或一门生意，时间就是一种成本，它对每个人来说既公平也不公平。每个人每天都有 24 小时，每个人的一小时都是 3600 秒，而这 86400 秒对于不同的人来说可以控制的比例是大大不同的，所谓更自由的状态也通常意味着有更多可以控制的时间。好在金钱的贫富差距似乎是没有上限的，而时间的贫富差距是有的。虽然爱因斯坦说，时间是一种精妙的幻觉。但对于追求意义的人类来说，时间的确可以交换来一些意义。成年之前的学生时代，大部分学生（的确存在一些给学生很多自由支配时间的学校）拥有的时间大体上是差不多的。在此基础上，好的学习方法和老师对于提高学习成绩的作用更明显。在成年之后，人们虽然拥有的可支配时间不一样多，但我们如何选择使用这些时间，也一定程度上决定了我们最后变成什么样的人。金钱投资总被谈起，而时间投资却好像谈得更少。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;人们对于自己能控制的时间的比例（或者说，真正能够掌控的时间）常有高估。除了睡眠和吃饭，通勤和生活琐事本身也占用一些时间，同时它们还消耗着体力和注意力（同样是常被忽略的成本）。与之相对地，在其他的时间里，则对应地、不可避免地又需要一些休息时间。在这样的休息时间里，或许会伴随对自己浪费了太多时间的责备，和自己为什么无法集中注意力的埋怨，而这实际上可能是必需的休息时间这件事却更容易被忽略，它本身也应当和房租水电一样视为生活日常开支的固定部分。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;想「做成」或「完成」一件事，时间作为一种成本也常常被忽略，投入足够的时间和方法几乎同等重要。真正重要的是积分，而我们常常花了太多时间让起始点的微分再高一点。我们有时觉得开始很难，不妨降低一些起步的高低，从更低一点的位置开始，至少能够开始积分。我最近在思考几个月后要举行的婚礼的形式。对于我这样毫无经验的人来说，它本就是需要付出相当多时间，不花时间就想取得满意的结果是妄想。而且我意识到我无论花多少时间，光靠想肯定无法直接想清楚这个问题的，最多只能讲出一些模糊的感觉，于是我决定从更低的位置开始——比如先看 50 个别人婚礼的视频 / 策划。可以确定的是，看完之后我不一定就能知道自己的婚礼应当如何办，但我肯定离这个答案更近一步。之前还看过一个说法「&lt;a href=&#34;https://www.raptitude.com/2022/01/everything-must-be-paid-for-twice/&#34;&gt;一件物品必然会被支付两次&lt;/a&gt;」，我深以为然。例如买一本书，第一次支付是金钱，第二次支付是时间。受此影响，我后来买书越来越克制，我知道自己根本无法进行这么多的第二次支付。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;「时间就是金钱」——的确，它和钱一样是珍贵的，也和钱一样，是我们可以自主选择如何支配的。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Now</title>
      <link>https://jrd.pub/now/</link>
      <pubDate>Tue, 08 Oct 2024 00:00:00 +0800</pubDate>
      <guid>https://jrd.pub/now/</guid>
      <summary>&lt;p&gt;&lt;em&gt;This page is inspired by &lt;a href=&#34;https://nownownow.com/&#34;&gt;nownownow&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;location&#34;&gt;Location&lt;/h2&gt;&#xA;&lt;p&gt;Hangzhou / Shanghai&lt;/p&gt;&#xA;&lt;h2 id=&#34;work&#34;&gt;Work&lt;/h2&gt;&#xA;&lt;p&gt;Everything&amp;rsquo;s good so far.&lt;/p&gt;&#xA;&lt;h2 id=&#34;life&#34;&gt;Life&lt;/h2&gt;&#xA;&lt;p&gt;Preparing for our wedding!&lt;/p&gt;&#xA;&lt;p&gt;Moved to a new rented apartment and have a new pretty work desk!&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/new_work_cell.jpg&#34; style=&#34;width: 50%;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Reading &lt;em&gt;Other Rivers&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Start playing Hearthstone Battlegrounds again.&lt;/p&gt;</summary>
      <description>&lt;p&gt;&lt;em&gt;This page is inspired by &lt;a href=&#34;https://nownownow.com/&#34;&gt;nownownow&lt;/a&gt;.&lt;/em&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;location&#34;&gt;Location&lt;/h2&gt;&#xA;&lt;p&gt;Hangzhou / Shanghai&lt;/p&gt;&#xA;&lt;h2 id=&#34;work&#34;&gt;Work&lt;/h2&gt;&#xA;&lt;p&gt;Everything&amp;rsquo;s good so far.&lt;/p&gt;&#xA;&lt;h2 id=&#34;life&#34;&gt;Life&lt;/h2&gt;&#xA;&lt;p&gt;Preparing for our wedding!&lt;/p&gt;&#xA;&lt;p&gt;Moved to a new rented apartment and have a new pretty work desk!&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/new_work_cell.jpg&#34; style=&#34;width: 50%;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Reading &lt;em&gt;Other Rivers&lt;/em&gt;.&lt;/p&gt;&#xA;&lt;p&gt;Start playing Hearthstone Battlegrounds again.&lt;/p&gt;&#xA;</description>
    </item>
    <item>
      <title>尝试向人推荐《战争与和平》</title>
      <link>https://jrd.pub/240412_war_and_peace/</link>
      <pubDate>Fri, 12 Apr 2024 00:00:00 +0800</pubDate>
      <guid>https://jrd.pub/240412_war_and_peace/</guid>
      <summary></summary>
      <description>&lt;img src=&#34;https://jrd.pub/article_imgs/war_and_peace_illustration_1.jpeg&#34;&gt;&#xA;&lt;p&gt;去年听了&lt;a href=&#34;https://www.gcores.com/radios/162745&#34;&gt;一期播客&lt;/a&gt;之后萌生了读《战争与和平》的想法。我当然也明白攀登这样的文学高峰需要更多的时间和注意力。恰好今年春节期间有了一段悠长的假期，于是我决定翻开它并读完它。&lt;/p&gt;&#xA;&lt;p&gt;如果有比较稳定的阅读习惯，实际读下来全程的体验其实完全不会感到辛苦。当然你最好给自己充分的时间，毕竟这样的作品完全值得投入更多的时间细细感受。以及最好选择合适的译本，这里推荐草婴的译本，他为了提高阅读体验做了一些调整，整体的阅读体验还是很顺畅的。&lt;/p&gt;&#xA;&lt;p&gt;《战争与和平》故事发生在 19 世纪的上半叶，聚焦在几个显赫贵族家族以及俄法战争。 在讲故事的层面，托尔斯泰对于无论是贵族生活还是战争场面的描绘，还是对人物性格命运的刻画，都给人一种很强的真实感和临场感。这种真实感当然得益于他本人丰富的人生经历，也来自于恐怖的观察力和对人的透彻理解。&lt;/p&gt;&#xA;&lt;p&gt;不过，超强的笔力和绝伦的文采，在我看来只能说是这部作品的基本和表面的一层（虽然在这一层上他绝对是当之无愧的大师），更重要的是他想表达的关于如何看待历史和个人意志的看法。这些看法他在书中不仅多次直接地对读者做了陈述，也融入了他的故事讲述里。关于战争，他既不喜欢很多史学家的视角，觉得他们的描述过于粗糙和简略，只会讲「X月X日，X军从X地移动至X地」「X月X日，X军在XX之战中取胜」；也不喜欢艺术家的视角，觉得它们只会描述一小支军队在一个较小范围的片面故事，且往往过度渲染了悲情与戏剧化的部分。他认为这些都不是真正的战争。&lt;/p&gt;&#xA;&lt;p&gt;战争爆发的原因是什么？拿破仑、英国国会、奥登堡大公、商人们、老兵和将军们、外交官们都有不同的看法，也都是可以理解的，而我们以现代人的视角还可以继续寻找到无穷多的原因，也许正是这些所有原因导致了这一事件的发生。而这其中，帝王的意志看起来发挥了比其他人更多的作用，但帝王的行动实际上也因为被更多人影响而看起来是注定和必然的。所谓的大人物，在托尔斯泰看来，他们只是给事件命名的标签罢了。他们同事件本身的关系极小，就像标签一样。「他们的每一行动，他们自以为是由他们的意志决定的，其实从历史的角度来看并不是可以随心所欲的，而是同历史的全部进程相关联，由永恒的力量注定的。」&lt;/p&gt;&#xA;&lt;p&gt;战场上发生了什么？士兵、军官、统帅，每个人看到和经历的都不一样。读完《战争与和平》之后恐怕更难回答这个问题，但至少我们知道我们曾经认为的那些事实是错误的。「几万人在练兵场上听命于一人的纪律，在进行生死决战的地方也会起同样的作用。凡是参加过战争的人都知道，这是多么错误。」我们甚至也不应该把它想成什么美丽或善良的事情，「几百万人犯下了全世界法庭在多少世纪里都记录不完的罪恶：暴行、欺骗、背叛、盗窃、伪造文件、印制伪钞、抢劫、纵火和杀人，但干这些事的人却并不认为这是犯罪。」「战争的目的是杀人，战争的手段是间谍、叛变、策反、居民破产、抢劫和盗窃居民来维持军队的给养；欺诈被称为足智多谋；军人的习性就是没有自由，只有纪律，以及懒散、无知、残酷、淫乱、酗酒。」&lt;/p&gt;&#xA;&lt;p&gt;你的对手是谁？作品的主人公之一尼古拉，曾有次与法国人正面交锋，并将对手击落马下，经验尚浅的他第一次清楚地看见了自己的对手是什么人——一个「脸年轻、苍白、溅满了泥，头发淡黄，下巴上有一个酒窝，眼睛浅蓝。整个模样一点不像战场上的敌人，而像家里的自己人」的年轻人。凯旋之后，他获得了赞赏、勋章和晋升，但他看见已经被俘虏的他的手下败将，这个活生生的真人，他感到内疚，感动困惑和不理解。他的爱国热情，他对「邪恶的法国人」的想象，在此刻被动摇了。&lt;/p&gt;&#xA;&lt;p&gt;战争的胜负到底由什么决定？由双方统帅的智慧决定吗？我们会看到，许多统帅的命令实际上是无法被执行的，事情实际上将如何发展，很大程度上取决于所谓的「人民的意志」。吊诡的是，我们甚至会看到统帅自己在战争的关键时刻，甚至可能对战局产生不了任何影响。&lt;/p&gt;&#xA;&lt;p&gt;总而言之，在托尔斯泰的历史观中，我们知道的最多的就是我们对真相一无所知。&lt;/p&gt;&#xA;&lt;p&gt;在全书的最后他还发表了自己关于自由意志的看法。他认为，自由与必然是对立和统一的，没有人完全自由，也没有人完全在必然之中，而我们往往过高地估计了自己「自由」的部分。&lt;/p&gt;&#xA;&lt;p&gt;读完《战争与和平》，你如果问我最大的感想是什么，我不会说是腐朽的贵族生活、阶级矛盾或者人情世故这些，我只想说，我觉得自己太无知了。但如果你再跟我提起随便一个什么概念名词，我会问：「你说的那个东西，具体指的是什么？」&lt;/p&gt;</description>
    </item>
    <item>
      <title>2023</title>
      <link>https://jrd.pub/240101_2023/</link>
      <pubDate>Mon, 01 Jan 2024 00:00:00 +0800</pubDate>
      <guid>https://jrd.pub/240101_2023/</guid>
      <summary></summary>
      <description>&lt;img src=&#34;https://jrd.pub/article_imgs/2023.jpeg&#34;&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;2023 过得相当满足。满足并不因为取得现世的成就（也没取得），而主要因为自己内在的状态变化和成长。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;生活轨迹在这一年许多变化。我在春天离开了前司，离开了朋友们，离开生活了超过 20 年的北京，搬家到杭州和爱人一起生活。在那之后又度过了长达 4 个月的休息。离开朋友们并拥有一个不算太短的假期，让我有了足够多面对自己和做自己想做的事的时间，休息得相当充分。夏末重新开始了工作，从事感兴趣的 AIGC 领域（虽然工作体验乏善可陈，好在倒是对身心没造成什么坏影响）。每天都能见到爱人的生活毫无疑问是幸福的，有关未来的画面里也都是两个人互相依靠的身影。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;这一年是过去人生中读得最多的一年。推理读得最多（个人年度最佳是白井智之的&lt;a href=&#34;https://book.douban.com/subject/36497658/&#34;&gt;《エレファントヘッド》&lt;/a&gt;），除此之外还读了不少其他的书和文章，有些与职业相关，更多则无关，回头看看还是觉得确实从中学到不少东西。读得多有客观因素（假期，重新工作之后每天有总计两小时的通勤时间，工作不忙），但无论如何，阅读在我的生活里开始真正地具有了相当的惯性。我喜欢这种惯性，也希望它一直在。&lt;/p&gt;&#xA;&lt;p&gt;阅读观在这一年有了还算充足的阅读量之后也有一些变化。我认识到，对于一个自己正待探索的主题，指望读一篇 / 一本就想搞明白是不现实的（即使它的名字就叫做「一篇 / 一本给你说明白XXX」），读完不懂太正常了，没什么可焦虑和自卑的。只要持续地、耐心地读相关的内容，最终会得到那个知识的，特别是当它已经被很多人探索过的时候。所谓「读错了」或者「不该读」这样的描述有时是不成立的。当下没用的信息不代表以后也没用，进一寸有一寸的欢喜。总之，阅读最重要的是一直在读。&lt;/p&gt;&#xA;&lt;p&gt;这一年里在阅读中最大的收获是对「活着」这个话题有了许多新的认识。一是关于前几年一度困扰许久的「为什么活」，在加缪的《西西弗神话》得到一个足够好的答案：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;而西西弗告诉我们，最高的虔诚是否认诸神而且搬掉石头，他也认为自己是幸福的。这个从此没有主宰的世界对他来讲既不是荒漠，也不是沃土。这块巨石上的每一颗粒、这黑黝黝的高山上的每一颗矿砂惟有对西西弗才形成一个世界。&lt;strong&gt;他爬上山顶所要进行的斗争本身就足以使一个人心里感到充实。应该认为，西西弗是幸福的。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;在这之后的下一个问题则是「如何活」，我想我也找到了一个相当好的答案。它第一次出现在我面前是夏天读陈嘉映的《何为良好生活》：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;我该怎样生活？我该怎样生活这个问题不仅是人生道路之初的问题，更是贯穿人的一生的问题。这个问题，主要不是选择人生道路的问题，不是选对或选错人生道路的问题，而是行路的问题——&lt;strong&gt;知道自己在走什么路，知道这条路该怎么走：我们是否贴切着自己的真实天性行路。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;最初读到这段的时候我其实并不以为意，但后来在许多日子里总会时不时想起它，再后来意识到它也许曾以不同的形式多次出现在我面前：「Follow your heart」「成功只有一个――按照自己的方式，去度过人生」「活得自洽一些」。噢，原来好像都是一回事儿，似乎一切能串起来了。我想要更多了解自己，我追问意义，我从虚无中走出，主动赋予一些事情意义，这就是我的活法。我是什么样的人，我认为什么有意义，这就是行路的方向。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;这一年里其他值得一提的小事儿还包括：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;踢球的次数大幅减少。假期里学会了自由泳，也算达成多年夙愿。最后一个月在跑步，这次的不同是终于知道如何享受它了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://triviadrome.substack.com/&#34;&gt;填字游戏&lt;/a&gt;更新了 10 期，新的一年希望能尝试新的角度。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;听了很多播客，个人年度最喜欢的播客节目是《不开玩笑 Jokes Aside》，最喜欢的主播是重轻，年度爆哭 &amp;amp; 感谢单集是&lt;a href=&#34;https://www.xiaoyuzhoufm.com/episode/643d909a9361a4e7c3cdd6ec&#34;&gt;《#10 离开北京前的最后一顿晚饭》&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;大概和压力变小有关，食欲和物质欲望都有明显下降。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;  &#xA;&lt;p&gt;我很喜欢这一年里多数时候自己的状态，也希望新的一年里自己能够维持住它。在此借用加缪的一句话，希望自己在新的一年能「保持必要的力量和清醒，去努力维持自己的宁静与尊严」。&lt;/p&gt;</description>
    </item>
    <item>
      <title>《毫无意义的工作 / Bullshit Jobs: A Theory》</title>
      <link>https://jrd.pub/231201_bullshit_job/</link>
      <pubDate>Thu, 30 Nov 2023 00:00:00 +0800</pubDate>
      <guid>https://jrd.pub/231201_bullshit_job/</guid>
      <summary>&lt;blockquote&gt;&#xA;&lt;p&gt;一篇读书笔记。&lt;/p&gt;&#xA;&lt;/blockquote&gt;</summary>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;一篇读书笔记。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;现代人的身上存在一种关于工作的矛盾感：一方面人们的尊严和价值观与工作牢牢挂钩，而另一方面人们又希望可以通过工作以外的东西定义自己。&lt;/p&gt;&#xA;&lt;p&gt;作者经过调查，发现这个世界上存在着相当多的&lt;strong&gt;狗屁工作（Bullshit Job）&lt;/strong&gt;。在这本书中，作者对其给出的定义是：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;一份毫无意义且往往有害的定期领薪水的职业，其无意义或有害程度是如此之高，乃至从事这份职业的人都无法为其找出合适的存在理由。虽然要从事这份工作有一个条件，即从事者不得不假装这份工作的存在是完全合理的。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;看到这样的定义，我们可能会以为这些岗位只出现在政府的公共部门，但其实不然，它们也同样出现在大型企业里。作者收集了上百个真实案例后，将狗屁工作分成五大类别，分别是：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;随从 / flunky&lt;/strong&gt;：存在的唯一目的或主要目的，是衬托另一个人的重要性，让这个人看起来很重要或者让这个人感到自己很重要。比如看门人 / 接待员。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;打手 / goon&lt;/strong&gt;：非传统意义上的打手，而泛指那些有一定进攻性（未必是武力上的）岗位，「存在的根本原因仅仅是有人花钱让其存在」，核心是「攻击性」和「欺骗性」。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;拼接修补者 / duct taper&lt;/strong&gt;：拼接修补者的岗位完全是为了应对组织的某个故障或缺陷而存在的。他们的工作内容就是处理其他人工作中遗留的空白地带或者烂摊子。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;打钩者 / box ticker&lt;/strong&gt;：这类工作者存在的全部意义或者绝大部分意义就在于，雇用他们的组织可以对外声称，他们正在做某件他们其实没有做的事情。&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;分派者 / taskmaster&lt;/strong&gt;：给他人派活儿或创造一些狗屁工作派给别人。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;（作者在介绍完每种类别后还引用了许多很有趣的例子，不在此赘述。）&lt;/p&gt;&#xA;&lt;p&gt;当然，这种分类方式中的五类之间并不是界限分明，而不包含所有的狗屁工作，实际上现实生活中的工作也很可能包含这里面的多种。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;狗屁工作给人带来的精神伤害是巨大的，这种痛苦源自工作中的虚伪和无目标感。为什么这些会让人如此痛苦？&lt;/p&gt;&#xA;&lt;p&gt;首先是关于人类做事的动机。作者提到&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;早在1901年，德国心理学家卡尔·格鲁斯就发现，婴儿在第一次发现自己的所作所为能对这个世界产生可预测的影响时，会表现得异常开心。而这种影响是什么，以及对婴儿是否有益，都跟这份开心毫无关联。……&lt;strong&gt;在他看来，快感就是为了行使权力而行使权力。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;假装自己是有用的，假装这个岗位是有用的。这种先让你产生自己有用的错觉，然后再被全然否定的经历，不仅仅是对自尊感的摧毁，还直接动摇了自我意识的根基。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;其次是关于时间的道德。在工作时间内一直工作，这是老板们希望发生的事情，也是某种现代专属的道德，是反人性的。为了对抗它，很多人只能在工作时间里假装工作。事实上，现代的这种出卖时间的工作方式和人类历史上大部分时间里人类的工作方式完全不同。作者提到：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;人类历史上大部分时候人们都认为正常的工作模式就是有规律地一阵猛干，然后休息，恢复之后进入新一轮猛干。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;不仅是工作，那时人类对时间的观念都与现代有很大不同。甚至，在人类历史的大多数时间里，人们对时间都没什么概念。在古希腊或古罗马，制陶工人只出售自己的产品，而不是时间。和出售时间类似的情况几乎只发生在奴隶身上。努尔人没有表示「时间」的词语，他们的生活参照系是他们日常的活动本身，即「时间并不是衡量工作的坐标，因为工作本身就是坐标」。直到时钟和钟表走入家家户户，人们才开始将时间视为坐标和一种资产，人们才开始使用「花费」「浪费」「节约」「耽误」这些词汇搭配它。于是，对时间的合理规划和使用开始和道德相关，这是一场道德变革。&lt;/p&gt;&#xA;&lt;p&gt;狗屁工作带给人的精神暴力还不止是「不开心」。人们会在工作中发现自己没有改变任何事情，或是觉得自己配不上自己的位置，人们都常常为此感到不知所措——「心理学家有时候称这种处境为“脚本缺失”」。另外，狗屁工作通常极大地消耗人的精力，进而扼杀人的创造力。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;那么，为什么会有这么多狗屁工作？从理论上来说，无意义的工作岗位和资本主义的逐利天性是相背的。为什么这么多年这个现象都被大家忽略了？作者认为：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;这个现象的部分原因就是大家从根本上拒绝相信资本主义具备造成此种结果的能力。&lt;/p&gt;&#xA;&lt;p&gt;……另一个原因是我们发展出了一套谈论工作本质之变革的话语体系。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;我们可以根据职业所在的产业（三大产业：农业/工业/服务业）对职业进行划分。我们知道随着经济的发展，第三产业即服务业的占比会越来越高——事实也如此。什么是服务业？我们通常会首先想到餐馆的服务员、理发师、售货员等等，但这些岗位的劳动力占比其实非常稳定。那么增多的是哪些岗位呢？其实是行政人员、顾问、办事员、会计、信息技术专业人士等。所谓的「服务业」中真正在增加的正是这批人，而且从20世纪50年代起，增速堪称惊人。&lt;/p&gt;&#xA;&lt;p&gt;这其中首先有政府的因素。必须承认，社会工程确实会有。一些社会中，全民就业的政策指导下会导致各种无用岗位自上而下有意识地、刻意地被创建。其次，即使在资本主义体制下，所有的经济制度都是以全民就业的理想为前提的。在「更多就业」「创造就业」这些口号中，从来没有要求增加有意义的岗位。最后，还存在有意识的公共政策层面。统治阶级需要维持这些无用岗位。一个制度的改革可能会最终导致社会上减少数以百万计的岗位——即使这项改革会明显提升效率。&lt;/p&gt;&#xA;&lt;p&gt;而关于企业的管理制度，作者指出：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;……因为管理主义的背后就是封建主义本身：这种新式封建主义充分伪装了自己，用管理主义作为遮挡，藏于其间；财富和地位的分配已不再依据经济，而是依据政治因素。&lt;/p&gt;&#xA;&lt;p&gt;……在任何以占有和分配商品为基础的政治经济体制中，非常多人从事的工作就是在整个系统中来回传送各种资源，而不是真正去创造、推进或维修这些商品，这一庞大的群体往往会将自己分成非常多的等级。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;那么，为什么整个社会似乎这个状况无动于衷呢？&lt;/p&gt;&#xA;&lt;p&gt;首先，我们对工作价值的判断往往是模糊的。我们在说「价值 / value」的时候常常仅指经济意义上的评价，而说「价值观 / values」的时候则是另一些意义上的评价——它们通常无法被量化。企业的利润是容易被计算出来的，而其他的，比如「社会价值」，则常被忽略——而这对很多人来说其实很重要。&lt;/p&gt;&#xA;&lt;p&gt;在人类历史上，封建社会是由众多仆从工作构成的大型体系。这里说的仆从不仅指通常意义上的奴隶，事实上低级别封建主也是高级别封建主的仆从。从现代视角上看，做仆从就是一份领工资的工作。然后人类又在这个过程中发展了「规矩」。在资本主义社会，资本主义制度本身又对「工作」和「劳动」进行了诸多美化，赋予其神圣的意义。&lt;/p&gt;&#xA;&lt;p&gt;作者指出，仅仅在一代人的时间里，劳动的价值也在从「生产」转向了「消费」，「象征地位的不再是生产力，而是购买力」。而作者认为，转变的主要原因是之前的劳动价值理论是存在瑕疵的：「生产」被过分关注了。事实上在那个时代，并没有那么大比例的人在从事「生产」，更多人在做的是所谓「非生产工作的」的「照料工作」——「女仆、擦鞋匠、清洁工、厨师、护士、司机、教师、妓女、看门人、小贩、地铁售票员」。照料工作总体上被看作面向他人的工作，并且通常包含解释、移情和理解。但所有的移情、所有的设身处地都是单方面的——这也在很大程度上让它变成了工作。作为商品的照料工作的关键并不在于有人在“照料”，而在于其他人“不在照料”。工作的对象，那些购买「仆从服务」的人是不需要付出这些情绪劳动的。这反过来也使得从事这些工作的人变成了最会察言观色的一群人。「照料」的价值是无法量化和常被忽略的，却是非常重要的。&lt;/p&gt;&#xA;&lt;p&gt;在另一个层面上，我们和他人是联系的，我们的大部分行为都在有意识地照顾他们。这种照顾的关系通常要求我们在大体上维护这个世界的原貌——这也意味着，即使我们很讨厌所处的制度，但出于对「他/她/它者」的爱，我们还是会维持这个的制度结构。&lt;/p&gt;&#xA;&lt;p&gt;于是，回到为什么狗屁工作会激增，作者指出：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;今日狗屁工作激增，主要原因在于掌控富裕经济体（同时也在逐渐掌控非富裕经济体）的管理主义封建制度的独特性。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;在最后一章，作者尝试讨论解决这种状况的思路，他认为，许多的方案最后都并不能解决问题，反而增加了一大堆狗屁工作，许多的福利政策到最后更是会带来预期之外的反效果，作者认为应当让每个人自己来决定自己做什么来造福人类。在全书的最后，作者说：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;大部分人都喜欢在抽象层面谈论自由，甚至声称自由是最重要的事情，是值得所有人去奋斗，甚至付出生命的事情，但是很少有人去思考自由的生活具体意味着什么。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;br&gt;&#xA;&lt;h3 id=&#34;reference&#34;&gt;Reference&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://book.douban.com/subject/35929434/&#34;&gt;https://book.douban.com/subject/35929434/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>找工作、面试与假期</title>
      <link>https://jrd.pub/230805_job_interview_vacation/</link>
      <pubDate>Sat, 05 Aug 2023 00:00:00 +0800</pubDate>
      <guid>https://jrd.pub/230805_job_interview_vacation/</guid>
      <summary></summary>
      <description>&lt;img src=&#34;https://jrd.pub/article_imgs/ysm_flowers.jpeg&#34; style=&#34;width: 100%;&#34;&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;4月从前司离了职，休息了一段时间，最近即将开始下一段职业经历，在此写下最近所想。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;过去几年里，我对「工作」逐渐有了这样的认识：人和岗位之间，匹配最重要。另一个角度说，「能力」「水平」应当是有多维度的，更多数人在各个维度上有长有短，而岗位对能力的需要也是分维度有高有低。有了这样的认识，我找工作时的焦虑感减少了很多，并且十分相信「自己一定能收到 Offer」。当然，这需要建立在与市场上的机会有充分接触的前提下。此外，应当尽可能多地了解当下的招聘状况，并相应地调整期待。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;面试是找工作中必经的部分。基于上面的认识，面试的目的对双方来说，都是判断是否匹配。我一向觉得通常的面试流程是非常低效的，不仅包括同样的话需要对多家公司或者同家公司不同轮次的不同面试官讲，更包括是很多时候一场面试中大部分时间里双方的讨论，对解答「是否匹配」这个问题的帮助很小。当然，很可能也并不存在什么更好的方式。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;在某次面试中，我意外地对所谓「职业规划」有了一点新的认识。那位面试官照本宣科地问我有什么职业规划，我本想也给他一个参考答案般的无聊回答，但那刻突然想起很多在前司工作时候的种种。我对他说，与其说考虑自己到什么时间应该负责多大的团队/业务，掌握多深的专业知识/技能，不如说成为什么样的工程师。我在前司工作时见识到了好几位非常「职业」的工程师，我由衷地欣赏 Ta 们身上的职业气质，具体大致包括如何面对业务需求，如何考虑工程上的设计，如何稳定地产出。我希望自己几年后可以像他们一样。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;这次的无业时间持续了将近四个月。读完了 20 多本书，学会了自由泳，学了一点 Swift 和 Vue，打通了《塞尔达 · 王国之泪》。规律作息，健康饮食，经常运动，每天都能见到爱人。几乎已经是我所能想象的最好的，两段工作之间的假期的样子了。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在 Deta Space 部署 Vue &#43; Python</title>
      <link>https://jrd.pub/230710_deta_vue_py/</link>
      <pubDate>Mon, 10 Jul 2023 00:00:00 +0800</pubDate>
      <guid>https://jrd.pub/230710_deta_vue_py/</guid>
      <summary>&lt;blockquote&gt;&#xA;&lt;p&gt;Deta is building a personal computer on the internet — “a personal cloud” — called Deta Space. If you build software for the internet, Space wants to make it dramatically easier to do so. If you’re a user of the internet, Space wants to bring the freedom of personal computing to your life online.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;本文讨论如何在其上部署一个 Vue 为前端 + Python 为后端的服务。&lt;/p&gt;</summary>
      <description>&lt;blockquote&gt;&#xA;&lt;p&gt;Deta is building a personal computer on the internet — “a personal cloud” — called Deta Space. If you build software for the internet, Space wants to make it dramatically easier to do so. If you’re a user of the internet, Space wants to bring the freedom of personal computing to your life online.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;本文讨论如何在其上部署一个 Vue 为前端 + Python 为后端的服务。&lt;/p&gt;&#xA;&lt;h3 id=&#34;目录结构&#34;&gt;目录结构&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;some_project&#xA;├── Spacefile&#xA;├── backend&#xA;│   ├── main.py&#xA;│   ├── requirements.txt&#xA;│   └── ...&#xA;└── frontend&#xA;    ├── dist&#xA;    ├── index.html&#xA;    ├── node_modules&#xA;    ├── package-lock.json&#xA;    ├── package.json&#xA;    ├── public&#xA;    ├── src&#xA;    ├── vite.config.js&#xA;    └── ...&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;spacefile&#34;&gt;Spacefile&lt;/h3&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;# Spacefile Docs: https://go.deta.dev/docs/spacefile/v0&#xA;v: 0&#xA;micros:&#xA;  - name: frontend&#xA;    src: frontend&#xA;    engine: vue&#xA;    primary: true&#xA;    path: app&#xA;    public: true&#xA;    serve: dist/&#xA;  - name: backend&#xA;    src: backend&#xA;    engine: python3.9&#xA;    public: true&#xA;    path: api&#xA;    dev: gunicorn main:app&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;P.S.: 2023.06 发现的小问题是如果 Python 的依赖没有装全，后端服务会&lt;code&gt;502&lt;/code&gt;，但 Runtime Log 中并不能看到报错。&lt;/p&gt;&#xA;&lt;p&gt;按照如上的方式配置好&lt;code&gt;Spacefile&lt;/code&gt;后，便可以直接根据通过&lt;code&gt;path&lt;/code&gt;来将请求相应地路由到前/后端。在这个例子中，我们如果想要在前端的 Javascript 代码中访问后端接口，只需：&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;fetch(`/api/xxx`);&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;即可。&lt;/p&gt;&#xA;&lt;h3 id=&#34;refrence&#34;&gt;Refrence:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://deta.space/docs/en/build/reference/spacefile&#34;&gt;https://deta.space/docs/en/build/reference/spacefile&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>2022</title>
      <link>https://jrd.pub/230101_2022/</link>
      <pubDate>Sun, 01 Jan 2023 00:00:00 +0800</pubDate>
      <guid>https://jrd.pub/230101_2022/</guid>
      <summary></summary>
      <description>&lt;br&gt;&#xA;&lt;p&gt;去年年终总结的结尾：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;2022年，想要更勇敢，&lt;del&gt;想得到更多爱和拥抱&lt;/del&gt;，想找到和创造更多快乐。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;结束时回望这一年，想要非常开心地说：2022，是我得到很多爱和拥抱，找到和创造了不少快乐的一年。&lt;/p&gt;&#xA;&lt;p&gt;这一年最大的好事是遇到了无与伦比的爱人。她善良、真诚、美丽、可爱，似乎具有无穷的光辉。我在亲密关系中得到相当多的支持和鼓励，也从中学到很多。与爱人的每一天都开心，见不到爱人的每一天都煎熬：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;有了你開心D 乜都稱心滿意&lt;br&gt;&#xA;鹹魚白菜也好好味&lt;br&gt;&#xA;我與你永共聚 分分鐘需要你&lt;br&gt;&#xA;你似是陽光空氣&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;这一年的生活算得上十分充实。在球队得到非常多的快乐：过了过去几年最好的一次生日，看见大家的进步，和大家庆祝第一次胜利，见证数不清的精彩时刻。足球伟大。看了比2021年多了快一倍的书，喝了不少咖啡，开了不少车，下了不少馆子，走了不少路。很开心。&lt;/p&gt;&#xA;&lt;p&gt;尝试着做了一些好玩的东西。把朋友送我的纸质年历电子化分享给更多的人；和朋友探索了Wordle本地化的可能性；落地了过去几年都萦绕在心头的填字游戏项目；新的一年希望做更多好玩的东西。&lt;/p&gt;&#xA;&lt;p&gt;这一年在思维上最重要的进步可能是发现了「叙事」的重要性。我开始察觉到过去的几年我给自己的「悲惨叙事」太多了，很大程度上造成了自己的沉沦。于是开始留意自己对每一件事的「叙事」，避免用夸大和拥有无限验证效力的修辞，回到具体的当下。十分喜欢&lt;a href=&#34;https://store.steampowered.com/app/1049410/_Superliminal/&#34;&gt;《Superliminal》&lt;/a&gt;结尾的一段话：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;你的人生始终会是一场挣扎，永远都会有困境。但今天，你有机会用不同的视角感知世界。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;要说遗憾的话，由于长期和同事处于远程协作的状态，工作体验十分一般，成就感也减弱了很多。技术上的成长也比较有限。希望新的一年可以改善吧。&lt;/p&gt;&#xA;&lt;p&gt;2023年有什么祝愿呢？此刻竟有点不知道还可以盼望什么更好的。希望爱人、朋友和家人身体健康，一切都好。&lt;/p&gt;</description>
    </item>
    <item>
      <title>2021</title>
      <link>https://jrd.pub/220101_2021/</link>
      <pubDate>Sat, 01 Jan 2022 00:00:00 +0800</pubDate>
      <guid>https://jrd.pub/220101_2021/</guid>
      <summary></summary>
      <description>&lt;p&gt;&lt;br&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/2021_bg.jpg&#34; style=&#34;width: 100%;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;照片是六月份在海边所摄，彼时躺椅上的我未曾意识到，那就是我这一年为数不多的放松时刻了。想用一个词概括过去的一年，也许「辛苦」最合适不过。辛苦在身上，也在心里。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;今年里有好几个月工作异常密集和繁重。有一阵子，工作会从睁眼开始，到闭眼结束，甚至入侵到梦里。我的精神紧绷到极点，status里挂满了😫，以至于某次犯了一点小小的过失后，我坐在家里地板上喘了一刻钟的粗气才缓过来。诚然这个过程中得到不少长进，比过去几年每年似乎都多，但整个人也脱掉了几层皮。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;家里的状况持续在发生变化。有时我以为一切都要好起来了，后来发现只是昙花一现。命运步步紧逼，要我接受缺少基本牌的人生。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;得了一场小小的癌症。甲状腺乳头状癌是一种最轻最小的癌症，但依然需要我放弃自己的甲状腺，终身服药。于是做了一场小小的手术。开刀和康复算不上太痛苦，但确诊前的惶恐和焦虑着实磨人。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;因为以上种种，2021年度过了许多个紧握双拳咬紧牙关独自流泪的夜晚。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;对于美食/酒/咖啡的兴致减退很多。很多天里没有什么食欲，复购了很多次麦乐送卡，家中煤气灶一度蒙尘。去喝酒的次数大大减少。手冲咖啡的技艺变得生疏，开始允许自己喝更多外卖咖啡和三顿半。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;大概领悟了几件事：&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;要把取悦自己作为头等大事。主动寻找快乐，减少内耗。想做的事情快做，想不通的问题少想。从前总觉得一切事情都是值得反复思考的，思考明白得到答案才能真正解脱。后来有了一些思维上的转变，倒也不必逼自己事事要想清楚，想到想不动的地方，下个阶段性结论，带着它坚定走下去也没问题。诸如&amp;quot;爱不爱我，要不要做，可不可以&amp;quot;的问题，要快下决断。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;今年读到最切中我之病的一段话是：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;&lt;em&gt;A human creature born abnormally, inhumanly sensitive. To him&amp;hellip; a touch is a blow, a sound is a noise, a misfortune is a tragedy, a joy is an ecstasy, a friend is a lover, a lover is a god, and failure is death. Add to this cruelly delicate organism the overpowering necessity to create, create, create—so that without the creating of music or poetry or books or buildings or something of meaning, his very breath is cut off from him. He must create, must pour out creation. By some strange, unknown, inward urgency he is not really alive unless he is creating.&lt;/em&gt;&amp;rdquo;  &amp;mdash;Pearl S. Buck&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;要创造。只有创造才能让我不再过度反刍，让我感到存在。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;放轻松一些。不需要太在意别人的目光，犯了错误没关系，出了丑没关系，不懂也没关系。减少对未来的过度忧虑，把目光放在当下。坏事还会继续发生的，但天从来不会塌。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;自己的功课得自己做。这一年，身边朋友们和我都遇到了各自的大难题，我为他们难过，也相信他们为我难过。但支持与鼓励之外，每个人需要自己直面问题，自己解决问题。没有作业可抄。&lt;/p&gt;&#xA;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;&#xA;&lt;p&gt;那么，2021年有找到快乐的事情吗？也有一点的。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;认识了 Haruwin，一支可爱、充满快乐的足球队。最初先是去现场看比赛，然后也开始一起训练。在那里认识了一群很可爱的人。我向我的每个朋友讲足球队的事情，讲我很久没见识过这么青春、热血、健康的事业了。&lt;/p&gt;&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/haruwin.png&#34; style=&#34;width: 30%;&#34;&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;开车。十月找了陪练重拾驾驶技能，之后开始自己租车四处游荡。去哪里并不很重要，只要是能握方向盘和踩油门就好。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;写 Javascript。学习写 Tampermonkey script 予自己方便，学习写 Web App 做好玩的东西。新的一年想落地几个有趣的 side project。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;2021年，生活近乎枯槁，人也常常紧张得喘不过气，感觉自己失去蛮多。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;2022年，想要更勇敢，&lt;del&gt;想得到更多爱和拥抱&lt;/del&gt;，想找到和创造更多快乐。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>2020</title>
      <link>https://jrd.pub/210101_2020/</link>
      <pubDate>Fri, 01 Jan 2021 00:00:00 +0800</pubDate>
      <guid>https://jrd.pub/210101_2020/</guid>
      <summary></summary>
      <description>&lt;p&gt;&lt;br&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/20200102_japan.jpg&#34; style=&#34;width: 70%;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;br&gt;今年最值得开心的事情，是在「自我认同」上的进步。可以肯定地讲，&lt;strong&gt;2020年，我比过去任何一年都更爱自己了&lt;/strong&gt;。即使依然会遭遇挫折，也时常对身边的事情感到焦虑，但我发现这些都不会夺去我对自己的爱。这个进步简直太棒了。它甚至是一个非常主要的自信来源，可以源源不断地提供正向的反馈。&lt;/p&gt;&#xA;&lt;p&gt;&lt;br&gt;年中换了工作，从洋葱离职，来了多抓鱼。第一次做Web后端工程师，不懂的事情很多，工作模式与从前也不大一样，不过好在身边终于同事可以请教和讨论，再也不用自己一个人闷头搞了。新的工作也让我意识到自己在工作上的诸多不足，让我意识到自己还算不上一个「靠谱」的工程师，做事情常常图快而考虑不周。以及目前对基础技术理论的探究还不够主动和深入，新的一年需要沉下心读技术书。&lt;/p&gt;&#xA;&lt;p&gt;&lt;br&gt;生活享受方面，做饭/咖啡/喝酒一个也没丢下：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;依然在坚持带饭，不过随着时间推移，我感到进入了一个瓶颈期，发掘创意变得困难了，于是开始看一些烹饪的书，企图找到一些点子，新的一年除了考虑读一些烹饪书，还可以考虑练习几道大菜；&lt;/li&gt;&#xA;&lt;li&gt;依然在坚持做手冲，也尝到不少有趣的豆子。入了Fellow的壶和惠家ZD-10，装备已经可以算是比较完善了，不过今年在技巧上的钻研比较少，导致出品会不太稳定，新的一年可以多打磨一下技艺；&lt;/li&gt;&#xA;&lt;li&gt;今年喝了不少酒，喝Whisky的时候会开始认真地记一点taste note。最后四个月几乎每周都会去一次Cocktail Bar，新的一年希望能在酒类鉴赏上钻得更深一些。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;新的一年，在享受生活这个话题上，我还想知道更多更多。&lt;/p&gt;&#xA;&lt;p&gt;&lt;br&gt;其他值得一提的事情：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;此前一直探索的SNS方案终于有了答案：Mastodon。8月份的时候自建了&lt;a href=&#34;https://cay.jrd.pub&#34;&gt;一个Mastodon实例&lt;/a&gt;，我终于有了一个舒适地发日常的地方；&lt;/li&gt;&#xA;&lt;li&gt;亲密关系方面今年可以说学到不少：秋天的时候收获了一段非常短暂的恋情，结局虽然很糟糕，但在其中看到了自己身上的桎梏，也摒弃了一些存在已久的完美主义倾向；11月慕名去参加了凉意的亲密关系工作坊，学到最重要的道理是「真爱不是一个一步到位的过程，我们不是找到真爱，而是步向真爱，不是获得亲密，而是步向亲密」；读了&lt;a href=&#34;https://book.douban.com/subject/30410452/&#34;&gt;《道德浪女》&lt;/a&gt;，对于亲密关系有了许多新的认识；&lt;/li&gt;&#xA;&lt;li&gt;疫情限制了活动范围，于是有了更多时间来观影/看书，今年的确也看了比往常更多的书和影视剧。加入了一家做二手书的公司后，发现了更多有意思的书，新的一年，要读更多的书；&lt;/li&gt;&#xA;&lt;li&gt;做了一些定投，不过做得不太细致，最终年化收益做到了20%左右。新的一年可以考虑优化一下理财配置；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;br&gt;&#xA;2021年，希望一切都好。&#xA;&lt;p&gt;以上。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Mastodon优化</title>
      <link>https://jrd.pub/201129_mastodon_optimize/</link>
      <pubDate>Sun, 29 Nov 2020 00:00:00 +0800</pubDate>
      <guid>https://jrd.pub/201129_mastodon_optimize/</guid>
      <summary>&lt;p&gt;近期自建了Mastodon单用户实例，使用默认配置且不添加扩展功能的情况下一个实例需要2G RAM，本文主要讨论如何降低内存开销以及一些其他方面的优化。&lt;/p&gt;</summary>
      <description>&lt;p&gt;近期自建了Mastodon单用户实例，使用默认配置且不添加扩展功能的情况下一个实例需要2G RAM，本文主要讨论如何降低内存开销以及一些其他方面的优化。&lt;/p&gt;&#xA;&lt;h3 id=&#34;jemalloc&#34;&gt;Jemalloc&lt;/h3&gt;&#xA;&lt;p&gt;Mastodon的服务端是用Ruby开发的，其本身对内存的消耗就很大，所以首先便可以考虑对Ruby本身做一下优化；&#xA;&lt;a href=&#34;http://jemalloc.net/&#34;&gt;Jemalloc&lt;/a&gt;是一款通用的内存分配器，支持对多种语言进行内存使用的优化，其中便包含Ruby。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;apt install libjemalloc-dev&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;su - mastodon&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;RUBY_CONFIGURE_OPTS&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;--with-jemalloc rbenv install 2.6.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rbenv global 2.5.1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;exit&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart mastodon-sidekiq&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart mastodon-streaming&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;systemctl restart mastodon-web&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;优化之后的效果非常显著，内存占用直接掉了一半；&lt;/p&gt;&#xA;&lt;h3 id=&#34;搜索功能及其他&#34;&gt;搜索功能及其他&lt;/h3&gt;&#xA;&lt;p&gt;通过Jemalloc已经可以将Mastodon实例的占用降至1G以下，但如果想要再增加&lt;a href=&#34;https://docs.joinmastodon.org/admin/optional/elasticsearch/&#34;&gt;搜索功能&lt;/a&gt;，1G依然有些捉襟见肘，甚至直接打开ElasticSeach时，2G内存也会被占满；&lt;/p&gt;&#xA;&lt;p&gt;Mastodon实例本身依然还有一些优化的空间，官方也给出了&lt;a href=&#34;https://docs.joinmastodon.org/zh-cn/admin/scaling/&#34;&gt;相关文档&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;对于使用Java开发的ElasticSearch，很容易想到其实可以通过减少JVM分配来降低它的内存占用，相关的配置文件在/etc/elasticsearch/jvm.options；&lt;/p&gt;&#xA;&lt;p&gt; &lt;br&gt;&#xA;TBC.&lt;/p&gt;&#xA;&lt;h3 id=&#34;refrence&#34;&gt;Refrence:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://thomas-leister.de/en/mastodon-save-ram-jemalloc/&#34;&gt;https://thomas-leister.de/en/mastodon-save-ram-jemalloc/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Alternative to Postman: Insomnia</title>
      <link>https://jrd.pub/200413_insomnia/</link>
      <pubDate>Tue, 14 Apr 2020 12:37:05 +0800</pubDate>
      <guid>https://jrd.pub/200413_insomnia/</guid>
      <summary>&lt;p&gt;I gradually dissatisfied with Postman recently for many reasons, then I found a open source alternative &amp;mdash; &lt;a href=&#34;https://insomnia.rest/&#34;&gt;Insomnia&lt;/a&gt;.&lt;/p&gt;</summary>
      <description>&lt;p&gt;I gradually dissatisfied with Postman recently for many reasons, then I found a open source alternative &amp;mdash; &lt;a href=&#34;https://insomnia.rest/&#34;&gt;Insomnia&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;p&gt;It&amp;rsquo;s quite simple to start using Insomnia if you have used Postman before. You can create workspaces, folders of request, environment variables just as what you can do in Postman. Besides, you can also parse response by JSONPath, which is not supported in Postman.&lt;/p&gt;&#xA;&lt;p&gt;Furthermore, Insomnia offers options of pay to support file sync and remove the restriction of the free version. I explored the possibility of DIY file sync, and have a crude idea: implement by Dropbox.&lt;/p&gt;&#xA;&lt;p&gt;First, move the Insomia data to the Dropbox folder, then set soft link.&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;#Mac&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -s ~/Dropbox/Insomnia_bakup ~/Library/Application&lt;span style=&#34;color:#f1fa8c&#34;&gt;\ &lt;/span&gt;Support/AddressBook/Insomnia&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;#Windows powershell&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mklink %appdata%&lt;span style=&#34;color:#f1fa8c&#34;&gt;\I&lt;/span&gt;nsomnia C:&lt;span style=&#34;color:#f1fa8c&#34;&gt;\U&lt;/span&gt;sers&lt;span style=&#34;color:#f1fa8c&#34;&gt;\x&lt;/span&gt;xx&lt;span style=&#34;color:#f1fa8c&#34;&gt;\D&lt;/span&gt;ropbox&lt;span style=&#34;color:#f1fa8c&#34;&gt;\I&lt;/span&gt;nsomnia_bakup&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;However, there are still issues in this case. When Insomnia is open on multi device, they both read and write the same file in Dropbox directory, there&amp;rsquo;ll be conflict. Dropbox would keep both version in the directory. I haven&amp;rsquo;t figure out a better way fixing this issues.&lt;/p&gt;&#xA;&lt;h3 id=&#34;reference&#34;&gt;Reference:&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;a href=&#34;https://007.li/insomnia.html&#34;&gt;https://007.li/insomnia.html&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>评论插件与SNS探索</title>
      <link>https://jrd.pub/200403_comments_and_sns/</link>
      <pubDate>Fri, 03 Apr 2020 16:00:59 +0800</pubDate>
      <guid>https://jrd.pub/200403_comments_and_sns/</guid>
      <summary>&lt;p&gt;在&lt;a href=&#34;https://jrd.pub/170507_notice/&#34;&gt;多说关闭服务&lt;/a&gt;将近三年之后，最近突然又想给自己的博客重新加上评论功能（虽然估计没什么实际作用……），以及最近对SNS也做了一些新的探索。&lt;/p&gt;</summary>
      <description>&lt;p&gt;在&lt;a href=&#34;https://jrd.pub/170507_notice/&#34;&gt;多说关闭服务&lt;/a&gt;将近三年之后，最近突然又想给自己的博客重新加上评论功能（虽然估计没什么实际作用……），以及最近对SNS也做了一些新的探索。&lt;/p&gt;&#xA;&lt;h4 id=&#34;评论插件&#34;&gt;评论插件&lt;/h4&gt;&#xA;&lt;p&gt;多说的替代品不算少，但在各个方面能比得上多说的寥寥无几。这些替代品大致可以分为几类：一类是搜狐畅言*、*网易云跟贴（也已关闭）之类的国内门户网站提供的服务，它们的评论插件样式中带有强烈的品牌特征，嵌入到个人博客中难免风格不匹配；一类是Disqus、HyperComments和Livere一类的外国第三方服务，他们优劣各有不同，通常的问题是从国内的网络访问服务可能会比较缓慢，甚至根本无法从国内访问到，再者是由于是外国提供的服务，在SNS登陆的支持上通常选择的也是Twitter和Facebook之类的国外SNS，有些优质的服务价格不菲（对于我博客的用量而言），有些样式需要自己花工夫修改和增补CSS；还有一类是基于GitHub Issues的评论服务，依托Github Issues做评论数据的存储和Github的账号服务，这类服务的优劣也很明显：需要Github账号，国内网络访问也会受到一定程度的影响。&lt;/p&gt;&#xA;&lt;p&gt;我其实一开始打算直接用LiveRe（即来必力）来着，LiveRe对国内的SNS也算是不错了，访问速度略慢但是等一会儿还是可以的。让我比较烦恼的问题是，LiveRe的样式，在我博客的底色上，颜色和样式都有点不太融洽，我尝试自己写CSS修改，但囿于个人的配色能力，改来改去还是觉得不满意。后来转念一想，会看我博客的人大概都是圈内的人，也大多都有GitHub账号，索性直接从基于Github Issues的评论服务中挑一个好看的好了，于是最后决定采用&lt;a href=&#34;%5Bhttps://gitalk.github.io/%5D(https://gitalk.github.io/)&#34;&gt;Gitalk&lt;/a&gt;。配置方法不再赘述，非常简单方便。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;sns&#34;&gt;SNS&lt;/h4&gt;&#xA;&lt;p&gt;很长时间以来，我对SNS的态度摇摆不定，一方面，我对日常生活确实有表达欲，很想po一些内容，但另一方面，每个SNS都似乎不能让我畅快地抒发心情。在此之前的一小段时间里一直在用即刻的内测版Jellow，但逐渐地，中心化的SNS社区依然会让我感到不适。于是开始考虑自建SNS是否可行，以及是否有某种替代方案。新的方案希望最好是去中心化的，可自动化的，同时po内容也足够便利。经过一番探索。最终，我发现了&lt;a href=&#34;%5Bhttps://joinmastodon.org/%5D(https://joinmastodon.org/)&#34;&gt;Mastodon&lt;/a&gt;。&lt;/p&gt;&#xA;&lt;p&gt;简单说，Mastodon就是可以自建的SNS，任何人都可以用开源的代码部署一套Mastodon，创建一个新的Mastodon instance，而且通常情况下，这些Mastodon宇宙（不同的instance）之间也是可以互联的。我发现自己一年前注册的&lt;a href=&#34;https://o3o.ca/&#34;&gt;https://o3o.ca/&lt;/a&gt; 其实也是Mastodon的一个instance；&lt;/p&gt;&#xA;&lt;p&gt;App方面，我下了Mastodon官网推荐的Tusky。原想这类开源生态中的免费app大概只能提供可用的基本功能，不能过多奢望UI和产品设计。意外的是，Tusky的UI和Twitter的app非常像。更妙的是Tusky还支持在下拉菜单中添加Shortcut按钮，点击按钮可以直接进入Compose页，而Twitter都并没有做过类似（哪怕是桌面Widget）的支持。&lt;/p&gt;&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/tusky.jpg&#34; style=&#34;width: 50%;&#34;&gt;&#xA;&lt;p&gt;此外，利用Mastodon提供的API，还可以用IFTTT做Applet，把其他地方的动态也同步到Mastodon上。比如利用我的豆瓣RSS更新作为Trigger，用Webhooks把豆瓣广播转发到Mastodon上。&lt;/p&gt;&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/ifttt_mastodon.jpg&#34; style=&#34;width: 50%;&#34;&gt;&#xA;&lt;p&gt;不出意外的话，自建Mastodon应该就是我用SNS的终点了。&lt;/p&gt;&#xA;&lt;p&gt;不禁感叹：&lt;strong&gt;开源真好啊！&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Nginx中proxy_pass的斜杠问题</title>
      <link>https://jrd.pub/200113_proxy_pass_slash/</link>
      <pubDate>Mon, 13 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/200113_proxy_pass_slash/</guid>
      <summary>&lt;p&gt;在Nginx中配置proxy_pass时，需要注意斜杠的问题。&lt;/p&gt;</summary>
      <description>&lt;p&gt;在Nginx中配置proxy_pass时，需要注意斜杠的问题。&lt;/p&gt;&#xA;&lt;p&gt;如&lt;a href=&#34;http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass&#34;&gt;官方文档&lt;/a&gt;所述：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;If the proxy_pass directive is specified with a URI, then when a request is passed to the server, the part of a normalized request URI matching the location is replaced by a URI specified in the directive:&lt;/p&gt;&#xA;&lt;p&gt; location /name/ {&lt;br&gt;&#xA;   proxy_pass http://127.0.0.1/remote/;&lt;br&gt;&#xA; }&lt;/p&gt;&#xA;&lt;p&gt;If proxy_pass is specified without a URI, the request URI is passed to the server in the same form as sent by a client when the original request is processed, or the full normalized request URI is passed when processing the changed URI:&lt;/p&gt;&#xA;&lt;p&gt;  location /some/path/ {&lt;br&gt;&#xA;    proxy_pass http://127.0.0.1;&lt;br&gt;&#xA;  }&lt;/p&gt;&#xA;&lt;p&gt;Before version 1.1.12, if proxy_pass is specified without a URI, the original request URI might be passed instead of the changed URI in some cases.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;当proxy_pass后指定的是带斜杠的链接（其实就是URI，上例是一般情况，特别情况是http://127.0.0.1/ ）时，请求的链接会被替换。如上例中，若请求的路由为/name/xxx，则下一站实际收到的请求路由为/remote/xxx；&lt;/p&gt;&#xA;&lt;p&gt;当proxy_pass后指定的是不带斜杠的格式（即非URI），则不做任何替换，直接将原请求路由转发至下一站；&lt;/p&gt;</description>
    </item>
    <item>
      <title>2019</title>
      <link>https://jrd.pub/200101_2019/</link>
      <pubDate>Wed, 01 Jan 2020 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/200101_2019/</guid>
      <summary>&lt;p&gt;2019，苦甜之年。&lt;/p&gt;</summary>
      <description>&lt;p&gt;2019，苦甜之年。&lt;/p&gt;&#xA;&lt;p&gt;苦甜，是鸡尾酒中的一类特别的风味，代表的鸡尾酒是Negroni。使用苦酒或在酒中加入苦精，配合甜味美思，亦苦亦甜，私以为算是可以代表成年人世界的一种味道。2019年，于我，大致就是这种味道。&#xA;&lt;img src=&#34;https://www.seriouseats.com/recipes/images/2015/04/20150323-cocktails-vicky-wasik-negroni-1500x1125.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;先说最重要的。2019年的许多时候，我都被低落和焦虑的情绪笼罩着。这些负面情绪的起初来自于现世中家庭/学习/工作/未来的许多烦恼，后进而演变成来自对意义的无穷追问。我努力尝试修复这个问题，做了许多努力。它们确实都是有用的，而后我也得到了可以暂时稳定自己的结论，算是在去年答案上的一个延伸：继续追问下去，一切确实都是没有意义的，但唯有快乐是被我赋予了意义的事情。如果不能快乐，那活着还有什么意义呢？以及，曾在一个失眠的深夜，还看到过另一种出路，是周国平的一段文字：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;「生命的意义在于爱。」&lt;br&gt;&#xA;「不，生命的意义问题是无解的，爱的好处就是使人对这个问题不求甚解。」&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;再说工作，今年最大的变化就是年中的时候从原来的AI工程师变成了专门负责为公司AI项目落地和工程化的后端工程师。随着职位变动，所属部门也换了，新的部门严格执行敏捷开发，迭代得非常稳定。其优点自不必多说，而且有了产品经理，新的需求终于不会由业务方提到我这里了。需求都被更加有序地管理着，工作起来也更有节奏感。我司AI部门技术栈还算比较广泛，Python、C、Java都有，针对AI落地这边服务侧的技术栈选择的是Golang，两个部分之间还有许多其他部分（各种数据库、gRPC等等），所以对我而言要学习的东西还是很多的。今年工作中最难忘的有两件事，第一是春节前后组长休假，我代他面试实习生，来面试的多是研究生，我作为彼时还没毕业的本科生，一开始自然还有些紧张，但后来渐渐发现其实很多研究生的水平也并不很高，便渐渐放松下来。另一件是十月份的时候，做推荐系统的落地。在此之前我只是看过golang的教程，写过几行代码，但是leader要求这个项目用golang开发。由于对于我是新的技术栈，且项目中涉及的技术点也不少，那段时间我过得着实充实，也学到了不少东西。项目的后端部分基本是我一个人负责开发的，个人水平确实又有些捉襟见肘，加上相关机制还处于待完善的状态，所以项目至今也没有一个算得上稳定的版本，算是一件憾事。在工作习惯上，即使亲身体验过IDE有多好，但依然选择只用vim，用CLI下的Debugger自己手动调试。&lt;/p&gt;&#xA;&lt;p&gt;希望新的一年，能成为真正独当一面的工程师。&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;然后是生活。我始终相信，生活才是一个人获得疗愈之所在，而工作不是。&lt;/p&gt;&#xA;&lt;p&gt;在烹饪方面，今年又做了许多饭，春天的时候还入了烤箱，烹饪的广度又得到了进一步的提升。七月份突然想要试试自制工作午餐便当，于是一试就坚持到了现在，风雨无阻。习惯之后发现其实带便当所需的工作量并没有想象得那么大，相反还可以为每天单调的生活增加一些多样性，也算是好事。&lt;/p&gt;&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/cuisine.jpg&#34; style=&#34;width:50%;&#34;&gt;&#xA;&lt;p&gt;今年在酒精上唯一的更深探索是春天的时候去了Whisky+，尝到了不少好酒。但由于夏天开始似乎出现了一点酗酒问题，所以酒精的摄入和探索都暂停了。咖啡方面，秋天的时候，我开始为那几位每天一起喝咖啡的同事做手冲，豆源是之前常去的芳野Cafe。粗算一下，三个多月的时间里，手冲做了也有100份，豆子尝了不少，技艺上由最开始的严格遵照Tetsu Kasuya的40-60 Method，到中间自己试着调整分段和时间，到现在随性一刀流。现在的配置依然是入门级别的Brewista+V60，基本够用，唯一需要提升的大概就是磨了。总的说，在咖啡上，今年还是有很多长进的。&lt;/p&gt;&#xA;&lt;p&gt;除了吃喝，今年也努力在生活广度上做了许多探索。2019年，书没读几卷，但路走了不少里。此前大约已经有三年，我除了回老家，再没有去过别的任何地方，也不想去别的地方。今年突然重燃了对旅行的热情。四月份趁春天尚未结束，去了趟杭州，知道为什么“杭州美景盖世无双”，去找馆子吃饭、喝咖啡，去逛那儿的菜市场，以及意外地在西湖南面的九曜山上，亲眼目睹了他人梦幻般的生活状态；七月的时候，趁着刚毕业，去西北走了一大圈，见识了天地广阔；秋天的时候，第一次去了上海，见识了魔都之繁华，第一次去苏州，领略了园林艺术之雅致；年底元旦前，又去了一趟日本，在异国他乡告别旧年。2020年，希望能去更多的地方玩（只要有钱）。&lt;/p&gt;&#xA;&lt;p&gt;此外，今年利用空闲时间去看了一些艺术展，去了几次德云社的小剧场，看了几场线下的脱口秀，看了一次Hippop的Live；为了玩MHW，攒了台式机；许多次萌生创作的欲望，开始尝试写点东西；开始拾掇花草、练习织围巾（越发地像一个中年妇女）；希望新的一年能尝试更多有趣的新鲜事儿。&lt;/p&gt;&#xA;&lt;p&gt;已经坚持到第三年的每日流水账和周报，在今年的最后三个月面临着前所未有的危机，记录的动力已经变得越来越小。2020，希望能找到新的角度和新的动力来把这件事情进行下去。&lt;/p&gt;&#xA;&lt;p&gt;我越来越珍视和享受独处，越来越不愿容忍他人的大小毛病，于是越来越不爱出门，越来越不喜欢社交。十一月的时候还搬了家，开始了梦寐以求的真·独居生活。&lt;/p&gt;&#xA;&lt;p&gt;2019年，告别了学生身份，正式成为了社会人；依然是单身，脱单的机会眼看越来越渺茫；烦恼和压力越来越多，快乐越来越少，这大概，就是成年人世界的样子吧。&lt;/p&gt;&#xA;&lt;p&gt;2020年，不立Flag，希望一切都好。祝我开心。&lt;/p&gt;&#xA;&lt;p&gt;以上。&lt;/p&gt;</description>
    </item>
    <item>
      <title>gRPC基本使用</title>
      <link>https://jrd.pub/191101_grpc/</link>
      <pubDate>Fri, 01 Nov 2019 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/191101_grpc/</guid>
      <summary>&lt;p&gt;以Python做Server，Golang做Client为例。&lt;/p&gt;</summary>
      <description>&lt;p&gt;以Python做Server，Golang做Client为例。&lt;/p&gt;&#xA;&lt;h4 id=&#34;proto&#34;&gt;.proto:&lt;/h4&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;syntax = &amp;#34;proto3&amp;#34;&#xA;&#xA;package PACKAGE_NAME&#xA;&#xA;message Message1 {&#xA;  int32 data_1 = 1;&#xA;  string data_2 = 2;&#xA;  ...//More about data type, read https://developers.google.com/protocol-buffers/docs/proto3#scalar&#xA;}&#xA;&#xA;message Message2 {&#xA;  int32 data_3 = 1;&#xA;  repeated string data_4 = 2; //Use &amp;#39;repeated [DATA_TYPE]&amp;#39; to sub array;&#xA;}&#xA;&#xA;service Service1 {&#xA;    rpc SomeFunc(Message1) returns (Message2) {}&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;python-as-server&#34;&gt;Python as server:&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pip install grpcio-tools&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;python3 -m grpc_tools.protoc -I PACKAGE_NAME --python_out&lt;span style=&#34;color:#ff79c6&#34;&gt;=[&lt;/span&gt;SOME_DIR&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; --grpc_python_out&lt;span style=&#34;color:#ff79c6&#34;&gt;=[&lt;/span&gt;SOME_DIR&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; ./XXX.proto&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;对应目录下会生成名为*_pb2.py和*_pb2_grpc.py的两个py文件。&lt;/p&gt;&#xA;&lt;p&gt;server.py&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; grpc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; multiprocessing &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; Pool&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; concurrent &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; futures&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; XXX_pb2_grpc&lt;span style=&#34;color:#ff79c6&#34;&gt;,&lt;/span&gt; XXX_pb2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Service1Servicer&lt;/span&gt;(XXX_pb2_grpc&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Service1Servicer):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;SomeFunc&lt;/span&gt;(self, request, context):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#6272a4&#34;&gt;# 可通过__getattr__从request取出proto中Message1定义的各项&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        response &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; XXX_pb2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Message2()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        reponse&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;data_3 &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        response&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;data_4&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; response&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;serve&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; grpc&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;server(futures&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;ThreadPoolExecutor(max_workers&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    XXX_pb2_grpc&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;add_Sevice1Servicer_to_server(Service1Servicer(), server)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;add_insecure_port(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;[::]:50051&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    server&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;start()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;grpc server has already started.&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;True&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            time&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sleep(&lt;span style=&#34;color:#bd93f9&#34;&gt;9999999&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;except&lt;/span&gt; KeyboardInterrupt:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        server&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;stop(&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    serve()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;golang-as-client&#34;&gt;Golang as client:&lt;/h4&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;go get -u github.com/golang/protobuf/protoc-gen-go&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;protoc --go_out&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;plugins&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;grpc:. ./XXX.proto&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;目录下会生成一个xxx.pb.go&lt;/p&gt;&#xA;&lt;p&gt;client.go&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-golang&#34; data-lang=&#34;golang&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;package&lt;/span&gt; main&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; (&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xxx &lt;span style=&#34;color:#6272a4&#34;&gt;// 刚生成的go文件&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;google.golang.org/grpc&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;context&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;fmt&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;time&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;func&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;main&lt;/span&gt;() {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    conn, err &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; grpc.&lt;span style=&#34;color:#50fa7b&#34;&gt;Dial&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;:50051&amp;#34;&lt;/span&gt;, grpc.&lt;span style=&#34;color:#50fa7b&#34;&gt;WithInsecure&lt;/span&gt;())&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fmt.&lt;span style=&#34;color:#50fa7b&#34;&gt;Println&lt;/span&gt;(err)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    client &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; xxx.&lt;span style=&#34;color:#50fa7b&#34;&gt;NewService1Client&lt;/span&gt;(conn)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ctx, cancel &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; context.&lt;span style=&#34;color:#50fa7b&#34;&gt;WithTimeout&lt;/span&gt;(context.&lt;span style=&#34;color:#50fa7b&#34;&gt;Background&lt;/span&gt;(), &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;time.Second)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;defer&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;cancel&lt;/span&gt;()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    response, err &lt;span style=&#34;color:#ff79c6&#34;&gt;:=&lt;/span&gt; client.&lt;span style=&#34;color:#50fa7b&#34;&gt;SomeFunc&lt;/span&gt;(ctx, &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&lt;/span&gt;xxx.Message1{data_1: xxx, data_2:xxx, &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;})&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; err &lt;span style=&#34;color:#ff79c6&#34;&gt;!=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;nil&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fmt.&lt;span style=&#34;color:#50fa7b&#34;&gt;Println&lt;/span&gt;(err)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; {&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fmt.&lt;span style=&#34;color:#50fa7b&#34;&gt;Println&lt;/span&gt;(response.Message2)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>在Python中调用C/C&#43;&#43;动态库</title>
      <link>https://jrd.pub/190801_py_with_c/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/190801_py_with_c/</guid>
      <summary>&lt;p&gt;最近项目中需要用Python调用C/C++的动态库，研究了一下Ctypes。&lt;/p&gt;</summary>
      <description>&lt;p&gt;最近项目中需要用Python调用C/C++的动态库，研究了一下Ctypes。&lt;/p&gt;&#xA;&lt;p&gt;上游给出的是编译好的.so文件，以下是用Ctypes调用的方式：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; ctypes &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lib &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; cdll&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;LoadLibrary(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;./xxx.so&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;#假设xxx.so定义了一个init函数&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;init &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; lib&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;init&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;init()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;#关于类型和参数：&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;i &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; c_int(&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# int size&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pChar &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; (c_char_p &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;)(addressof(create_string_buffer(&lt;span style=&#34;color:#bd93f9&#34;&gt;8&lt;/span&gt;))) &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# char * pChar = new char[8];&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c_char_p(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;CERTAIN_STRING&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;encode(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;utf-8&amp;#34;&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# &amp;#34;CERTAIN_STRING&amp;#34;.c_str()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p_data &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; (c_ubyte &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;len&lt;/span&gt;(data))(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;data)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# unsigned char * data&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;int_list &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p_int_list &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pointer((c_int&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;(&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;))(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;int_list))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# int * int_list&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;#关于返回：&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;#API int* rec(int* p)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pointer(c_int(&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rec &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; lib&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;rec&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rec&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;restype &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; POINTER(c_int)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rs &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; rec(p)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;range&lt;/span&gt;(p&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;contents&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;value):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rs[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>kcptun&#43;shadowsocks</title>
      <link>https://jrd.pub/190221_kcp_tun/</link>
      <pubDate>Thu, 21 Feb 2019 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/190221_kcp_tun/</guid>
      <summary>&lt;p&gt;因为种种原因，自己的几个ss/ssr服务基本都失联了，最近被推荐了&lt;a href=&#34;https://github.com/xtaci/kcptun&#34;&gt;kcptun&lt;/a&gt;，原来觉得kcptun只是用于加速，没想到由于它本身的设计，现在居然可以用于绕过高墙。&lt;/p&gt;</summary>
      <description>&lt;p&gt;因为种种原因，自己的几个ss/ssr服务基本都失联了，最近被推荐了&lt;a href=&#34;https://github.com/xtaci/kcptun&#34;&gt;kcptun&lt;/a&gt;，原来觉得kcptun只是用于加速，没想到由于它本身的设计，现在居然可以用于绕过高墙。&lt;/p&gt;&#xA;&lt;h5 id=&#34;一服务端&#34;&gt;一、服务端&lt;/h5&gt;&#xA;&lt;p&gt;首先配置ss：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pip install shadowsocks &lt;span style=&#34;color:#6272a4&#34;&gt;# 如果安完之后找不到ssserver，sudo之后可以解决；&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ssserver -p &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;SS_PORT&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; -k &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;SS_KEY&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; -m &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;ENRYPT_METHOD&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; --user nobody -d start&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;如果报了Exception: libsodium not found:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ wget https://download.libsodium.org/libsodium/releases/LATEST.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ tar zxf LATEST.tar.gz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;cd&lt;/span&gt; libsodium-stable&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./configure&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo make &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo make install&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;如果依然报错，su之后；&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;echo&lt;/span&gt; /usr/local/lib &amp;gt; /etc/ld.so.conf.d/usr_local_lib.conf&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ldconfig&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;然后配置kcptun：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ wget https://raw.githubusercontent.com/kuoruan/kcptun_installer/master/kcptun.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ chmod +x ./kcptun.sh&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./kcp.sh&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;在中文说明的引导下设置好各种参数，最后：&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/kcptun_finish.png&#34; style=&#34;width:50%&#34;&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;二客户端&#34;&gt;二、客户端&lt;/h4&gt;&#xA;&lt;h5 id=&#34;1cli&#34;&gt;1.CLI&lt;/h5&gt;&#xA;&lt;p&gt;以MacOS下为例：&#xA;从原repo的releases页https://github.com/xtaci/kcptun/releases 获取kcptun的可执行文件&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./client_darwin_amd64 --help&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;NAME:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   kcptun - client&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;with SMUX&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USAGE:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   client_darwin_amd64 &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;global options&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;command&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;command&lt;/span&gt; options&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;arguments...&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;VERSION:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#bd93f9&#34;&gt;20190109&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;COMMANDS:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     help, h  Shows a list of commands or &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;help&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; one &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;command&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GLOBAL OPTIONS:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --localaddr value, -l value      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;local&lt;/span&gt; listen address &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;:12948&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --remoteaddr value, -r value     kcp server address &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;vps:29900&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --key value                      pre-shared secret between client and server &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;it&amp;#39;s a secrect&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;$KCPTUN_KEY&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --crypt value                    aes, aes-128, aes-192, salsa20, blowfish, twofish, cast5, 3des, tea, xtea, xor, sm4, none &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;aes&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --mode value                     profiles: fast3, fast2, fast, normal, manual &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;fast&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --conn value                     &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;set&lt;/span&gt; num of UDP connections to server &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: 1&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --autoexpire value               &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;set&lt;/span&gt; auto expiration time&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;in seconds&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; a single UDP connection, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt; to disable &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: 0&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --scavengettl value              &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;set&lt;/span&gt; how long an expired connection can live&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;in sec&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;, -1 to disable &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: 600&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --mtu value                      &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;set&lt;/span&gt; maximum transmission unit &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; UDP packets &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: 1350&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --sndwnd value                   &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;set&lt;/span&gt; send window size&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;num of packets&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: 128&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --rcvwnd value                   &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;set&lt;/span&gt; receive window size&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;num of packets&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: 512&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --datashard value, --ds value    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;set&lt;/span&gt; reed-solomon erasure coding - datashard &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: 10&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --parityshard value, --ps value  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;set&lt;/span&gt; reed-solomon erasure coding - parityshard &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: 3&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --dscp value                     &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;set&lt;/span&gt; DSCP&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;6bit&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: 0&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --nocomp                         disable compression&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --sockbuf value                  per-socket buffer in bytes &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: 4194304&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --keepalive value                seconds between heartbeats &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: 10&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --snmplog value                  collect snmp to file, aware of timeformat in golang, like: ./snmp-20060102.log&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --snmpperiod value               snmp collect period, in seconds &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;default: 60&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --log value                      specify a log file to output, default goes to stderr&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --quiet                          to suppress the &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;stream open/close&amp;#39;&lt;/span&gt; messages&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   -c value                         config from json file, which will override the &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;command&lt;/span&gt; from shell&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --help, -h                       show &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;help&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   --version, -v                    print the version&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ ./client_darwin_amd64 -l :xxx -r xx.xx.xx.xx:xxxxx --key xxxx --crypt xxxx --mode xxxx&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;h5 id=&#34;2windows-gui&#34;&gt;2.Windows GUI&lt;/h5&gt;&#xA;&lt;p&gt;获取&lt;a href=&#34;https://github.com/dfdragon/kcptun_gclient/releases&#34;&gt;GUI客户端&lt;/a&gt;和&lt;a href=&#34;https://github.com/xtaci/kcptun/releases&#34;&gt;kcptun本体exe&lt;/a&gt;；&lt;/p&gt;&#xA;&lt;p&gt;在GUI客户端中进行配置，如图：&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/kcptun_gui.jpeg&#34; alt=&#34;&#34;&gt;&#xA;配置完成点击启动；&lt;/p&gt;&#xA;&lt;p&gt;然后在Shadowsocsk的客户端中添加一个新的服务器，ip填127.0.0.1，端口填上面的“本地侦听端口”，其他参数与服务端的ss配置一致，配置完成启动即可；&lt;/p&gt;&#xA;&lt;h5 id=&#34;3android&#34;&gt;3.Android&lt;/h5&gt;&#xA;&lt;p&gt;在Play Store中下载Shadowsocks和kcptun，在Shadowsocks中填加一个新的服务器配置，ip填服务器ip，端口填服务端的kcp端口，其他和ss配置一致，在下方的Plugin设置中选择kcptun，参数仿照默认格式填写即可；&lt;/p&gt;&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/kcptun_android.jpeg&#34; style=&#34;width:50%&#34;&gt;</description>
    </item>
    <item>
      <title>2018</title>
      <link>https://jrd.pub/190101_2018/</link>
      <pubDate>Tue, 01 Jan 2019 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/190101_2018/</guid>
      <summary>&lt;p&gt;2018，生活有了不小的变化，谨此一记。&lt;/p&gt;&#xA;&lt;p&gt;写得颇乱，见谅。&lt;/p&gt;</summary>
      <description>&lt;p&gt;2018，生活有了不小的变化，谨此一记。&lt;/p&gt;&#xA;&lt;p&gt;写得颇乱，见谅。&lt;/p&gt;&#xA;&lt;p&gt;就从年初自己立的Flag开始谈好了。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;ML，Python继续提升，读一些技术书；&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;今年确有提升，但主要是在经验方面。除了建模，今年还负责了自己几个项目的后端开发和部署。书今年也看了，主要就是西瓜书和统计学习方法，看得依然不够多。工程代码写得多了之后，实现想法的速度确实有了非常明显的提升，但是依然感觉自己硬实力还远远不够；此外，工作方面，除了建模，在数据处理、服务部署等方面也精进不少，还意外地增长了一点前端方面的技能，做的项目也涵盖诸多门类，担负的责任也越来越重了。四五月份还参与了一段时间的数仓建设。总的来说，今年在机器学习的从建模、数据准备到部署的整个通路上都有了较为充分的实践和锻炼。2019年还是希望能夯实自己的基础，提高自己的硬实力。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;好好学数学；&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;完全没好好学…… 罪过。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;变得轻盈；&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;……别说身体没有变得轻盈，就连灵魂都变得臃肿了。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;坚持读书的习惯；&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;嗯，这一点总体上还是达成了的。今年总共读了20本左右，算不上多，但贵在坚持；今年在读书方面的一个变化是开始主动找书解答自己的疑惑了。今年读的书里，最想向人推荐的两本是《乡土中国》和《薩提爾的對話練習》。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;住进一个有厨房的房子；&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;达成，周末可以开心地做饭了！尝试了许多从小到大在父母那里吃过，但从来没有自己做过的食物，也探索了不少别的新菜式。&lt;/p&gt;&#xA;&lt;p&gt;今年在吃喝方面可谓是开启了新世界的大门。吃的方面，除了上面提到的，烹饪技能方面取得了一点进步，还下了一些馆子，涨了不少见识（当然，也不可避免地花了很多钱……），其中有一些惊艳和幸福的时刻，在同事的引领下还幸运地爱上了芝士，新的一年希望能吃到更多好吃的。喝的方面，在几位要好的同事的带领下，今年有幸喝了许多好酒，尤其是威士忌，甚至还喝到了一些陈年的珍品；也被带着去了几家不错的Bar，喝到了许多不错的鸡尾酒；除了美酒，还有咖啡，下半年常和三个同事一起去公司边上的一家咖啡店喝咖啡，在那儿尝到了许多很不错的豆子，天热的时候还在公司一起喝自己做冷萃；2018年，是我的味蕾得到最充分刺激的一年。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/sushi.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;拼更多的拼图；&#xA;学一些其他领域的技能，培养一些爱好；&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;今年的业余生活有了比较翻天覆地的变化，业余时间并没有选择拼拼图，似乎也没有扩展什么技能，不过业余时间倒也还算丰富。&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;开心；&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;今年还是收获了不少快乐的。其中值得一提的是，有幸与人有过数次自认为还算深刻的对话，其中有几次对话的时间甚至超过了六小时，还有两次是彻夜长谈。在这些或超长或较长的对话中，我对许多事情有了全新的认知，非常感谢那些与我对话的人。除此之外，今年可能是我向家庭关系做出贡献的开始，这一点还是值得自己为自己高兴的。&lt;/p&gt;&#xA;&lt;p&gt;年初买了Nintendo Switch，今年玩了Super Mario Odyssey、Stardew Valley、Celeste（年度个人最佳！）、Dandara、Super Mario Aces、Splatoon 2，这些优秀的游戏给我带来了非常多的快乐。&lt;/p&gt;&#xA;&lt;p&gt;今年下班后的许多时间都在和同事一起打桥牌、玩桌游或者玩Switch，还学会了打日麻，玩过两位德扑，也算是丰富多彩了。一个非常强烈的感觉是：好玩的东西太多了，完全玩不过来……&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/happy_time.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;font size=&#34;1px&#34;&gt; 👆今年的最幸福时刻之一，在同事家喝酒打桥牌吃芝士；&lt;/font&gt;&lt;/p&gt;&#xA;&lt;p&gt;基于上述原因，加上今年还开始自己交学费和房租了，所以今年并没攒下什么钱，定投也没有继续，新的一年随着毕业之后收入提高，希望能攒下一些钱来。&lt;/p&gt;&#xA;&lt;p&gt;2018年，依然是单身，春天的时候有过一段看起来像是要脱单的经历，但最后并没有什么结果，2019年感觉依然希望渺茫，而且我自觉之后将会越来越难……&lt;/p&gt;&#xA;&lt;p&gt;2018年，在公司里与几位年长我几岁的同事成为了朋友，在他们带领下，涨了许多见识，和他们在一起玩也收获了许多快乐，非常感谢他们。&lt;/p&gt;&#xA;&lt;p&gt;2018年，依然被两个话题严重困扰：自我认同和无意义感，甚至想过要去寻求心理医生的帮助。第一个问题目前依然没有得到解决，第二个问题我自知是漩涡，却依然深陷其中难以自拔，在一次与同事的对话后算是得到了一点解脱。&lt;/p&gt;&#xA;&lt;p&gt;2018年，开始尝试写篮球领域的文章，但拢共只写了一篇半，还尝试做过几篇球评的翻译，2019年希望能多写几篇；&lt;/p&gt;&#xA;&lt;p&gt;2018年，记录日常和写周报的习惯还一直保持着，随着时间推移，记录带来的激励作用在渐渐变弱，不过总还是有的。&lt;/p&gt;&#xA;&lt;p&gt;2018年，我完成了大学阶段的几乎所有课程，开始了全职实习。全职后的生活，是与上学时非常不同的，也算是提前过上了毕业后的生活，这种生活有好也有坏，相比校园生活有更多的自由，也有更多的压力。&lt;/p&gt;&#xA;&lt;p&gt;2019年，希望能尝试一些不一样的事情（还没想好是什么），希望能把周末的时间更好地利用起来，希望能提高自己对生活的掌控感。&lt;/p&gt;&#xA;&lt;p&gt;  &lt;/p&gt;&#xA;&lt;p&gt;2019年，依然希望我的亲人和朋友们健康幸福快乐。&lt;/p&gt;&#xA;&lt;p&gt;最后，&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;2018年过去了，我很怀念它。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;以上。&lt;/p&gt;</description>
    </item>
    <item>
      <title>MongoDB查询优化</title>
      <link>https://jrd.pub/181224_mongodb_query_optimization/</link>
      <pubDate>Mon, 24 Dec 2018 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/181224_mongodb_query_optimization/</guid>
      <summary>&lt;p&gt;部署服务时，如果底层数据采用的是MongoDB，为了提高响应速度，可以在查询上做一些优化。&lt;/p&gt;</summary>
      <description>&lt;p&gt;部署服务时，如果底层数据采用的是MongoDB，为了提高响应速度，可以在查询上做一些优化。&lt;/p&gt;&#xA;&lt;h4 id=&#34;一关于索引&#34;&gt;一、关于索引&lt;/h4&gt;&#xA;&lt;h5 id=&#34;1-建索引&#34;&gt;1. 建索引&lt;/h5&gt;&#xA;&lt;p&gt;在Collection上建立索引是非常有必要的，特别是需要在海量的数据中根据某个键查出一条数据时，索引就显得更加重要了。&lt;/p&gt;&#xA;&lt;p&gt;举个栗子：&lt;/p&gt;&#xA;&lt;p&gt;有一张记录用户行为历史的Collection，数据量在百万级，查询同一条记录，&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;无索引：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/without_index.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;有索引：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/with_index.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;可以明显地看出，有索引带来的速度提升是非常巨大的。&lt;/p&gt;&#xA;&lt;h5 id=&#34;2-关于组合索引&#34;&gt;2. 关于组合索引&lt;/h5&gt;&#xA;&lt;p&gt;当查询需要匹配多个键时，使用复合索引和建立“组合”索引（即将两个键拼成一个键）的查询速度差距不大。&lt;/p&gt;&#xA;&lt;h4 id=&#34;二关于查询方式&#34;&gt;二、关于查询方式&lt;/h4&gt;&#xA;&lt;h5 id=&#34;1--将多次查询合并到一次中&#34;&gt;1.  将多次查询合并到一次中&lt;/h5&gt;&#xA;&lt;p&gt;再举个栗子：&#xA;现在需要以一个DataFrame中某一列的每个值进行匹配查询，此时，和用pd.Series.apply()方法挨个做查询相比，使用mongodb的条件操作符$in一起查询，然后再merge回原来的DataFrame会更快一些：&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/traverse_or_not.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h5 id=&#34;2-find和find_one&#34;&gt;2. find()和find_one()&lt;/h5&gt;&#xA;&lt;p&gt;在已知查询记录只有一条时，可以用find_one()替代find()来减少一次slice操作（但其实很快），但经过测试，发现find()和find_one()的速度并没有很大的差距；&lt;/p&gt;</description>
    </item>
    <item>
      <title>用python实现Hive UDF</title>
      <link>https://jrd.pub/180813_py_udf/</link>
      <pubDate>Mon, 13 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/180813_py_udf/</guid>
      <summary>&lt;p&gt;因为项目需要，最近研究了一下如何用python写udf；&lt;/p&gt;</summary>
      <description>&lt;p&gt;因为项目需要，最近研究了一下如何用python写udf；&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;python部分：（通过stdin和stdout进行数据交互)&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;#!/usr/bin/python&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; sys&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; line &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; sys&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;stdin:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;将写好的脚本上传到HDFS：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ hadoop fs -put -f xxx.py &lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;PATH&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在HIVE上：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-zsh&#34; data-lang=&#34;zsh&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ADD FILE hdfs:///&lt;span style=&#34;color:#ff79c6&#34;&gt;[&lt;/span&gt;PATH&lt;span style=&#34;color:#ff79c6&#34;&gt;]&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;set&lt;/span&gt; hive.execution.engine&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;mr;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;SELECT TRANSFORM&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;...&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;USING &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;python jr_collect_list_udf.py&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;AS &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;...&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;FROM&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;P.S.:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在python脚本中，接收到的数据为str类型，如果TRANSFROM(&amp;hellip;)中有多个字段，则接收到的是用\t分隔的字符串；&lt;/li&gt;&#xA;&lt;li&gt;无论返回的是什么类型的数据，写在表里都是str；&lt;/li&gt;&#xA;&lt;li&gt;需要返回多个字段的话在return时用\t.join()就可以；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>关于pandas.DataFrame.copy()的小坑</title>
      <link>https://jrd.pub/180805_pd_deepcopy/</link>
      <pubDate>Sun, 05 Aug 2018 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/180805_pd_deepcopy/</guid>
      <summary>&lt;p&gt;最近发现了一个关于pandas.DataFrame.copy()的小坑，特此小记；&lt;/p&gt;</summary>
      <description>&lt;p&gt;最近发现了一个关于pandas.DataFrame.copy()的小坑，特此小记；&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我使用的pandas的版本：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; pd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_version&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;get_versions()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;{&amp;#39;dirty&amp;#39;: False,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; &amp;#39;error&amp;#39;: None,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; &amp;#39;full-revisionid&amp;#39;: &amp;#39;a00154dcfe5057cb3fd86653172e74b6893e337d&amp;#39;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; &amp;#39;version&amp;#39;: &amp;#39;0.22.0&amp;#39;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;常规情况：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;DataFrame([[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#6272a4&#34;&gt;# 1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;copy() &lt;span style=&#34;color:#6272a4&#34;&gt;#.copy(deep=True) as default&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#6272a4&#34;&gt;# 2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#6272a4&#34;&gt;# 1&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;进一步：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;DataFrame([[[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]]])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#6272a4&#34;&gt;# [1]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;copy() &lt;span style=&#34;color:#6272a4&#34;&gt;#.copy(deep=True) as default&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#6272a4&#34;&gt;# [2]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#6272a4&#34;&gt;# [1]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;进而：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;DataFrame([[[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]]])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#6272a4&#34;&gt;# [1]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;copy() &lt;span style=&#34;color:#6272a4&#34;&gt;#.copy(deep=True) as default&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#6272a4&#34;&gt;# [2]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#6272a4&#34;&gt;# [2]&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;嗯，上面最后一行我没有打错，就是[2]。&lt;/p&gt;&#xA;&lt;p&gt;想了想出现这种情况的原因，应该是因为即使指定了deep=True，但在复制的时候并对其中的list进行deep copy；&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;其他的发现：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;DataFrame([[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;copy()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;])  &lt;span style=&#34;color:#6272a4&#34;&gt;# 2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;])  &lt;span style=&#34;color:#6272a4&#34;&gt;# 1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;]) &lt;span style=&#34;color:#6272a4&#34;&gt;# False&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;id&lt;/span&gt;(a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;]) &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;id&lt;/span&gt;(b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;])) &lt;span style=&#34;color:#6272a4&#34;&gt;#True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# ------&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;DataFrame([[[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]]])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;copy()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;][&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;]) &lt;span style=&#34;color:#6272a4&#34;&gt;# [2]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;]) &lt;span style=&#34;color:#6272a4&#34;&gt;# [2]&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;])  &lt;span style=&#34;color:#6272a4&#34;&gt;# True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;id&lt;/span&gt;(a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;]) &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;id&lt;/span&gt;(b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;])) &lt;span style=&#34;color:#6272a4&#34;&gt;# True&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;神奇…&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;18.8.10：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;​    之前发现了问题之后去GitHub上提了&lt;a href=&#34;https://github.com/pandas-dev/pandas/issues/22203&#34;&gt;Issues&lt;/a&gt;，前几天收到了一位pandas的contributor的回复：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/pd_issues.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;18.8.13:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;​    又得到了另一位开发者的回复，他指出首先.copy(deep=True)在&lt;a href=&#34;https://pandas.pydata.org/pandas-docs/stable/generated/pandas.DataFrame.copy.html&#34;&gt;官方文档&lt;/a&gt;上已经写到了这一点：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;When deep=True, data is copied but actual Python objects will not be copied recursively, only the reference to the object. This is in contrast to copy.deepcopy in the Standard Library, which recursively copies object data (see examples below).&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;他还指出：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;id&lt;/span&gt;(a&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;]) &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;id&lt;/span&gt;(b&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;这个语句中，&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;the Python interpreter could perform the following steps:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Evaluate &lt;code&gt;a.loc[0, 0]&lt;/code&gt;; then&lt;/li&gt;&#xA;&lt;li&gt;Get the id of the temporary object created in step 1; then&lt;/li&gt;&#xA;&lt;li&gt;Evaluate &lt;code&gt;b.loc[0, 0]&lt;/code&gt;; then&lt;/li&gt;&#xA;&lt;li&gt;Get the id of the temporary object created in step 3.&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;If the temporary object created in step 1 is GC&amp;rsquo;ed in between, the temporary object created in step 3 may be created at the same address. (In CPython, the &lt;code&gt;id&lt;/code&gt; function &lt;a href=&#34;https://docs.python.org/3/library/functions.html#id&#34;&gt;returns the memory address&lt;/a&gt; of an object, although this is considered a CPython implementation detail.)&lt;/p&gt;&#xA;&lt;p&gt;One case see examples of this just using plain old Python objects:&lt;/p&gt;&#xA;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;In [13]: id(object()), id(object())&#xA;Out[13]: (4763425312, 4763425312)&#xA;&#xA;In [19]: print(object() is object())&#xA;False&#xA;&#xA;In [20]: print(id(object()) == id(object()))&#xA;True&#xA;&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;&#xA;&lt;p&gt;后来，我又去尝试了一下copy.deepcopy()，发现即使是这个方法，依然不能达到我想要的效果。再次Google之后得到的答案是，只能乖乖地把index和value分别做deepcopy，然后再构造一个新的DataFrame。&lt;/p&gt;</description>
    </item>
    <item>
      <title>关于SettingWithCopyWarning</title>
      <link>https://jrd.pub/180711_pd_settingwithcopywarning/</link>
      <pubDate>Wed, 11 Jul 2018 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/180711_pd_settingwithcopywarning/</guid>
      <summary>&lt;p&gt;在对DataFrame添加新列的时候时常会遇到SettingWithCopyWarning：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/SettingWithCopyWarning.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Google了一番，最后在stack overflow上找到了最恰当的用法。&lt;/p&gt;</summary>
      <description>&lt;p&gt;在对DataFrame添加新列的时候时常会遇到SettingWithCopyWarning：&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/SettingWithCopyWarning.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;Google了一番，最后在stack overflow上找到了最恰当的用法。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我使用的pandas的版本：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; pd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_version&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;get_versions()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;{&amp;#39;dirty&amp;#39;: False,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; &amp;#39;error&amp;#39;: None,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; &amp;#39;full-revisionid&amp;#39;: &amp;#39;a00154dcfe5057cb3fd86653172e74b6893e337d&amp;#39;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; &amp;#39;version&amp;#39;: &amp;#39;0.22.0&amp;#39;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在探索过程中尝试了以下两种写法，但均不能避免SettingWithCopyWarning：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;new_column&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[:, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;new_column&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;正确姿势：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;assign(new_column &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Reference: &lt;a href=&#34;https://stackoverflow.com/questions/12555323/adding-new-column-to-existing-dataframe-in-python-pandas&#34;&gt;https://stackoverflow.com/questions/12555323/adding-new-column-to-existing-dataframe-in-python-pandas&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>MongoDB常用查询</title>
      <link>https://jrd.pub/180515_mongodb_common_query/</link>
      <pubDate>Tue, 15 May 2018 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/180515_mongodb_common_query/</guid>
      <summary>&lt;p&gt;总结了一下自己经常用到的一些MongoDB查询。&lt;/p&gt;</summary>
      <description>&lt;p&gt;总结了一下自己经常用到的一些MongoDB查询。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-javascript&#34; data-lang=&#34;javascript&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.collection.find()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;// SELECT * FROM xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.collection.find( { &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;field1&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;value1&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;, ... } ) &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;// SELECT * FROM xxx WHERE field1 = value1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.collection.find( { &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;field1&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;value1&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;, ... }, { &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;field1&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;field2&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;:&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;, ... } ) &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;// SELECT _id, field1 FROM xxx WHERE field1 = value1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.collection.find( { &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;field1&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;:&lt;/span&gt; { $lt&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;value1&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; } } ) &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//SELECT * FROM xxx WHERE field1 &amp;lt; value1 &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//Besides $lt, other commmon comparison operators is $lte, $gt, $gte, $in, $nin, $neq&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.collection.find( { $or&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; [ { &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;condition1&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; }, { &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;condition2&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; }, ... ] } ) &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//SELECT * FROM xxx WHERE condition1 OR &amp;lt;condition2 &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.collection.findOne() &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//SELECT * FROM xxx LIMIT 1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//When there is sub-field, use dot notation like &amp;#34;field.subfield&amp;#34; to access it&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.collection.find( { ... } ).count() &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//SELECT COUNT(1) FROM xxx WHERE ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.collection.distinct(field, query, options) &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//SELECT DISTINCT field FROM xxx WHERE ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.collection.dataSize()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//Calculate the size of the dump BSON file&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db.collection.aggregate( [&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;  { $match&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; {...} },&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;                      { $group&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; { _id&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;$cust_id&amp;#34;&lt;/span&gt;, total&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; { $sum&lt;span style=&#34;color:#ff79c6&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;$amount&amp;#34;&lt;/span&gt; } } }&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;&#x9;   ] )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//SELECT cust_id, SUM(amount) AS total&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//FROM xxx&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//WHERE ...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//GROUP BY id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;​                     &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;//More abount Aggregation: https://docs.mongodb.com/manual/aggregation/   &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Reference: &lt;a href=&#34;https://docs.mongodb.com/manual/&#34;&gt;MongoDB Documentation&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>用python处理声音</title>
      <link>https://jrd.pub/180428_pysound/</link>
      <pubDate>Sat, 28 Apr 2018 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/180428_pysound/</guid>
      <summary>&lt;p&gt;最近在用python处理一些音频数据，特此小记。&lt;/p&gt;</summary>
      <description>&lt;p&gt;最近在用python处理一些音频数据，特此小记。&lt;/p&gt;&#xA;&lt;p&gt;主要用到了两个库：pydub和librosa：&lt;/p&gt;&#xA;&lt;h3 id=&#34;pydubhttpsgithubcomjiaaropydub&#34;&gt;&lt;a href=&#34;https://github.com/jiaaro/pydub&#34;&gt;Pydub&lt;/a&gt;&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;原repo中提及的基本使用：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; pydub &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; AudioSegment&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 读取音频文件&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;song &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; AudioSegment&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;from_wav(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;xxx.wav&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;song &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; AudioSegment&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;from_mp3(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;xxx.mp3&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;song &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; AudioSegment&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;from_file(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;xxx.wav&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 切分音频&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;song[:&lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1000&lt;/span&gt;]  &lt;span style=&#34;color:#6272a4&#34;&gt;#last ten seconds&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 设置采样率&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;song&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;set_frame_rate(&lt;span style=&#34;color:#bd93f9&#34;&gt;16000&lt;/span&gt;) &lt;span style=&#34;color:#6272a4&#34;&gt;# set sample rate as 16000&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 调整音量&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;song &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; song &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;# boost volume by 6dB&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 拼接音频&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;song &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; song1 &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; song2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 导出音频&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;song&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;export(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;test2.wav&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;format&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;wav&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;&#xA;&lt;li&gt;以及在使用过程中和其他处发现的用法：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 生成&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# 会有损失的一种变速方法 &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# https://stackoverflow.com/questions/51434897/how-to-change-audio-playback-speed-using-pydub&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; pydub &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; AudioSegment&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;speed_change&lt;/span&gt;(sound, speed&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1.0&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;# Manually override the frame_rate. This tells the computer how many&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;# samples to play per second&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sound_with_altered_frame_rate &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; sound&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;_spawn(sound&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;raw_data, overrides&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;frame_rate&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;int&lt;/span&gt;(sound&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;frame_rate &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; speed)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    })&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;# convert the sound with altered frame rate to a standard frame rate&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;# so that regular playback programs will work right. They often only&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;# know how to play audio at standard frame rate (like 44.1k)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; sound_with_altered_frame_rate&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;set_frame_rate(sound&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;frame_rate)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sound &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; AudioSegment&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;from_file(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;...&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;speed_change(sound, &lt;span style=&#34;color:#bd93f9&#34;&gt;0.9&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>关于*和**运算符</title>
      <link>https://jrd.pub/180319_star_operator/</link>
      <pubDate>Mon, 19 Mar 2018 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/180319_star_operator/</guid>
      <summary>&lt;p&gt;最近了解到*和**运算符的用法，特此小记。&lt;/p&gt;</summary>
      <description>&lt;p&gt;最近了解到*和**运算符的用法，特此小记。&lt;/p&gt;&#xA;&lt;p&gt;最开始遇到的情形是这样的：我从另一个地方得到了一个tuple a：&lt;br&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;想把这个tuple里的值作为另一个函数f的参数传给它，理论上完全可以用[]把每个值取出来再一个一个传给函数：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;f&lt;/span&gt;(x, y):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; x &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; y&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f(a[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;], a[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;])&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;但这样写也太蠢了，而且当这里参数的个数不是两个而是很多的时候，这样写也太麻烦了。Google一番之后了解到有*运算符这种神奇的东西，有了它，上面的写法可以简化为：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;f(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;a)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;在&lt;a href=&#34;https://docs.python.org/3/tutorial/controlflow.html#unpacking-argument-lists&#34;&gt;官方文档&lt;/a&gt;中也有相关的说明：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;4.7.4. Unpacking Argument Lists&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;The reverse situation occurs when the arguments are already in a list or tuple but need to be unpacked for a function call requiring separate positional arguments. For instance, the built-in range() function expects separate start and stop arguments. If they are not available separately, write the function call with the *-operator to unpack the arguments out of a list or tuple:&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;))            &lt;span style=&#34;color:#6272a4&#34;&gt;# normal call with separate arguments&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;]  &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; args &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;6&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;range&lt;/span&gt;(\&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;args))            &lt;span style=&#34;color:#6272a4&#34;&gt;# call with arguments unpacked from a list&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;]   &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;文档中还提了**的用法：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;parrot&lt;/span&gt;(voltage, state&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;a stiff&amp;#39;&lt;/span&gt;, action&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;voom&amp;#39;&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;     &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;-- This parrot wouldn&amp;#39;t&amp;#34;&lt;/span&gt;, action, end&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;     &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;if you put&amp;#34;&lt;/span&gt;, voltage, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;volts through it.&amp;#34;&lt;/span&gt;, end&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;     &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;E&amp;#39;s&amp;#34;&lt;/span&gt;, state, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;!&amp;#34;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; d &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;voltage&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;four million&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;state&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;bleedin&amp;#39; demised&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;action&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;VOOM&amp;#34;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; parrot(&lt;span style=&#34;color:#ff79c6&#34;&gt;**&lt;/span&gt;d)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt; This parrot wouldn&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;t VOOM if you put four million volts through it. E&amp;#39;&lt;/span&gt;s bleedin&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39; demised !&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;在自己尝试的过程中也发现了两个有意思的用法：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(a)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;a)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;,a,&lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;8&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;, [&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;], &lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;8&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;,&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;a,&lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;8&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#bd93f9&#34;&gt;8&lt;/span&gt;]&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>用Flask实现一个简单的带POST的api</title>
      <link>https://jrd.pub/180122_flask_simple_api/</link>
      <pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/180122_flask_simple_api/</guid>
      <summary>&lt;p&gt;小记如何用Flask实现一个带POST的api。&lt;/p&gt;</summary>
      <description>&lt;p&gt;小记如何用Flask实现一个带POST的api。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; json&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; flask &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; Flask, request, Response&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; logging &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; FileHandler, INFO, Formatter&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Flask(__name__)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# log&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;err_log &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; FileHandler(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;error_log_&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;time&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;strftime(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;%Y%m&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&lt;/span&gt;,time&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;localtime()))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;err_log&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;setLevel(INFO)  &lt;span style=&#34;color:#6272a4&#34;&gt;#设置日志级别&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;logging_format &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Formatter(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%(asctime)s&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%(levelname)s&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%(filename)s&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%(funcName)s&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%(lineno)s&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt; - &lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%(message)s&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#6272a4&#34;&gt;# 日志格式&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;err_log&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;setFormatter(logging_format)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;app&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;logger&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;addHandler(err_log)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;@app.route(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;,methods&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;])  &lt;span style=&#34;color:#6272a4&#34;&gt;#&amp;#39;/&amp;#39;指定了路径&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;CERTAIN_FUNCTION&lt;/span&gt;():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; request&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;method &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;POST&amp;#39;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;...&lt;/span&gt;  &lt;span style=&#34;color:#6272a4&#34;&gt;#POST过来的数据可用request.form[]将其解析出来，如果是json的话可用request.json获取&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; Response(json&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;dumps(xxxx), mimetype&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;application/json&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#6272a4&#34;&gt;# 如果需要回传json的话&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;#       return xxx 当然也可直接回传字符串或某个方法 &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    app&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;run(host&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;x.x.x.x&amp;#39;&lt;/span&gt;,port&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;xxxx&amp;#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Reference:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://docs.jinkan.org/docs/flask/quickstart.html&#34;&gt;http://docs.jinkan.org/docs/flask/quickstart.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=LGlRYlbawnE&#34;&gt;https://www.youtube.com/watch?v=LGlRYlbawnE&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.cnblogs.com/wanghaonull/p/6537823.html&#34;&gt;http://www.cnblogs.com/wanghaonull/p/6537823.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.polarxiong.com/archives/Flask%E8%AE%BE%E7%BD%AE%E8%BF%94%E5%9B%9Ejson%E6%A0%BC%E5%BC%8F.html&#34;&gt;http://www.polarxiong.com/archives/Flask%E8%AE%BE%E7%BD%AE%E8%BF%94%E5%9B%9Ejson%E6%A0%BC%E5%BC%8F.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>2017</title>
      <link>https://jrd.pub/180101_2017/</link>
      <pubDate>Mon, 01 Jan 2018 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/180101_2017/</guid>
      <summary>&lt;p&gt;2017已经接近尾声，在此谨记2017的种种。&lt;/p&gt;</summary>
      <description>&lt;p&gt;2017已经接近尾声，在此谨记2017的种种。&lt;/p&gt;&#xA;&lt;p&gt;2017元旦做2016总结的时候，当时在博客的评论区写了一条评论说，明年这个时候一定要写出一篇比今年精彩得多的总结。当时还想着一定要在这篇年终总结中放很多照片和截图来凸显自己这一整年的精彩程度，还为此专门在Dropbox上建了一个叫“My 2017”的文件夹。不过何谓“精彩”似乎很难定义，今年的经历讲给去年的自己听，他想必觉得还算精彩，而今年的自己可能只觉得稀松平常，所以我觉得不如在年终总结的时候列一些具体些的条目，然后明年来打勾。&lt;/p&gt;&#xA;&lt;p&gt;技术方面，&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;一月参加了MCM2017，没有想象的那么激烈，拿了一个Honorable Mentions，此后还参加了几次小的建模，但我对建模的兴趣已经基本殆尽了；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;一拖再拖，四月份的时候上完了Coursera上Andrew Ng的&lt;em&gt;Machine Learning&lt;/em&gt;；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;四月看了《SQL必知必会》，但一直一段时间没用上便遗忘了不少，不过实习之后八九十月几乎每天都在写SQL，SQL的熟练度巨幅提高，达到可以进行各种花式联结和花式聚合的水平；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;春夏交际的时候读了一部分《利用Python进行数据分析》，后来在实习时做项目的过程中，Numpy和Pandas的熟练度也得到了明显的提升；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;实习之后手动实现了一些Machine Learning的东西，其间还初探了一下Kaggle，Coding的能力得到了不少锻炼；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;实习过程中还顺便学写了一点琐碎的小技能；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;拖了一年多，临近年底的时候终于开始学数据结构了；&lt;/p&gt;&#xA;&lt;p&gt;​&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;其他方面：&lt;/p&gt;&#xA;&lt;p&gt;很惭愧，今年读的书太少了。算上从2016开始翻的论语，也才只读了十几本书。不过其中大部分是在最后两个月读的，2018希望可以保持后两个月的阅读状态。&lt;/p&gt;&#xA;&lt;p&gt;今年电影看了大概30部，去了4次电影院。电视剧比去年应该是少了，主要原因是年初补完了《权力的游戏》前六季之后，对其他许多剧失去了兴趣。看完之后直至今日，我都常常跟人说《权力的游戏》应该就是我过去二十年里看过最棒的电视剧了，可能没有之一。&lt;/p&gt;&#xA;&lt;p&gt;2017年玩游戏的时间不算多，不过还是玩了几部相当不错的游戏，3DS上除了MH X和XX，还玩了一部塞尔达（众神的三角力量2），玩了一部口袋妖怪（究极之月），还玩了一段时间的牧场物语；PC上除了和室友开黑玩的LOL之外，玩了Poly Bridge。2018，希望能玩更多好游戏（十分想入一个Switch）。&lt;/p&gt;&#xA;&lt;p&gt;作为NBA球迷，今年彻底成为了大帝的球迷。对比赛的认识应该还是得到了一些长进的。闲的时候翻了一些经典的老录像看。学习了一些战术方面的东西，对一些基本的战术类型，Horns，Hammer之类的有了一些了解。2018希望能了解更多。&lt;/p&gt;&#xA;&lt;p&gt;春天的时候开了个微信公众号，半年多过去，在茫茫的无病呻吟和顾影自怜中，所幸还有几篇略有价值的东西，2018希望能多写一些有价值的东西，除了篮球战术和翻译，也许还可以构思个短篇小说什么的。&lt;/p&gt;&#xA;&lt;p&gt;2017终于养成了记录的习惯，每周在Github上写周报，每天在Workflowy上记流水账。不可否认，这种依靠记录来获得某种虚幻的成就感从而驱动自己的行为是我身上某种焦虑和空虚的体现。不过其实还好，总比什么也没做强。&lt;/p&gt;&#xA;&lt;p&gt;情绪方面，2017年一整年算得上跌宕起伏。春天的时候有一段时间状态非常好，学习和生活充满希冀，那时候觉得自己已经把自己调到了最好的状态。没成想，夏天到来之后，受到了高温和其他因素的影响，整个人变得非常非常低落，开始对生活中的任何事情丧失兴趣，甚至开始觉得活着其实也没什么趣味。所幸6月份有期末考试，这件不大不小的事情还算给了我一点支撑。考完试之后，我失去了唯一的支撑，整个人几乎要垮掉。期间萌生了想要找实习的想法，在拉勾海投了一番，在众多的拒绝中，还是有两家公司给了我面试的机会。于是2017年7月14日，堪称我这一年中的转折点，我收到了洋葱数学的实习Offer。说这一纸Offer救了我毫不过分，在此后的日子里，虽然情绪偶尔还是会出现波动，但只要坐在公司，愉悦感和满足感就会源源不断地从心底涌出。除了写代码，在公司还做了很多别的有趣的事情：做过几页数学书，脑暴一些项目的点子，写对话游戏的本子等等。当然在公司还认识了许多很有趣的人，跟生活丰富的人交谈很少会让人觉得无聊。&lt;/p&gt;&#xA;&lt;p&gt;实习之后直接实现了经济独立，于是可以更加放纵地吃吃喝喝，花钱渐渐变得大手大脚，终于在十一月迎来支出顶峰，那时候开始打算做一些理财计划，初步的打算包括做指数基金的定投，截止到目前投了一个月多一点，赚了微不足道的一点点，2018应该会继续保持这个习惯。&lt;/p&gt;&#xA;&lt;p&gt;去年期盼的独居生活并没有真正来临，只在这一年中短暂地出现过。不过在有限的独居生活里，我自认为我过得还算可以，一个人在家的时候反而不太容易觉得孤单活着空虚。烹饪方面得到了有限的一点点提升。整年中在家最舒畅的时候，要数3月的那些晚上，冲一壶大红袍，一边听《圆桌派》，拼拼图的时候，彼时彼刻大概算得上一年中最恬静的时刻。后来也就顺理成章地喜欢上了窦文涛以及相关的几位的节目，诸如锵锵、一千零一夜，都嘟之类的今年都没少看。以及拼图。本想着自己独居一年可以拼好多好多副拼图，不过由于居住条件的变化总是难以预料，所以今年其实拼的拼图很少。希望新的一年能拼更多有趣的拼图。&lt;/p&gt;&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/IMG_20170305_040225.jpg&#34; style=&#34;width:50%&#34;&gt;&#xA;&lt;p&gt;今年很多时候依然是一个人，和去年的情况基本一样，唯一不同的大概就是下馆子的次数多了很多&lt;/p&gt;&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/WechatIMG52.jpeg&#34; style=&#34;width:50%&#34;&gt;&#xA;&lt;p&gt;2017年曾经有过三次可以脱单的机会，但因为我始终觉得不合适（也许只是我在抗拒），还是拒绝了对方的好意。2018，希望……；&lt;/p&gt;&#xA;&lt;p&gt;2017年很遗憾没有像小学初中高中一样，交到可以时常一起玩，三观也大概接近的朋友。2018年能从公司或者哪儿发展一个或几个的话自然是最好，没有当然也没关系，有机会的话和老朋友们聚一聚，其他时间自己玩耍便是。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;列几个明年可以打勾的一些小愿望和小目标：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;ML，Python继续提升，读一些技术书；&lt;/li&gt;&#xA;&lt;li&gt;好好学数学；&lt;/li&gt;&#xA;&lt;li&gt;变得轻盈；&lt;/li&gt;&#xA;&lt;li&gt;坚持读书的习惯；&lt;/li&gt;&#xA;&lt;li&gt;拼更多的拼图；&lt;/li&gt;&#xA;&lt;li&gt;学一些其他领域的技能，培养一些爱好；&lt;/li&gt;&#xA;&lt;li&gt;住进一个有厨房的房子；&lt;/li&gt;&#xA;&lt;li&gt;开心；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;当然，2018希望所有的家人朋友们都能健康幸福快乐。&lt;/p&gt;&#xA;&lt;p&gt;以上。&lt;/p&gt;</description>
    </item>
    <item>
      <title>用Pymongo连接MongoDB取数</title>
      <link>https://jrd.pub/171122_pymongo/</link>
      <pubDate>Wed, 22 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/171122_pymongo/</guid>
      <summary>&lt;p&gt;最近有需要用python从MongoDB上取数的需求，于是研究了一下Pymongo，在此做个小记。&lt;/p&gt;</summary>
      <description>&lt;p&gt;最近有需要用python从MongoDB上取数的需求，于是研究了一下Pymongo，在此做个小记。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; pymongo &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; MongoClient&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; MongoClient(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;mongodb://x.x.x.x:xxxxx&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;db &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; client&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;[DATABASES_NAME]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(db&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;collection_names())  &lt;span style=&#34;color:#6272a4&#34;&gt;# show the names of all the collections in selected database&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;collections &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; db[COLLECTION_NAME]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;collections&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;find(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;{xxx:xxxxx,xxx:xxx}&amp;#39;&lt;/span&gt;)  &lt;span style=&#34;color:#6272a4&#34;&gt;# Execute the query, which is equivalent to db.getCollection(&amp;#39;xxx&amp;#39;).find({})&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;collections&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;find_one  &lt;span style=&#34;color:#6272a4&#34;&gt;#same as db.getCollection(&amp;#39;xxx&amp;#39;).findOne({})&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>用python连接SparkThriftServer</title>
      <link>https://jrd.pub/171122_impala/</link>
      <pubDate>Wed, 22 Nov 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/171122_impala/</guid>
      <summary>&lt;p&gt;前些日子有想用python从SparkThriftServer上取数的需求，与其他同事共同研究一番之后终于有了结果。&lt;/p&gt;</summary>
      <description>&lt;p&gt;前些日子有想用python从SparkThriftServer上取数的需求，与其他同事共同研究一番之后终于有了结果。&lt;/p&gt;&#xA;&lt;p&gt;其实很简单，只需要一个叫做&lt;a href=&#34;https://github.com/cloudera/impyla&#34;&gt;impyla&lt;/a&gt;的库即可实现。不过在安装的时候需要注意，thrift_sasl的版本须是文档中所说的0.2.1，而不能是最新版本，否则会报错。&lt;/p&gt;&#xA;&lt;p&gt;安装好之后，只需要&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; impala.dbapi &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; connect&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sql &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;SELECT ......&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;conn &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; connect(host&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;xx.xx.xx.xx&amp;#39;&lt;/span&gt;, port&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;xxxxx, auth_mechanism&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;PLAIN&amp;#39;&lt;/span&gt;, database&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;DATABASE&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cursor &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; conn&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;cursor()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cursor&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;execute(sql)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; cursor&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;fetchall()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;即可；&lt;/p&gt;&#xA;&lt;p&gt;（P.S.: 这里import的时候的名字是impala，但pip的时候需要是impyla）&lt;/p&gt;&#xA;&lt;p&gt;同时，还有一点非常好的是，impyla对python的数据结构非常友好，在得到结果后如需要将其转成pandas的DataFrame话非常方便。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Kaggle 0 手写数字识别器的探索</title>
      <link>https://jrd.pub/170911_knn_digits_recognition/</link>
      <pubDate>Mon, 11 Sep 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170911_knn_digits_recognition/</guid>
      <summary>&lt;p&gt;最近打算开始玩Kaggle，作为入门选了一个入门级的任务&lt;a href=&#34;https://www.kaggle.com/c/digit-recognizer/&#34;&gt;Digit-Recognizer&lt;/a&gt;。正好在翻《机器学习实战》的时候看到可以用KNN做图像识别，于是就打算用KNN来做一个手写数字的识别器（&lt;strong&gt;9.13:现在要换成CNN来做了&lt;/strong&gt;）。这也算是我第一次应用机器学习来解决比较实际的问题。此篇作为一个类似于项目日志的东西，在这个项目完成之前，应该会一直更新。&lt;/p&gt;</summary>
      <description>&lt;p&gt;最近打算开始玩Kaggle，作为入门选了一个入门级的任务&lt;a href=&#34;https://www.kaggle.com/c/digit-recognizer/&#34;&gt;Digit-Recognizer&lt;/a&gt;。正好在翻《机器学习实战》的时候看到可以用KNN做图像识别，于是就打算用KNN来做一个手写数字的识别器（&lt;strong&gt;9.13:现在要换成CNN来做了&lt;/strong&gt;）。这也算是我第一次应用机器学习来解决比较实际的问题。此篇作为一个类似于项目日志的东西，在这个项目完成之前，应该会一直更新。&lt;/p&gt;&#xA;&lt;h3 id=&#34;911&#34;&gt;9.11&lt;/h3&gt;&#xA;&lt;p&gt;没看书自己实现了一下KNN，算法本身也没什么复杂的，但是实现起来还是费了一番不小的功夫，动手能力还需增强啊…&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;@author: drapor&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; pd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; np&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Importing the data...&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;train_set &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;train.csv&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pixel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; train_set&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;iloc[:,&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#bd93f9&#34;&gt;785&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;label &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; train_set&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;iloc[:,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;test_set &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;test.csv&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;r &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; t &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;len&lt;/span&gt;(test_set)):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;/28000&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;%&lt;/span&gt; (t&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;array(test_set&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[t])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    d &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;len&lt;/span&gt;(train_set)):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        b &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;array(pixel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[i])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;append(np&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;dot((a&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;b)&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;T,(a&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;b)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;zip&lt;/span&gt;(d,&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;len&lt;/span&gt;(d))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sort()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    m &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; k[:&lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;]:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        m&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;append(label&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[i[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;append(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;sum&lt;/span&gt;(m)&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;跑了几个试了试，K选了10，有一些误差，不过效果看起来还可以。但是全量数据一起跑的时候就发现，完成任务需要的时间非常久，大概至少需要三十个小时。这当然是不能接受的，得想办法改进才行。目前初步的打算是用多进程，应该可以明显地缩短完成任务所需的时间。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;912&#34;&gt;9.12&lt;/h3&gt;&#xA;&lt;p&gt;昨天请教了公司的组长之后得知，还可以用Deep Learning中的Pooling来降低计算的复杂度，但还是想先上多线程看看。经过一个晚上和半个上午的研究探索，终于成功地让任务以多进程的方式跑起来了。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;#!/usr/bin/env python3&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;Description:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;kaggle 0 &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;@author: drapor&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; pandas &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; pd&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; np&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; multiprocessing&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; os&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;#import matplotlib.pyplot as plt&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;processing&lt;/span&gt;(test_set):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    s &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;Running... pid:&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;str&lt;/span&gt;(os&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;getpid()))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; idx, df &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; test_set&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;iterrows():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;/28000, pid &lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;%s&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;%&lt;/span&gt; (idx, os&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;getpid()))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        a &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;array(df)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        d &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#bd93f9&#34;&gt;42000&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            b &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;array(pixel&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;iloc[i])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            d&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;append(np&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;dot((a&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;b)&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;T,(a&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;b)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        k &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;list&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;zip&lt;/span&gt;(d,&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;len&lt;/span&gt;(d))))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        k&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sort()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        m &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; k[:&lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;]:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            m&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;append(label&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[i[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        s&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;append([idx,&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;sum&lt;/span&gt;(m)&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;])&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; __name__ &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;__main__&amp;#39;&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Importing the data...&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    train_set &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;train.csv&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pixel &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; train_set&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;iloc[:,&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;:&lt;span style=&#34;color:#bd93f9&#34;&gt;785&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    label &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; train_set&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;iloc[:,&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#6272a4&#34;&gt;#plt.imshow(test.reshape(28,28), cmap=plt.cm.gray)&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    test_set &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; pd&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read_csv(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;test.csv&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pool &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; multiprocessing&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Pool(processes &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    r &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;range&lt;/span&gt;(&lt;span style=&#34;color:#bd93f9&#34;&gt;16&lt;/span&gt;):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        train &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; test_set&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;loc[&lt;span style=&#34;color:#bd93f9&#34;&gt;1750&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;i:&lt;span style=&#34;color:#bd93f9&#34;&gt;1750&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;(i&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        r&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;append(pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;apply_async(processing,(train,)))&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;close()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pool&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;join()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    result  &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; []&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; r:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; i&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;get():&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            result&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;append(j)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    result&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;sort()&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;result.csv&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; f:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; result:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            f&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;writelines(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;str&lt;/span&gt;(i[&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;]&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;)&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;,&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;str&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;round&lt;/span&gt;(i[&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;]))[:&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;]&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;为了能够快速地完成任务，我又去AWS上租了一个c4.4xlarge，配置是16 vCPU, 2.9 GHz, Intel Xeon E5-2666v3, 30 GiB 内存，在上面把任务分成16个进程进行计算。即便如此，整个任务还是花费了大概三四个小时的时间，但总算最后还是成功地跑出来了。&lt;/p&gt;&#xA;&lt;p&gt;将结果按照要求稍微整理一下就可以提交了，初次提交的分数是0.87314，预料之中。虽然准确率看起来还可以，但这个成绩在这项竞赛中的排名是1534／1625，非常的惨淡，不过这也说明改进的空间还很大。之后考虑用Pooling试试。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/first_submission.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;913&#34;&gt;9.13&lt;/h3&gt;&#xA;&lt;p&gt;今天发现其实Pooling并不是一种可以提高精度的办法，只是一种可以降低计算复杂度的方法，如果原算法的精度本身就不高的话，Pooliing之后同样也不高，组长建议我改用CNN。我想了一下，就算调整K的值重新跑一次可能不会使准确率有明显的提升，Google了一下发现大家用KNN做手写识别，精度可能也就追求到0.8。嗯……这两天探索一下Tensorflow+CNN（之前只是知道，并没有深入了解过），尝试用这种方式解决这个问题。&lt;/p&gt;</description>
    </item>
    <item>
      <title>在AWS上搭建TensorFlow环境</title>
      <link>https://jrd.pub/170822_aws_tensorflow/</link>
      <pubDate>Tue, 22 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170822_aws_tensorflow/</guid>
      <summary>&lt;p&gt;关于搭建TensorFlow，其实&lt;a href=&#34;https://www.tensorflow.org/install/install_linux#uninstalling_tensorflow_1&#34;&gt;官方的配置指南&lt;/a&gt;其实写得已经很清楚了，但是其中并没有比较详细的GPU相关的配置方法，于是在Google一番之后，发现了一篇写得非常详细的教程——&lt;a href=&#34;http://terrence.logdown.com/posts/1267063-from-the-aws-a-gpu-environment-to-play-tensorflow&#34;&gt;從AWS搭一個GPU運算環境來玩tensorflow&lt;/a&gt;。在此对两篇教程中提及的步骤以及涉及的命令做个简单的总结，方便以后再有类似需求的时候，可以快速地完成环境搭建。&lt;/p&gt;</summary>
      <description>&lt;p&gt;关于搭建TensorFlow，其实&lt;a href=&#34;https://www.tensorflow.org/install/install_linux#uninstalling_tensorflow_1&#34;&gt;官方的配置指南&lt;/a&gt;其实写得已经很清楚了，但是其中并没有比较详细的GPU相关的配置方法，于是在Google一番之后，发现了一篇写得非常详细的教程——&lt;a href=&#34;http://terrence.logdown.com/posts/1267063-from-the-aws-a-gpu-environment-to-play-tensorflow&#34;&gt;從AWS搭一個GPU運算環境來玩tensorflow&lt;/a&gt;。在此对两篇教程中提及的步骤以及涉及的命令做个简单的总结，方便以后再有类似需求的时候，可以快速地完成环境搭建。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;首先是申请一个Instance，初次申请记得提交case上调Instance Limit；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;ssh之前，记得把密钥权限改成600；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;登陆之后首先确认一下GPU信息：&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;local&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt; lspci | grep -i nvidia&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;GPU方面需要安装的东西有两个：NVIDIA CUDA Toolkit 和 cuDNN library；&#xA;&lt;ul&gt;&#xA;&lt;li&gt;首先是 CUDA Toolkit：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ wget https://developer.nvidia.com/compute/cuda/8.0/prod/local_installers/cuda_8.0.44_linux-run&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ chmod &lt;span style=&#34;color:#bd93f9&#34;&gt;755&lt;/span&gt; cuda_8.0.44_linux-run&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ ./cuda_8.0.44_linux-run -extract&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;/root&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ ./NVIDIA-Linux-x86_64-367.48.run -s&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ ./cuda-linux64-rel-8.0.44-21122537.run -noprompt&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ vim ~/.bashrc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6272a4&#34;&gt;#增加下面三行&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;CUDA_ROOT&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;/usr/local/cuda-8.0&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;LD_LIBRARY_PATH&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;/usr/local/cuda-8.0/lib64&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;export&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;PATH&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;$PATH&lt;/span&gt;:&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;$CUDA_ROOT&lt;/span&gt;/bin&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;source&lt;/span&gt; ~/.bashrc&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6272a4&#34;&gt;#测试一下&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ nvidia-smi -q | head&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;然后是cuDNN library：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;首先去https://developer.nvidia.com/cudnn 注册Nvidia Developer的账号，然后在本地下载好相应的tgz包，将它scp到服务器上去。&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ tar -zxvf cudnn-8.0-linux-x64-v5.1.tgz&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ cp cuda/lib64/* /usr/local/cuda-8.0/lib64/&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ cp cuda/include/* /usr/local/cuda-8.0/include/&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;至此，GPU Drivers的部分基本配置完成。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;然后是TensorFlow的配置，这里采用官方推荐的Installing with virtualenv的方法：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6272a4&#34;&gt;# Install pip and virtualen &lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ sudo apt install python-pip python-dev python-virtualenv &lt;span style=&#34;color:#6272a4&#34;&gt;# for Python 2.7&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ sudo apt install python3-pip python3-dev python-virtualenv &lt;span style=&#34;color:#6272a4&#34;&gt;# for Python 3.n&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6272a4&#34;&gt;# Create a virtualenv environment&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ virtualenv --system-site-packages targetDirectory &lt;span style=&#34;color:#6272a4&#34;&gt;# for Python 2.7&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ virtualenv --system-site-packages -p python3 &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;targetDirectory&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;# for Python 3.n&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6272a4&#34;&gt;# &amp;#39;targetDirectory&amp;#39; specifies the top of the virtualenv tree, which you may choose by yourself.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6272a4&#34;&gt;# Activate the virtualenv environment&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;source&lt;/span&gt; ~/tensorflow/bin/activate &lt;span style=&#34;color:#6272a4&#34;&gt;# bash, sh, ksh, or zsh&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  $ &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;source&lt;/span&gt; ~/tensorflow/bin/activate.csh  &lt;span style=&#34;color:#6272a4&#34;&gt;# csh or tcsh&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6272a4&#34;&gt;#现在的命令行前面的标识会变成这个样子：&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;tensorflow&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;$&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#6272a4&#34;&gt;#Install TensorFlow, ensure the version of pip &amp;gt;= 8.1&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;tensorflow&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;$ pip install --upgrade tensorflow      &lt;span style=&#34;color:#6272a4&#34;&gt;# for Python 2.7&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;tensorflow&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;$ pip3 install --upgrade tensorflow     &lt;span style=&#34;color:#6272a4&#34;&gt;# for Python 3.n&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;tensorflow&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;$ pip install --upgrade tensorflow-gpu  &lt;span style=&#34;color:#6272a4&#34;&gt;# for Python 2.7 and GPU&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;tensorflow&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;$ pip3 install --upgrade tensorflow-gpu &lt;span style=&#34;color:#6272a4&#34;&gt;# for Python 3.n and GPU&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;至此，TensorFlow安装完成&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;激活命令为&lt;br&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;source&lt;/span&gt; ~/tensorflow/bin/activate      &lt;span style=&#34;color:#6272a4&#34;&gt;# bash, sh, ksh, or zsh&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;source&lt;/span&gt; ~/tensorflow/bin/activate.csh  &lt;span style=&#34;color:#6272a4&#34;&gt;# csh or tcsh&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;退出环境&lt;br&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;(&lt;/span&gt;tensorflow&lt;span style=&#34;color:#ff79c6&#34;&gt;)&lt;/span&gt;$ deactivate &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;卸载&lt;br&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ rm -r targetDirectory &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;​&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Codewars上有趣的题</title>
      <link>https://jrd.pub/170819_funny_codewars/</link>
      <pubDate>Sat, 19 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170819_funny_codewars/</guid>
      <summary>&lt;p&gt;最近一段时间常在Codewars上刷题，也因而发现了几道有意思的题。&lt;/p&gt;</summary>
      <description>&lt;p&gt;最近一段时间常在Codewars上刷题，也因而发现了几道有意思的题。&lt;/p&gt;&#xA;&lt;h4 id=&#34;sum-of-digits--digital-roothttpswwwcodewarscomkatasum-of-digits-slash-digital-root&#34;&gt;&lt;a href=&#34;https://www.codewars.com/kata/sum-of-digits-slash-digital-root&#34;&gt;Sum of Digits / Digital Root&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;题目并不难，就是求数根（“數根是將一正整數的各個位數相加（即橫向相加），若加完後的值大於10的話，則繼續將各位數進行橫向相加直到其值小於十為止，或是，將一數字重複做數字和，直到其值小於十為止，則所得的值為該數的數根。” ——WIkipedia）。按照定义来做的话，也其实没什么难的，用python的话，无非就是分拆成字符，再转回数字然后相加，如此往复直到位数为1。然而在做完之后，我在Solutions里发现了这样两个答案：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;首先是下面这个，巧妙地用了一下递归和map函数，使得代码短了很多；&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;digital_root&lt;/span&gt;(n):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; n &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; n &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; digital_root(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;sum&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;map&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;int&lt;/span&gt;,&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;str&lt;/span&gt;(n))))&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;然后我往下翻，又看到了下面这个让我颇为震惊的解法：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;digital_root&lt;/span&gt;(n):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; n&lt;span style=&#34;color:#ff79c6&#34;&gt;%&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;9&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;or&lt;/span&gt; n &lt;span style=&#34;color:#ff79c6&#34;&gt;and&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;9&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;我算了几个大于9的数，发现它们对9取余的结果确实是它们的数根，当时感觉这个结论很神奇，于是Google了一下之后，在知乎找到了相应的证明：https://www.zhihu.com/question/30972581 。而且这段代码中or和and的用法我也是头一次见，经过探索之后发现or和and在对数字使用的时候，大致遵循的规律是：&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;a and b，ab都非零时，结果为b；ab其中一个为0时，结果为0；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;a or b，ab都非零时，结果为a；ab其中一个为0时，结果为另一个非零的数；&lt;/p&gt;&#xA;&lt;p&gt;并且，0 and 0和0 or 0都等于0。另外就是and的运算级要高于or，所以return后面的执行顺序就是先and后or：&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;n != 0且n != 9时，n and 9 == 9，n % 9 or 9 == n % 9；&lt;/p&gt;&#xA;&lt;p&gt;n == 0时，n and 9 == 0，n % 9 or 0 == 0；&lt;/p&gt;&#xA;&lt;p&gt;n == 9时，n and 9 == 9，n%9 or 9 == 9；&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h4 id=&#34;dont-rely-on-luckhttpswwwcodewarscomkatadont-rely-on-luck&#34;&gt;&lt;a href=&#34;https://www.codewars.com/kata/dont-rely-on-luck&#34;&gt;Don&amp;rsquo;t rely on luck.&lt;/a&gt;&lt;/h4&gt;&#xA;&lt;p&gt;这题乍一看，感觉毫无技术含量可言，纯粹是看运气，他用randint从1到100随机抽一个数出来，让你也猜一个数，两数相等即可通过。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在代码框里最开始给的是：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; random &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; randint&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;guess &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;我想了一会儿，好像也没什么别的办法，就在guess后面填了个42，然后一遍遍地提交，在提交了许多许多许多次之后，终于对面random出了42，于是过了。过了之后当然要看看别人是怎么解的，在看了几个答案之后，我笑了很久……&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;首先是：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; random &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; randint,seed&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;seed(&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;guess &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; randint(&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;100&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;seed(&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;强行改seed让randint()输出一样的数，可以，很厉害。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;然后是这个：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;from&lt;/span&gt; random &lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; randint&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;CheatingNumber&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; __eq__(self, x):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;True&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;guess &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; CheatingNumber()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;前面那个强行改seed，你强行让 ‘ = ’ 运算符返回True？？？？我服了。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;当然，最让我折服的还是下面这个：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;randint&lt;/span&gt;(a, b):&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;guess &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;10&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;？？？？？？？？？&lt;/p&gt;&#xA;&lt;p&gt;与上面这种解法类似的还有：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;randint,guess &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;lambda&lt;/span&gt; x,y:&lt;span style=&#34;color:#bd93f9&#34;&gt;666&lt;/span&gt;,&lt;span style=&#34;color:#bd93f9&#34;&gt;666&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈哈&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>SQL的时间／日期无脑转换</title>
      <link>https://jrd.pub/170808_sql_time_switch/</link>
      <pubDate>Tue, 08 Aug 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170808_sql_time_switch/</guid>
      <summary>&lt;p&gt;最近在公司写数据需求的时候，由于各个表里存的日期和时间格式不尽相同，所以时常会遇到各种格式的日期转换的问题，一度搞得我非常烦躁。后来终于忍无可忍，仔细地去研究了一波，发现其实并没有想象中的那么麻烦，在此做个总结。&lt;/p&gt;</summary>
      <description>&lt;p&gt;最近在公司写数据需求的时候，由于各个表里存的日期和时间格式不尽相同，所以时常会遇到各种格式的日期转换的问题，一度搞得我非常烦躁。后来终于忍无可忍，仔细地去研究了一波，发现其实并没有想象中的那么麻烦，在此做个总结。&lt;/p&gt;&#xA;&lt;p&gt;其实主要涉及的几种日期格式就是以下几种：&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;类型&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: left&#34;&gt;示例&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;TIMESTAMP&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&amp;lsquo;2017-08-08 15:56:31.111&amp;rsquo;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;STRING(&amp;lsquo;yyyyMMdd&amp;rsquo;)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&amp;lsquo;20170808&amp;rsquo;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;DATE(&amp;lsquo;yyyy-MM-dd&amp;rsquo;)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;&amp;lsquo;2017-08-08&amp;rsquo;&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;INT&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: left&#34;&gt;20170808&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;其中主要会用到两个非常万能的函数，from_unixtime() 和 unix_timestamp()。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;code&gt;unix_timestamp()&lt;/code&gt;函数是将其他格式的时间转化为unix时间戳(e.g.:1502179397)，如果输入的时间已经是TIMESTAMP，则无需指定其他参数；如果输入的时间为DATE，则需要再多加一项参数标明格式，比如如果需要将‘2017-08-08’转为unix时间戳的话，应该写成&lt;code&gt;unix_timestamp(&#39;2017-08-08&#39;, ‘yyyy-MM-dd’)&lt;/code&gt;【&lt;strong&gt;特别注意：MM代表月，mm代表的是分钟&lt;/strong&gt;】即可；同样如果需要将&lt;code&gt;‘20170808’&lt;/code&gt;转为unix时间戳的话，应该写成&lt;code&gt;unix_timestamp(&#39;2017-08-08&#39;, ‘yyyyMMdd’)&lt;/code&gt;即可；&lt;/li&gt;&#xA;&lt;li&gt;&lt;code&gt;from_unixtime()&lt;/code&gt;函数则是将unix时间戳格式的时间转换为其他格式，默认是转化为TIMESTAMP，如果需要转化为特定格式则仿照上面添加第二个参数标明格式即可；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;于是，在遇到时间格式转换的问题时，我们可以这样做：首先将原格式用&lt;code&gt;UNIX_TIMESTAMP()&lt;/code&gt;转换为UNIX时间戳，再用unix_timestamp()转成所需的格式即可，这种方法个人感觉非常无脑但确实有效。&lt;/p&gt;&#xA;&lt;p&gt;比如需要将‘2017-08-08’转换为‘20170808’，按照上面的无脑思路，直接&lt;code&gt;from_unixtime(unix_timestamp(&#39;2017-08-08&#39;,&#39;yyyy-MM-dd&#39;),&#39;yyyyMMdd&#39;) &lt;/code&gt;即可，反之也是一样的道理。&lt;/p&gt;&#xA;&lt;p&gt;当然这其中存在很多捷径，比如&lt;code&gt;TO_DATE()&lt;/code&gt;可以直接将TIMESTAMP转为DATE，当然要比以上说的这种无脑方法方便很多，但是个人觉得记忆起来很麻烦，而且这些函数各自也都具有一些局限性，只能将某些特定格式转换为另一些特定格式。&lt;/p&gt;&#xA;&lt;p&gt;最后还应注意一点，也是我最近时常遇到的问题，就是在做表的联结的时候，以日期相等作为联结条件时，一定要确保等式两边的格式和类型都是一样的，&lt;code&gt;&#39;2017-08-08&#39; = ‘20170808’&lt;/code&gt;这个等式并不成立。&lt;/p&gt;</description>
    </item>
    <item>
      <title>Codewars上一道5 kyu的SQL题</title>
      <link>https://jrd.pub/170721_a_sql_ex/</link>
      <pubDate>Fri, 21 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170721_a_sql_ex/</guid>
      <summary>&lt;p&gt;具体思路和过程以后有时间再来整理（Flag）。&lt;/p&gt;</summary>
      <description>&lt;p&gt;具体思路和过程以后有时间再来整理（Flag）。&lt;/p&gt;&#xA;&lt;p&gt;原题目的url是https://www.codewars.com/kata/calculating-running-total&lt;/p&gt;&#xA;&lt;p&gt;参考了一下简单的情况 &lt;a href=&#34;http://sql55.com/query/cumulative-amount-1.php&#34;&gt;http://sql55.com/query/cumulative-amount-1.php&lt;/a&gt; ，然后自己建表鼓捣了一会儿，&lt;/p&gt;&#xA;&lt;p&gt;终于得(meng)出了一个可行的答案：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;CAST&lt;/span&gt;(p1.created_at &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;DATE&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;date&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#ff79c6&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;DISTINCT&lt;/span&gt; p1.title) &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;count&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#ff79c6&#34;&gt;COUNT&lt;/span&gt;(p2.title)&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;DISTINCT&lt;/span&gt; p1.title) &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; total&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; posts p1 &lt;span style=&#34;color:#ff79c6&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;JOIN&lt;/span&gt; posts p2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;ON&lt;/span&gt; to_char(p1.created_at, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;YYYY-MM-DD&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;=&lt;/span&gt; to_char(p2.created_at, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;YYYY-MM-DD&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;date&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;BY&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;date&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    <item>
      <title>记录一下最近参加过的面试</title>
      <link>https://jrd.pub/170707-firstinterview-md/</link>
      <pubDate>Tue, 11 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170707-firstinterview-md/</guid>
      <summary>&lt;p&gt;最近几天参加了几次面试，也是人生中的头几次面试，感觉值得一记，故有此篇。&lt;/p&gt;</summary>
      <description>&lt;p&gt;最近几天参加了几次面试，也是人生中的头几次面试，感觉值得一记，故有此篇。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;17.7.7：&lt;/strong&gt;　　&lt;/p&gt;&#xA;&lt;p&gt;　　昨天下午接到了一家公司HR的电话，问我是不是还在找实习以及有没有时间参加电话面试。于是昨天晚上+今天早上稍微地准备了一下，想着面试官会问关于Python的一些高级的东西比如解释器或者GIL什么的就去补了一波知识，并且对这家公司也做了一些调查，有了一些了解。&lt;/p&gt;&#xA;&lt;p&gt;　　终于等到下午三点开始了面试，形式是电话面试。在得知要写代码之后，我心里其实有点慌，因为我知道自己的数据结构和算法很薄弱，而且动手的时候可能会卡在一些细枝末节的地方。面试官人很好，上来没有让我做自我介绍，直接让我把自己掌握的技术说了一下，并对我在博客上和GIthub上的一些东西以及过往经历提了一些问题。很明显对方在面试前还是做了一点工作的，而且整个面试过程基本没有废话，我很喜欢这种面试风格。后面让我动手写一道算法题，是在数组中找出三个数之和为0的一道题。开始不久我就卡住了，原先以为自己会卡在数据结构或者算法的地方，后来发现不是这样的，我卡在了动手实现上。一些东西我知道思路，但我写不出来。究其原因的话，可能也是我太久没刷OJ了，动手能力退化了不少，另一反面本身基础就不够扎实，编码能力本来也不强，再加上面试时候的紧张， 结果就不太尽如人意。&lt;/p&gt;&#xA;&lt;p&gt;　　面试结果怎样已经没那么重要了，重要的是我的确在这次面试中清楚地认识到了自己还是说得太多看得太多做得太少，导致动手能力很弱，之后还是要在这方面加强才是。很感谢那家公司给我这个面试的机会。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;17.7.8：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;　　 昨天面试的时候表现得比较糟糕，我以为已经铁定没戏了，结果昨天晚些时候HR跟我说还有一轮面试，我以为这次会是关于ML方面的面试，于是又回去翻了翻之前记过的笔记。没想到，今天的面试还是写代码，不过面试官看我昨天表现得那么惨，今天就给了我一个简单的问题，求第n个斐波那契数，我最开始用递归写了一个，后来面试官问我还有没有别的方法，我又把用循环写的那种方式写了一下；之后面试官又问了我一个递进的问题：一只蜗牛一次可以爬１级或２级或３级或……或n级台阶，现在它要爬上n级台阶，问有多少种爬法？起初我以为是一个等差数列问题，愚蠢地说了一个n(n-1)/2。面试官置疑了一下，我发现了根本不对，于是开始拿出纸笔算，在面试官的引导下捣鼓了很久才得出正确的结果【当时是先计算n=1，n=2，n=3的情况然后推广得到通项是2^(n-1)，7.13晚上洗澡的时候突然想到其实除了最后一级台阶，其他所有台阶都有两种可能，迈上或者不迈，于是n-1级台阶就是2^(n-1)种情况…】…后面还聊了一些关于公司技术栈的事情，发现其实技术不太对口，他们目前主要还是做后端，而我还是想找一份数据相关的实习…总之第二轮面试依旧很僵硬，基本已经没有希望了我觉得。。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;17.7.11：&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;　　之前向洋葱数学投了简历，HR联系了我好几次一直没有联系上我，我一度觉得我可能和这家公司没有缘分，但终于我还是联系上了他们的HR，得知真相之后对HR的坚持不懈莫名有些感动…&lt;/p&gt;&#xA;&lt;p&gt;　　于是今天就去面试了 ，到了公司之后最大的感觉就是“哇这办公环境怎么这么好”，坐着观察了一会儿之后感觉这个公司整体的氛围很让我喜欢。之后数据组的组长就来了，首先是做了一下对我基本情况的一些了解，之后先问了一个SQL的问题，我心里很没底，因为我虽然过过一遍SQL的用法但并没有太多的实践经验，导致只说了一个基本思路；他看我SQL不太熟，于是问我如果用pandas的DataFrame怎么做，我同样回答了一个十分笨重但可行的方法；之后他又问了我一个对dict操作的python问题，我同样是用了一个“能解决问题但看起来有些笨拙”的方法做，其中被他指出了一些问题，经指出后还是改正了这些问题。这部分带给我的反思就是：&lt;strong&gt;代码写得太少啦！很多很基本的东西都没有记住！以后一定要多写代码！多写代码！！！！&lt;/strong&gt;；再之后面试官问了我这样一个问题：因为他们是做在线教育的，他们现在想做一个类似于Dota里面的天梯系统，让我做一个简单的设计。对于这个问题其实我有一些头绪，但是都很乱，组织不起来，在他的帮助下和一段时间的整理之后，终于大致地把思路理了出来，他还带着我对其中的一个核心部分进行了设计相关的讨论，整个过程他都在引导我一步步地达到核心，面试体验还是相当愉快的。之后又聊了一些别的技术的事情，比如我问了一下他们公司的技术栈，以及我一直不了解的为什么初创公司都爱用MongoDB之类的。和他聊的大概就是以上这些。&lt;/p&gt;&#xA;&lt;p&gt;　　后面又和HR聊了一会儿，聊了很多，方方面面都聊到了，个人目标啊，性格啊，等等等等，于是聊了很久，也询问了一些关于他们公司的事情。【HR还建议我应该找一个活泼开朗的女朋友……&lt;/p&gt;&#xA;&lt;p&gt;　　出来之后我才发现面试竟然持续了两个多小时，而我一点感觉都没有，完全沉浸在其中，没有注意到时间的流逝。总的来说面试体验还是十分不错的，而且技术也非常对口，期待能收到人生第一份实习Offer。&lt;/p&gt;</description>
    </item>
    <item>
      <title>来写个学期总结吧</title>
      <link>https://jrd.pub/170701_term-summary/</link>
      <pubDate>Sat, 01 Jul 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170701_term-summary/</guid>
      <summary>&lt;p&gt;这个学期就这样结束了，简单来写个总结吧，顺便做点计划。&lt;/p&gt;</summary>
      <description>&lt;p&gt;这个学期就这样结束了，简单来写个总结吧，顺便做点计划。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;看完了Coursera上Andrew Ng的Machine Learning；完成相应作业；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;读周志华先生的《机器学习》，但还有几章没读完；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;为了解决一些疑问，用Python写过几个小爬虫；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;看完了《SQL必知必会》，细致地学习了一波SQL；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《利用Python进行数据分析》看了小半本，学习了一些Numpy和pandas的用法，用Jupyter Notebook做了笔记；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;学了一点PyQt5；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;学习了数理统计、偏微分方程、实变函数与泛函分析、数学模型和复变函数与积分变换这几门课，总的来说每门课都还是很有意思的，惭愧的是我下的工夫还是太少；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;开始学习日语，背完了五十音图；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;参加了一次校赛建模，本来是想用numpy和pandas替代MATLAB，结果发现还是不行，于是就顺便增强了一下MATLAB方面的技能，但做得很随意，最后得了二等奖；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;报名参加了2017中国高校计算机大赛—大数据挑战赛；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;刷了几波实习信息，也投了一波简历，结果最后发现了一些意外的情况（其实是操作失误），导致估计假期的实习期待落空了；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;这两天考完试把双系统弄好了，Ubuntu+Win10，尽量把和编程开发有关的事情都移到Ubuntu里做，WIn10留作娱乐，希望下一次换系统是Mac OS；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《Planet Earth II》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《嫌疑人X的献身》（中国版）&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《人民的名义》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《驴得水》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《看不见的客人》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《百鸟朝凤》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《摔跤吧！爸爸 Dangal》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《TBBT Season 10》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《和食双神：最后的约定》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《四重奏》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《辩护人》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《求婚大作战》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《Silcon Valley Season 4》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《伊斯坦布尔的猫/Kedi》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《Elementary Season 5》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《The Flash Season 3》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《S.H.I.E.L.D. Season 4》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;机器之心 GMIS全球机器智能峰会；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Microsoft Build Tour 2017；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;读+摘抄完了杨伯峻先生的《论语译注》；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;读了一半《巨人的陨落》；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;入了SONY 100ABN；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;开了一个微信公众号没事写点无病呻吟的东西；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;　　干的事情还是感觉很少，效率还是极大地受到了情绪的影响。学期中之前感觉精神状态一直都还比较稳定，五月中旬到期末这段时间非常非常非常丧，生活失去了期待。但是还好有后面的期末考试（我第一次这么感激期末复习的到来），整个人还好没有这么堕落下去。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;既然不能去实习，那就还是按照原先想的那样，继续让自己变得更好吧，把数据结构和算法弄一弄，再多了解和熟悉一下python，机器学习的部分也还需要继续提高。所以接下来的小学期和暑假，主要就是&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《数据结构与算法分析：C语言描述》+ MOOC，把数据结构和算法弄一下；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;考虑看看《流畅的Python》;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《机器学习基石》；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;《集体智慧编程》、《机器学习实战》&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;复习数理统计，考虑看看课本和陈希孺的书；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;看看《陶哲轩实分析》；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;尝试发展一些别的兴趣爱好；&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;学学日语；&#xA;​&lt;/p&gt;&#xA;&lt;p&gt;暂时就想到这些，大概就这样吧；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>pandas笔记</title>
      <link>https://jrd.pub/170614-pandas/</link>
      <pubDate>Wed, 14 Jun 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170614-pandas/</guid>
      <summary>&lt;p&gt;看书时顺手用Jupyter Notebook做的笔记。&lt;/p&gt;&#xA;&lt;p&gt;并不是全部，后面还有一些用法实在是不想啃了，等用到再来学吧……&lt;/p&gt;</summary>
      <description>&lt;p&gt;看书时顺手用Jupyter Notebook做的笔记。&lt;/p&gt;&#xA;&lt;p&gt;并不是全部，后面还有一些用法实在是不想啃了，等用到再来学吧……&lt;/p&gt;&#xA;&lt;p&gt;&lt;escape&gt;&lt;p class=&#34;article-more-link&#34;&gt;&lt;a href=&#34;https://jrd.pub/python_data_analysis/pandas.html&#34;&gt;Read More&lt;/a&gt;&lt;/p&gt;&lt;/escape&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Machine Learning Notes 07</title>
      <link>https://jrd.pub/170601_ml_notes7/</link>
      <pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170601_ml_notes7/</guid>
      <summary></summary>
      <description>&lt;h2 id=&#34;what-should-we-do-if-we-have-a-bad-predictions&#34;&gt;What should we do if we have a bad predictions?&lt;/h2&gt;&#xA;&lt;p&gt;The following options may be feasible:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Get more training examples;&lt;/li&gt;&#xA;&lt;li&gt;Try smaller sets of features;&lt;/li&gt;&#xA;&lt;li&gt;Try getting additional features;&lt;/li&gt;&#xA;&lt;li&gt;Try adding polynomial features (increasing degree of polynomial);&lt;/li&gt;&#xA;&lt;li&gt;Try decreasing \(\lambda\);&lt;/li&gt;&#xA;&lt;li&gt;Try increasing \(\lambda\);&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;So we can take a kind of test called &lt;strong&gt;machine learning diagnostic&lt;/strong&gt; to insight what is/isn&amp;rsquo;t working with a learning algorithm, and gain guidance as to how best to improve its performance. It may take time to implement, but doing so can be vary good use of your time.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;evaluating-a-hypothesis&#34;&gt;Evaluating a hypothesis&lt;/h2&gt;&#xA;&lt;p&gt;To evaluating whether a hypothesis is good or bad (and we don&amp;rsquo;t have extra test set), we can divide our training set at first to two parts (usually according to 7/3 proportion), and one for training, the other for testing, which helps us to avoid &lt;strong&gt;over fitting&lt;/strong&gt; (perform on training set well, but bad on new examples not in training set)&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;model-selection&#34;&gt;Model Selection&lt;/h2&gt;&#xA;&lt;p&gt;Take linear regression as a example, we use \(h_{\theta}(x) = \theta_0 +\theta_1 x + \theta_2 x^2 + \cdots\) as our hypothesis function, and we can add the degree of polynomial to make our hypothe/.sis better, but it may brings the over fitting problem, so we need to find out the best degree.&lt;/p&gt;&#xA;&lt;p&gt;To  achieve so, we can compute the \(J_{test}\)(cost of different degrees \(d\) on test set), and choose the best \(d\), but it&amp;rsquo;s only fit to the test set. So we divide the data set into three parts:&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;training set (60% usually)&lt;/li&gt;&#xA;&lt;li&gt;cross validation set (20% usually)&lt;/li&gt;&#xA;&lt;li&gt;test set (20% usually)(check if the combo of \(\theta\) and \(\lambda\) has a good generalization of the problem, avoiding over fitting)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;and three kinds of cost function is \(J_{train}\), \(J_{cv}\), \(J_{test}\).&lt;/p&gt;&#xA;&lt;p&gt;Then for different \(d(d=1, 2, 3, \cdots)\), minimize \(J(\theta)\) with \(J_{train}\) and \(J_{test}\), then compute the \(J_{cv}\) for each \(d\). We choose \(d\) who has the lowest \(J_{cv}\), and that.s how we do the model selection.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;bias-vs-variance&#34;&gt;Bias vs. Variance&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/bias_vs_var.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;h3 id=&#34;diagnosing-bias-vs-variance&#34;&gt;Diagnosing bias vs. variance&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If \(J_{train}\) is high and \(J_{cv}\approx J_{train}\), we can tell it&amp;rsquo;s a &lt;strong&gt;bias&lt;/strong&gt; problem;&lt;/li&gt;&#xA;&lt;li&gt;If \(J_{train}\) is low and \(J_{cv}\gg J_{train}\), we can tell it&amp;rsquo;s a &lt;strong&gt;variance&lt;/strong&gt; problem;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;about-regularization&#34;&gt;About regularization&lt;/h2&gt;&#xA;&lt;p&gt;As we know, appropriate \(\lambda\) (regularization parameter) can help to prevent over fitting, but when the \(\lambda\) is too large or too small. it won&amp;rsquo;t work as so:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/different_lambda.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;So choosing appropriate value of \(\lambda\) is very necessary.&lt;/p&gt;&#xA;&lt;p&gt;We can try different \(\lambda\), minimize \(J(\theta)\), then compute \(J_{cv}\) (like what we do the model selection), and we can finf the best \(\lambda\).&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;learning-curves&#34;&gt;Learning Curves&lt;/h2&gt;&#xA;&lt;p&gt;The learning curves describe the relationship of \(m\)(training set size) and error(\(J_{cv},J_{train}\)), it&amp;rsquo;s look like:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/learningcurves.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;And if the algorithm is suffering from high bias, the learning curve is look like:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/high_bias_curve.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;We can see from the graph that the increasing \(m\) doesn&amp;rsquo;t help to lower the bias, so we can conclude that getting more training data will not help to solve high-bias problem.&lt;/p&gt;&#xA;&lt;p&gt;While if the algorithm is suffering from high variance, the learning curve is look like:&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/high_var_curve.JPG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;From the graph we can see that there is a gap between \(J_{cv}\) and \(J_{train}\), and as \(m\) increasing, the gap diminishes and the bias is also decreasing. So we can conclude that getting more training data is helpful to solve the high-variance problem.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Numpy入门笔记</title>
      <link>https://jrd.pub/170511-numpy/</link>
      <pubDate>Thu, 11 May 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170511-numpy/</guid>
      <summary>&lt;p&gt;看书时顺手用Jupyter Notebook做的笔记。&#xA;并没有涵盖Numpy的全部用法，仅仅是入门部分的一些知识。&lt;/p&gt;</summary>
      <description>&lt;p&gt;看书时顺手用Jupyter Notebook做的笔记。&#xA;并没有涵盖Numpy的全部用法，仅仅是入门部分的一些知识。&lt;/p&gt;&#xA;&lt;p&gt;&lt;escape&gt;&lt;p class=&#34;article-more-link&#34;&gt;&lt;a href=&#34;https://jrd.pub/article_imgs/NpBasic.html&#34;&gt;Read More&lt;/a&gt;&lt;/p&gt;&lt;/escape&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>IPython的一些笔记</title>
      <link>https://jrd.pub/170502_ipython/</link>
      <pubDate>Tue, 02 May 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170502_ipython/</guid>
      <summary>&lt;p&gt;最近在看《利用Python进行数据分析》…&lt;/p&gt;</summary>
      <description>&lt;p&gt;最近在看《利用Python进行数据分析》…&lt;/p&gt;&#xA;&lt;p class=&#34;c-article__btn p-list-article__btn&#34;&gt;&lt;a href=&#34;https://jrd.pub/python_data_analysis/IPython.html&#34;&gt;Read More&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL Syntax(Ⅲ)</title>
      <link>https://jrd.pub/170425_sql3/</link>
      <pubDate>Tue, 25 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170425_sql3/</guid>
      <summary>&lt;p&gt;后面储存过程、事务处理、游标和一些高级特性感觉太遥远就只是翻了翻，没作整理。&lt;/p&gt;</summary>
      <description>&lt;p&gt;后面储存过程、事务处理、游标和一些高级特性感觉太遥远就只是翻了翻，没作整理。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;联结表&#34;&gt;联结表&lt;/h2&gt;&#xA;&lt;h5 id=&#34;创建联结&#34;&gt;创建联结&lt;/h5&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; vend_name, prod_name, prod_price&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Venders, Products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; Venders.vend_id &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Products.id&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;　　简单解释一下，Venders和Products是一个数据库下的两张表，他们都有一个列叫Vend_id, prod_name和prod_price是表Products中的列，vend_name是表Venders中的列。&#xA;需要注意的是，如果在SELECT中添加了共有的列名，需要做完全限定，比如上面的例子中，如果需要把vend_id这个列提取出来，需要用Venders.vend_id或者Products.id来完全限定。&#xA;另外就是，WHERE子句非常重要，如果这里不用WHERE子句的话，输出的结果将会是指定的两部分内容的每一行的组合的结果，而忽略其中的逻辑，输出结果的行数将等于第一部分的列乘以第二个部分列的行数。这个结果也被称为&lt;em&gt;笛卡尔积&lt;/em&gt;。所以，在联结表时为了避免输出的结果过长，千万不要忘了WHERE子句。&lt;/p&gt;&#xA;&lt;p&gt;　　以上的联结称为等值联结(equijoin)，也称为内联结(inner join)，我们可以用内联结的写法来重新写与上面等价的SQL语句：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; vend_name, prod_name, prod_price&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Venders &lt;span style=&#34;color:#ff79c6&#34;&gt;INNER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;JOIN&lt;/span&gt; Products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;ON&lt;/span&gt; Venders.vend_id &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Products.id&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;　　实际上，联结表的操作也可以用子查询完成，但SQL语句书写起来会麻烦许多。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;创建高级联结&#34;&gt;创建高级联结&lt;/h2&gt;&#xA;&lt;h5 id=&#34;使用表别名&#34;&gt;使用表别名&lt;/h5&gt;&#xA;&lt;p&gt;表别名还有以下这种有趣的用法：&lt;/p&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; cust_name, cust_contract&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Customers &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;C&lt;/span&gt;, Orders &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; O, OrderItems &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; OI&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;C&lt;/span&gt;.cust_id &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; O.cust_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;AND&lt;/span&gt; OI.order_num &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; O.order_num&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;AND&lt;/span&gt; prod_id &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;RGAN01&amp;#39;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;P.S.:Oracle中没有AS这个用法&lt;/p&gt;&#xA;&lt;h5 id=&#34;其他类型的联结&#34;&gt;其他类型的联结&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;自联结(self-join)&#xA;使用别名的好处在于可以不止一次地引用同一个表。下面两段SQL语句是等价的：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; cest_id, cust_name, cust_contact&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Customers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; cust_name &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; cust_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Customers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                   &lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; cust_contact &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Jim Jones&amp;#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; c1.cust_id, c1.cust_name, c1.cust_contact&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Customers &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; c1, Customers &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; c2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; c1.cust_name &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; c2.cust_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;AND&lt;/span&gt; c2.cust_contract &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Jim Jones&amp;#39;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;　　第一段使用了子查询,而第二段使用了联结，他们的效果是一样的，但在许多DBMS中，处理联结远比子查询快得多。&#xA;　　&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;自然联结(natural join)&lt;/p&gt;&#xA;&lt;p&gt;标准的联结返回所有的数据，相同的列甚至多次出现。自然联结排除多次出现，使每一列只返回一次。如：&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;C&lt;/span&gt;.&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;, O.order_num, O.order_date,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       OI.prod_id, OI.quantity, OI.item_price&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Customers &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;C&lt;/span&gt;, Orders &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; O, OrderItems &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; OI&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;C&lt;/span&gt;.cust_id &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; O.cust_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;AND&lt;/span&gt; OI.order_num &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; O.order_num&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;AND&lt;/span&gt; prod_id &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;RGAN01&amp;#39;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;外联结&#xA;包含在相关表中没有关联行的行的联结，称为外联结(outer join)。用法如：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; Customers.cust_id, Orders.order_num&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Customers &lt;span style=&#34;color:#ff79c6&#34;&gt;LEFT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;JOIN&lt;/span&gt; Orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;ON&lt;/span&gt; Customers.cust_id &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Orders.cust_id;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;注意，OUT JOIN前必须使用RIGHT或者LEFT关键字制定包括其所有行的表（RIGHT指出的是OUTER JOIN了FROM中右边的表，LEFT同理）。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;全外联结&#xA;检索两个表中的所有行并关联那些可以关联的行，这种外联结称为全外联结(full outer join),如：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; Customers.cust_id, Orders.order_num&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Customers &lt;span style=&#34;color:#ff79c6&#34;&gt;FULL&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;OUTER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;JOIN&lt;/span&gt; Orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;ON&lt;/span&gt; Customers.cust_id &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Orders.cust_id;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;当然，也可以在联结中使用聚集函数。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;组合查询&#34;&gt;组合查询&lt;/h2&gt;&#xA;&lt;p&gt;SQL允许执行多个查询（多条SELECT语句），并将结果作为一个查询结果集返回。这些组合查询通常称为并(union)或复制查询(compound query)&lt;/p&gt;&#xA;&lt;h5 id=&#34;使用union&#34;&gt;使用UNION&lt;/h5&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; cust_name, cust_contact, cust_email&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Customers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; cust_state &lt;span style=&#34;color:#ff79c6&#34;&gt;IN&lt;/span&gt; (&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;IL&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;IN&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;MI&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;UNION&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; cust_name, cust_contact, cust_email&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Customers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; cust_name &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Fun4All&amp;#39;&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;　　当然这里可以用OR达成同样的效果，但对于较复杂的过滤条件，或者从多个表检索数据的情形，使用UNION可能会使处理更简单。另外需要注意,UNION每个查询必须包含相同的列，表达式或聚集函数。&lt;/p&gt;&#xA;&lt;p&gt;　　此外，UNION会默认自动取消重复的行，当然如果有需要，也可以改变它，使用UNION ALL即可。如果需要对组合查询的结果进行排序，只需要在最后加上ORDER BY即可。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;插入数据&#34;&gt;插入数据&lt;/h2&gt;&#xA;&lt;h5 id=&#34;使用insert&#34;&gt;使用INSERT&lt;/h5&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;VALUES&lt;/span&gt;(Value &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Value &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Value &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       ......);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;　　这种用法很简单，但并不安全，应该尽量避免使用。更安全（也更烦琐）的用法应当是：&lt;/p&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;(column1,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       column2,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       column3,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       ......)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;VALUES&lt;/span&gt;(Value &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Value &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       Value &lt;span style=&#34;color:#bd93f9&#34;&gt;3&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       ......);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;　　Values将以指定的次序匹配指定的列名，不一定按各列出现在表中的实际次序。其优点是，即使表的结构改变，这条INSERT仍然能正确工作。&#xA;　　&lt;/p&gt;&#xA;&lt;h5 id=&#34;插入检索出的数据&#34;&gt;插入检索出的数据&lt;/h5&gt;&#xA;&lt;p&gt;　　INSERT还存在另一种形式，可以利用它将SELECT语句的结果插入表中，这就是所谓的INSERT SELECT，如：&lt;/p&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;INSERT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;INTO&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;(column1,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       column2,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       column3,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       ......)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; column_a,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       column_b,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       column_c,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       ......&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; another_table_name;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;　　当然，利用INSERT SELECT，可以实现从一个表复制到另一个表：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;INTO&lt;/span&gt; table1&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; table2;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;在MariaDB, MySQL, Oracle, PostgreSQL 和 SQLite 使用的用法稍有不同：&lt;/p&gt;&#xA;&lt;h2 id=&#34;hahahugoshortcode28s13hbhb&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;TABLE&lt;/span&gt; table1 &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; table2;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;更新和删除数据&#34;&gt;更新和删除数据&lt;/h2&gt;&#xA;&lt;h5 id=&#34;更新数据&#34;&gt;更新数据&lt;/h5&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;UPDATE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SET&lt;/span&gt; column1&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;value1,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    column2&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;value2,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ......&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; certain_column &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; certain_value;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;h5 id=&#34;删除数据&#34;&gt;删除数据&lt;/h5&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;DELETE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; ......&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;创建和操纵表&#34;&gt;创建和操纵表&lt;/h2&gt;&#xA;&lt;h5 id=&#34;创建表&#34;&gt;创建表&lt;/h5&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    column1_name&#x9;column_type&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    column2_name&#x9;column_type&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    column2_name&#x9;column_type&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt;,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ......&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;其中，NULL是默认设置，可以省略。&lt;/p&gt;&#xA;&lt;h5 id=&#34;指定默认值&#34;&gt;指定默认值&lt;/h5&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    column1_name  column_type  &lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;DEFAULT&lt;/span&gt; [value],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    column2_name  column_type  &lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;DEFAULT&lt;/span&gt; [value],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    column2_name  column_type  &lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;NOT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;NULL&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;DEFAULT&lt;/span&gt; [value],&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ......&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;在实际中，常用的默认值会用到当前时间。&lt;/p&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;DBMS&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;函数/变量&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;Access&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;NOW()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;DB2&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;CURRENT_DATE&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;MySQL&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;CURRENT_DATE()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;Oracle&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;SYSDATE&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;PostgreSQL&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;CURRENT_DATE&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;SQL Server&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;GETDATE()&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;SQLite&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;date(&amp;rsquo;now&#39;)&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;h5 id=&#34;更新表&#34;&gt;更新表&lt;/h5&gt;&#xA;&lt;p&gt;以下展示了添加和删除列的用法：&lt;/p&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;ADD&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;column_name&lt;/span&gt; column_type;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;ALTER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;column_name&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;h5 id=&#34;删除表&#34;&gt;删除表&lt;/h5&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;DROP&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;TABLE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;使用视图&#34;&gt;使用视图&lt;/h2&gt;&#xA;&lt;p&gt;视图(View)，其实就是封装起来的查询操作。【使用视图的好处大约就和贯彻面向对象思想的好处一样多。】&lt;/p&gt;&#xA;&lt;h5 id=&#34;创建视图&#34;&gt;创建视图&lt;/h5&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;CREATE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;VIEW&lt;/span&gt; view_name &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.....&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ff79c6&#34;&gt;SQL&lt;/span&gt; Query]&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;.....&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;之后需要再次执行该查询操作时，只需要直接用&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; column1,column2,...&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; view_name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; ...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;即可。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL Syntax(Ⅱ)</title>
      <link>https://jrd.pub/170423_sql2/</link>
      <pubDate>Sun, 23 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170423_sql2/</guid>
      <summary>&lt;p&gt;继续。&lt;/p&gt;</summary>
      <description>&lt;p&gt;继续。&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;创建计算字段&#34;&gt;创建计算字段&lt;/h2&gt;&#xA;&lt;p&gt;以下以书中例子呈现相关用法。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;拼接字段&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; vend_name &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;(&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; vend_country&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; venders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;BY&lt;/span&gt; vender_name;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; vend_name &lt;span style=&#34;color:#ff79c6&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;(&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;||&lt;/span&gt; vend_country&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; venders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;BY&lt;/span&gt; vender_name;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;以上两种写法是等价的，还可以用RTRIM()去除字符串右边的空格，用LTRIM()去除字符串左边的空格，用TRIM()去除字符串左右两边的空格。&#xA;特别地，在MySQL和MariaDB中需要使用Concat()函数来完成相同的功能：&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;#&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;In&lt;/span&gt; MySQL &lt;span style=&#34;color:#ff79c6&#34;&gt;and&lt;/span&gt; MariaDB&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; Concat(vend_name, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;(&amp;#39;&lt;/span&gt;, vend_country, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;)&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; venders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;BY&lt;/span&gt; vender_name;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;为结果使用别名&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; vend_name &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;(&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; vend_country&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;)&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; vend_title&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; venders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;BY&lt;/span&gt; vender_name;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;执行算术计算&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; prod_id,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       quantity,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       item_price,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       quantity&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;item_price &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; expanded_price&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; OrderItems&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; order_num &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;20008&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;使用函数处理数据&#34;&gt;使用函数处理数据&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;函数&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;说明&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;LEFT()（或使用子字符串函数）&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;返回字符串左边的字符&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;LENGTH()（也使用DATALENGTH()或LEN()）&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;返回字符串的长度&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;LOWER()（Access使用LCASE()）&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;将字符串转换为小写&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;SOUNDEX()&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;返回字符串的SOUNDEX值（Access和PostgreSQL不支持，SQLite需要编译支持）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;UPPER()&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;将字符串转换为大写&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;DATEPART()&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;返回日期类型中的年、月或日&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;p&gt;关于SOUNDEX()，&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; cust_name, cust_contact&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Customers&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; SOUNDEX(cust_contact) &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; SOUNDEX(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Michael Green&amp;#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;【实测了一下，Michelle和Michael，Knuth和Kant的SOUNDEX值都是一样的，但是Bitch和Beach是不一样的，前者的SOUNDEX值是B320，后者则是B200……】&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;汇总数据&#34;&gt;汇总数据&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;聚集函数&lt;/p&gt;&#xA;&lt;p&gt;常用的函数包括AVG(), COUNT(), MAX(), MIN(), SUM()等，可以使用WHERE过滤，这些函数默认会忽略值为NULL的行，用*则可以不忽略；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;聚集不同值&lt;/p&gt;&#xA;&lt;p&gt;ALL代表对所有行进行运算，是默认行为，不需要指定；&lt;/p&gt;&#xA;&lt;p&gt;DISTINCT只对不同的行进行操作；&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;组合聚集函数&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; num_items,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#ff79c6&#34;&gt;MIN&lt;/span&gt;(prod_price) &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; price_min,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#ff79c6&#34;&gt;MAX&lt;/span&gt;(prod_price) &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; price_max,&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       ACG(prod_price) &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; price_avg&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Products;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;分组数据&#34;&gt;分组数据&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;创建分组&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; vend_id, &lt;span style=&#34;color:#ff79c6&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; num_prods&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Products&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;BY&lt;/span&gt; vend_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;/*output:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;vend_id&#x9;&#x9;num_prods&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;-------&#x9;&#x9;---------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;BRS01&#x9;&#x9;3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;DLL01&#x9;&#x9;4&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;FNG01&#x9;&#x9;2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;其中，GROUP BY后可以包含任意数目的列以进行更细致的数据分组，还可以在子句中嵌套分组。SELECT语句中的每一列都必须在GROUP BY子句中给出。包含NULL值的行会被作为一个分组返回。GROUP BY子句必须在WHERE子句之后，ORDER BY子句之前。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;过滤分组&lt;/p&gt;&#xA;&lt;p&gt;即规定包括哪些组，排除哪些组。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; cust_id, &lt;span style=&#34;color:#ff79c6&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;BY&lt;/span&gt; cust_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;HAVING&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;这里不能用 WHERE替换HAVING，可以理解为 WHERE 在分组前进行过滤，故排除的行不包括在分组中，而 HAVING  &#x9;在数据分组后过滤。当然，两个子句并非不能同时存在，如：&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; cust_id, &lt;span style=&#34;color:#ff79c6&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;AS&lt;/span&gt; orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; prod_price &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;4&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;GROUP&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;BY&lt;/span&gt; cust_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;HAVING&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;COUNT&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;/*output:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;vend_id&#x9;&#x9;num_prods&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;-------&#x9;&#x9;---------&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;BRS01&#x9;&#x9;3&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;DLL01&#x9;&#x9;2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;分组和排序&lt;/p&gt;&#xA;&lt;p&gt;下表列出了 ORDER BY 和 GROUP BY 的区别&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;ORDER BY&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;GROUP BY&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;对产生的输出进行排序&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;对行分组，但输出可能不是分组的顺序【所以可以在后面再使用ORDER BY对输出进行排序】&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;任意列都可以使用（甚至非选择的列也可以使用）&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;只可能使用选择列或表达式列，而且必须使用每个选择列表达式&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;不一定需要&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;如果与聚集函数一起使用列（或表达式），则必须使用&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;使用子查询&#34;&gt;使用子查询&lt;/h2&gt;&#xA;&lt;p&gt;子查询(Subquery)，即嵌套在其他查询中的查询。在需要多个SQL语句共同完成一个任务且他们之间存在递进关系时，可以使用类似于以下的用法：&lt;/p&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; cust_id&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; Orders&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; order_num &lt;span style=&#34;color:#ff79c6&#34;&gt;IN&lt;/span&gt; (&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; order_num&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; OrderItems&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; prod_id &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;RGAN01&amp;#39;&lt;/span&gt;);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;这其实就是将括号中的 SELECT order_num FROM OrderItems WHERE prod_id = &amp;lsquo;RGAN01&amp;rsquo; 这一句的输出结果传递给外面的 WHERE 查询子句。&lt;/p&gt;</description>
    </item>
    <item>
      <title>SQL Syntax(Ⅰ)</title>
      <link>https://jrd.pub/170422_sql1/</link>
      <pubDate>Sat, 22 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170422_sql1/</guid>
      <summary>&lt;p&gt;　　这两天刚好在翻《SQL必知必会》，就顺手写几篇Markdown整理一下语法吧。&lt;/p&gt;</summary>
      <description>&lt;p&gt;　　这两天刚好在翻《SQL必知必会》，就顺手写几篇Markdown整理一下语法吧。&lt;/p&gt;&#xA;&lt;h2 id=&#34;检索数据&#34;&gt;检索数据&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; column0, column1,... &lt;span style=&#34;color:#6272a4&#34;&gt;--&amp;#39;\*&amp;#39; for all&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In SQL Server and Access,&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; TOP [num] column0, column1,... &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In DB2,&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; column0, column1,... &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FETCH&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;FIRST&lt;/span&gt; [num] &lt;span style=&#34;color:#ff79c6&#34;&gt;ROWS&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;ONLY&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In Oracle,&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; column0, column1,... &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; ROWNUM &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;=&lt;/span&gt; [num];&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;In MySQL, MariaDB, PostgreSQL and SQLite&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; column0, column1,... &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;LIMIT&lt;/span&gt; [num] {&lt;span style=&#34;color:#ff79c6&#34;&gt;OFFSET&lt;/span&gt; [num]};&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Select distinct value&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;DISTINCT&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;column_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Annotation&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;#&lt;/span&gt; Here &lt;span style=&#34;color:#ff79c6&#34;&gt;is&lt;/span&gt; a &lt;span style=&#34;color:#ff79c6&#34;&gt;comment&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; column0 &lt;span style=&#34;color:#6272a4&#34;&gt;-- Here is also a comment&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;/*&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;Also a comment~&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;*/&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;排列检索数据&#34;&gt;排列检索数据&lt;/h2&gt;&#xA;&lt;h2 id=&#34;hahahugoshortcode26s7hbhb&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; column0, column1,... &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;ORDER&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;BY&lt;/span&gt; column0, column1, ...;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;-- Also, you can use order numbers to represent certain column&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;-- Use &amp;#39;DESC&amp;#39; or &amp;#39;ASC&amp;#39; in the end to assigned the order direction&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;过滤数据&#34;&gt;过滤数据&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; column0, column1,... &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;column&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; [value];&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;高级数据过滤&#34;&gt;高级数据过滤&lt;/h2&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; column0, column1,... &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; [clause] &lt;span style=&#34;color:#ff79c6&#34;&gt;AND&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;OR&lt;/span&gt; [clause];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;-- The priority of &amp;#39;AND&amp;#39; is higher than &amp;#39;OR&amp;#39; when they are used together&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Actually, &amp;lsquo;OR&amp;rsquo; is same as &amp;lsquo;IN&amp;rsquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; column0, column1,... &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; [&lt;span style=&#34;color:#ff79c6&#34;&gt;column_name&lt;/span&gt;] &lt;span style=&#34;color:#ff79c6&#34;&gt;IN&lt;/span&gt; ([value1],[value2],...);&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;lsquo;NOT&amp;rsquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;hahahugoshortcode26s11hbhb&#34;&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-sql&#34; data-lang=&#34;sql&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;SELECT&lt;/span&gt; column0, column1,... &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;FROM&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;table_name&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ff79c6&#34;&gt;WHERE&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;NOT&lt;/span&gt; xxxx;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/h2&gt;&#xA;&lt;h2 id=&#34;用通配符进行过滤&#34;&gt;用通配符进行过滤&lt;/h2&gt;&#xA;&lt;table&gt;&#xA;  &lt;thead&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;通配符&lt;/th&gt;&#xA;          &lt;th style=&#34;text-align: center&#34;&gt;说明&lt;/th&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/thead&gt;&#xA;  &lt;tbody&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;%(* in Access)&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;任意字符任意次数&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;_&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;任意字符一次&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;      &lt;tr&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;[]&lt;/td&gt;&#xA;          &lt;td style=&#34;text-align: center&#34;&gt;指定一个字符集, 如 [JM] 匹配&amp;rsquo;J&amp;rsquo;和&amp;rsquo;M&amp;rsquo;（用&amp;quot;^&amp;ldquo;可以否定）&lt;/td&gt;&#xA;      &lt;/tr&gt;&#xA;  &lt;/tbody&gt;&#xA;&lt;/table&gt;</description>
    </item>
    <item>
      <title>Machine Learning Notes 06</title>
      <link>https://jrd.pub/170406_ml_notes6/</link>
      <pubDate>Wed, 05 Apr 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170406_ml_notes6/</guid>
      <summary></summary>
      <description>&lt;h2 id=&#34;how-biological-neural-network-work&#34;&gt;How biological neural network work&lt;/h2&gt;&#xA;&lt;p&gt;  As the following image shown, there are three main parts in each neuron:  &lt;strong&gt;Dendrites&lt;/strong&gt;, &lt;strong&gt;Cell Body&lt;/strong&gt; and &lt;strong&gt;Axon&lt;/strong&gt;. The signals come from the last neuron to the dendrites first, then enter into the cell body. While the potential would be judged with the threshold and then output the signals into the axon, that&amp;rsquo;s approximately how biological nerual network run.&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/neuron.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;escape&gt;&lt;!-- more --&gt;&lt;/escape&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;how-artificial-neural-network-work&#34;&gt;How artificial neural network work&lt;/h2&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/perceptron.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;  The pictures above shows a basic unit of the artificial nerual network, we usually call it as &lt;em&gt;perceptron&lt;/em&gt;, which you can consider it as the neuron of the neural network. It works similarly as the biological neural network. The input data  \(a_i\) was summed with the weights \(\omega\) , and then input the summing value and the threshold into the &lt;em&gt;Activation Function&lt;/em&gt;, then we get the output value. We often choose the function \( g(z)=\frac{1}{1+e^{-z}} \) as our activation function. Then we return the bias back to adjust the parameters (weights \(\omega\)), when the parameters converge, the learning process end.&lt;/p&gt;&#xA;&lt;p&gt;  And here&amp;rsquo;s what a three-layer ann looks like,&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/3lann.jpg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;  The first layer, which is the input data belong to, is called &lt;em&gt;Input Layer&lt;/em&gt;, while the last layer is called as &lt;em&gt;Output Layer&lt;/em&gt; which is used to ouput data. And layer(s) in the middle of the input layer and output layer is called &lt;em&gt;Hidden Layer&lt;/em&gt;, and the quantities of the hidden layers can be 1, 2, 3, &amp;hellip;, even hundreds or thousands. the more hidden layers a neural network have, the more complex the system would be, which causes the calculation more difficult (and that&amp;rsquo;s why we need more).&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;feedforward-propagation-algorithm&#34;&gt;Feedforward Propagation Algorithm&lt;/h2&gt;&#xA;&lt;p&gt;  We obtain the output first, by: \(y_{j}=g(\sum^{n}_{i=1}\omega_{ji}x_i-\theta),\)&lt;/p&gt;&#xA;&lt;p&gt;,and we often choose sigmoid function \(g(z)=\frac{1}{1+e^{-z}}\) as our activation function. For the more complex situation, we can also use vectorization:&lt;/p&gt;&#xA;&lt;p&gt;\(a_{n+1}=g(a_{n}*\Theta_n)\)&lt;/p&gt;&#xA;&lt;p&gt;(\(a_n\) stands for the input in the \(n^{th}\) layer)&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;back-propagation-algorithm&#34;&gt;Back Propagation Algorithm&lt;/h2&gt;&#xA;&lt;p&gt;For the training set \({(x^{(1)},y^{(1)}),\cdots,(x^{(m)},y^{(m)}) }\), \(\Delta_{ij}^{(l)}=0 \) (for all \(l,i,j\)). Then we run the following loop:&lt;/p&gt;&#xA;&lt;p&gt;For \(i = 1\) to \(m\):&lt;/p&gt;&#xA;&lt;p&gt;　　Set \(a^{(1)}=x^{(i)}\)&lt;/p&gt;&#xA;&lt;p&gt;　　Perform forward propagation to compute \(a^{(l)}\) for \(l=2,3,..,L\)&lt;/p&gt;&#xA;&lt;p&gt;　　Using \(y^{(i)}\), compute \(\delta^{L}=a^{(L)}-y^{(i)}\)&lt;/p&gt;&#xA;&lt;p&gt;　　Compute \(\delta^{(L-1)}, \delta^{(L-2)}, \cdots, \color{red}{\delta^{(2)}}\)&lt;/p&gt;&#xA;&lt;p&gt;　　\( \Delta_{ij}^{(l)}:=\Delta_{ij}^{(l)} + a^{(l)}&lt;em&gt;{j}\delta^{l+1}&lt;/em&gt;{i} \)&lt;/p&gt;&#xA;&lt;p&gt;After that,&lt;/p&gt;&#xA;&lt;p&gt;　　\(D_{ij}^{(l)}:= \frac{1}{m}\Delta_{ij}^{(l)}+ \lambda\Theta^{(l)}_{ij}\)   if \(j\neq0\)&lt;/p&gt;&#xA;&lt;p&gt;　　\(D_{ij}^{(l)}:= \frac{1}{m}\Delta_{ij}^{(l)}\)　 if \(j=0\)&lt;/p&gt;&#xA;&lt;p&gt;And we get:&lt;/p&gt;&#xA;&lt;p&gt;　　\(\frac{\partial}{\partial\Theta^{(l)}_{ij}}J(\Theta) = D_{ij}^{(l)}\)&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;process-of-training-a-neural-network&#34;&gt;Process of Training a Neural Network&lt;/h2&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;Randomly initialize the weights;&lt;/li&gt;&#xA;&lt;li&gt;Implement forward propagation to get \(h_{\Theta}(x^{(i)})\) for any \(x^{(i)}\);&lt;/li&gt;&#xA;&lt;li&gt;Implement the cost function;&lt;/li&gt;&#xA;&lt;li&gt;Implement backpropagation to compute partial derivatives;&lt;/li&gt;&#xA;&lt;li&gt;Use gradient checking to confirm that your backpropagation works. Then disable gradient checking;&lt;/li&gt;&#xA;&lt;li&gt;Use gradient descent or a built-in optimization function to minimize the cost function with the weights in theta;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>一条置顶声明（已经不是了）</title>
      <link>https://jrd.pub/170507_notice/</link>
      <pubDate>Tue, 21 Mar 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170507_notice/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;由于在2017.3.21，&lt;a href=&#34;http://dev.duoshuo.com/threads/58d1169ae293b89a20c57241&#34;&gt;多说官方&lt;/a&gt;发布了重要通知：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;因公司业务调整，非常遗憾的向大家宣布多说项目即将关闭。 我们将于2017年6月1日正式关停服务，在此之前您可以通过后台的数据导出功能导出自己站点的评论数据。 对此给您造成的不便，我们深表歉意，感谢您的一路相伴。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;且在博客评论领域中覆盖率最广的Disqus并不支持国内访问，其他评论系统我都并不太喜欢，再加上本身其实也没多少人会来看我的博客……所以打算关闭评论系统了…&lt;/p&gt;&#xA;&lt;p&gt;另外在评论系统正式关闭之前…我暂时还不会主动关掉它…先留着吧…毕竟看一天少一天了……&lt;/p&gt;&#xA;&lt;p&gt;……不知道除了我还有谁会看见这条声明：）&lt;/p&gt;</description>
    </item>
    <item>
      <title>开学已经四周了</title>
      <link>https://jrd.pub/170319-plans/</link>
      <pubDate>Sun, 19 Mar 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170319-plans/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;时间过得真快，开学已经四周了……&lt;/p&gt;&#xA;&lt;p&gt;  这四周过得并没有想象中的好，被一些事情占据了不少时间，自己也浪费了很多时间，导致总共到现在Coursera的课仅仅推了不到两周的内容………&lt;/p&gt;&#xA;&lt;p&gt;  于是，为了改变这种颓废的状态，打算开始实践最近发现的&lt;a href=&#34;https://www.zhihu.com/question/31877598/answer/53667346&#34;&gt;沉浸工作法&lt;/a&gt;，并且受https://github.com/lanshan-studio/weekly 的启发，决定开始写周简报督促自己的学习，暂定每周日写吧。周报就放在这好了 &lt;a href=&#34;https://github.com/GabrielDrapor/Weekly&#34;&gt;https://github.com/GabrielDrapor/Weekly&lt;/a&gt;&lt;/p&gt;&#xA;&lt;p&gt;  另外就是，这学期课内的课真的有点难度了，不能再像之前那样堆到期末再来学了，平时也要多看书。【上学期概率论学的不踏实，数理统计真的好难啊……&lt;/p&gt;</description>
    </item>
    <item>
      <title>A Concrete Plan</title>
      <link>https://jrd.pub/170305-plans/</link>
      <pubDate>Sun, 05 Mar 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170305-plans/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;h3 id=&#34;maths&#34;&gt;Maths&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;《实变函数与泛函分析基础》&lt;/li&gt;&#xA;&lt;li&gt;《数学物理方程》&lt;/li&gt;&#xA;&lt;li&gt;《概率论与数理统计》&lt;/li&gt;&#xA;&lt;li&gt;《复变函数与积分变换》&lt;/li&gt;&#xA;&lt;li&gt;《数学模型》/姜启源&lt;/li&gt;&#xA;&lt;li&gt;《陶哲轩实分析》&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;skills&#34;&gt;Skills&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Courses:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Machine Learning - Andrew Ng&lt;/li&gt;&#xA;&lt;li&gt;Stanford CS229 - Andrew Ng(选)&lt;/li&gt;&#xA;&lt;li&gt;机器学习基石、机器学习技法 - 台湾大学&lt;/li&gt;&#xA;&lt;li&gt;……&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Py:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;scikit-learn&lt;/li&gt;&#xA;&lt;li&gt;Numpy&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;SQL advanced&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;Books:&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Introduction to Data Mining&lt;/li&gt;&#xA;&lt;li&gt;Data Structure &amp;amp; Algorithm analysis in C&lt;/li&gt;&#xA;&lt;li&gt;PRML(选)&lt;/li&gt;&#xA;&lt;li&gt;集体智慧编程&lt;/li&gt;&#xA;&lt;li&gt;利用python进行数据分析&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Kaggle startup&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h3 id=&#34;others&#34;&gt;Others&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Cook more&lt;/li&gt;&#xA;&lt;li&gt;Read more&lt;/li&gt;&#xA;&lt;li&gt;Play puzzles&lt;/li&gt;&#xA;&lt;li&gt;&amp;hellip;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>新学期来了，也写点啥吧</title>
      <link>https://jrd.pub/170219_plans/</link>
      <pubDate>Sun, 19 Feb 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170219_plans/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;不知不觉寒假已经过完了，上学期说实话过得很糟糕，导致最后成绩也很糟糕。假期开头的时候参加了美赛，然后回老家大年初一就病倒了，在床上躺了几天，病好了之后还是看了一点Andrew Ng的课，后面也捡起《数据结构与算法分析——C语言描述》看了一点（中间的许多时间都被补《权力的游戏》占掉了，没有办法，实在是太好看了……）。新学期开始了，总觉得还是来应该来写点什么，列个简短的计划啥的骗骗自己也好。嗯。&lt;/p&gt;&#xA;&lt;p&gt;  这学期，父母也都因为种种原因不能在身边了，算是真的开始独居了。独居的忧愁参半：更自由了，也可以更多地邀请朋友来家玩了，但对自律的要求也更高了；是个提升厨艺的好机会，还可以有更多机会逛菜市场，但总是不愿洗碗……总之，这应该还算是个不错的机会，能够让我学会更独立地生活。&lt;/p&gt;&#xA;&lt;p&gt;  技术方面，上学期过得实在是堕落，进步得实在太少了…Andrew Ng的课拖了那么久也没上完，这学期还是把它结了吧；数据结构和算法先把那本书啃完，一定要动手亲自实现，然后适当做做题什么的练练手；Python的经典教材有机会也翻翻，爬虫也可以往深了玩一玩；机器学习和爬虫的笔记有时间的话也整理几篇markdown发出来吧。数据挖掘方向的学习路线，参考知乎和各种文章，找出一条适合自己的路。&lt;/p&gt;&#xA;&lt;p&gt;  另外作为数学本科生，感觉现在自己推导证明的能力百孔千疮，这学期打算抽时间好好补补，读读《陶哲轩实分析》，另外努力做到不翘课，好好学习。&lt;/p&gt;&#xA;&lt;p&gt;  生活方面的话，上学期后半截几乎就没怎么动，这学期要多运动，减减重；然后趁着独居的机会，争取学会多做几道菜，能有几道拿手菜。&lt;/p&gt;&#xA;&lt;p&gt;  先写这些，后面有更进一步的计划再来写。&lt;/p&gt;&#xA;&lt;p&gt;  Go.&lt;/p&gt;</description>
    </item>
    <item>
      <title>我的2016</title>
      <link>https://jrd.pub/170101_my2016/</link>
      <pubDate>Sun, 01 Jan 2017 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/170101_my2016/</guid>
      <summary>&lt;pre&gt;&lt;code&gt;  2016, 结束了。  &#xA;  在此谨记我在2016的所得。  &#xA;&lt;/code&gt;&lt;/pre&gt;</summary>
      <description>&lt;pre&gt;&lt;code&gt;  2016, 结束了。  &#xA;  在此谨记我在2016的所得。  &#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;h5 id=&#34;emspemsp技术上&#34;&gt;  技术上，&lt;/h5&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;阅读了部分《C Primer Plus》和《C Programming Language》，掌握了C的基本语法；&lt;/li&gt;&#xA;&lt;li&gt;主要通过&lt;a href=&#34;http://www.liaoxuefeng.com/&#34;&gt;廖雪峰的python教程&lt;/a&gt;和Vamei的&lt;a href=&#34;http://www.cnblogs.com/vamei/archive/2012/09/13/2682778.html&#34;&gt;Python快速教程&lt;/a&gt;（读着真痛快啊），也熟悉了Python的基本和部分高级的用法；&lt;/li&gt;&#xA;&lt;li&gt;在掌握以上两门语言的基本用法之后，去本校的OJ平台上，刷了113道题，虽然有很多是水题，但也算是帮助自己熟悉了两种语言；&lt;/li&gt;&#xA;&lt;li&gt;开始用python学着写爬虫，顺便掌握了正则表达式，写了人生中第一个爬虫；&lt;/li&gt;&#xA;&lt;li&gt;《数据结构与算法分析——C语言描述》看到链表的部分，结果后面一直搁着再没动过；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用Github + Hexo 搭了这个博客， 把自己学到的东西和规划整理写成Markdown发上来；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;做了几次数学建模，学了点够建模用的MATLAB，也玩过几次Maple，为了来年一月份的美赛，还研究和学习了一发LaTeX；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;学了一些运维相关的知识（计算机网络，系统，Linux,网络设计等），已经能够自己独立地搭一个服务器，配置一个xAMP环境（ASP和jsp之类的当然也搭过），能写一点HTML/CSS和php，帮着社团上线了纳新用的网站；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;上了Andrew Ng在Coursera上的&lt;em&gt;Machine Learning&lt;/em&gt;，用到了已经学过的MATLAB和高代的知识，但进度一拖再拖，小半年才上到第五周；&lt;/li&gt;&#xA;&lt;li&gt;从网课和周志华教授的《机器学习》学到了关于回归模型（Linear Regression 和 Logistic Regression）以及神经网络模型（BP）的一些基本知识（不得不说，周志华教授的书写得真的好）；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;已经能够熟练拆自己的电脑，对于要拆陌生的电脑这种事情也不再害怕了（但遇到类似TP这种麻烦的机子还是不可避免地要崩掉几个卡扣），修电脑的本事也不断提高（已经开始想以后要不要就开家小店修修电脑过活算了）；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h5 id=&#34;emspemsp生活学习上&#34;&gt;  生活、学习上，&lt;/h5&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;清空了微博，成功戒掉了用微博的恶习，变成只是偶尔看看；&lt;/li&gt;&#xA;&lt;li&gt;几乎是裸考的四级出乎意料地考了581，免修了一学期的英语课，还顺便收获了一个4.33；&lt;/li&gt;&#xA;&lt;li&gt;入了垂涎已久的Surface，虽然只是二手低配的Surface 3， 但毫无疑问这是我2016一整年最值得的一次消费；&lt;/li&gt;&#xA;&lt;li&gt;平时上学的时候也不太玩游戏，于是就花了非常多的时间在看剧上，看过/追过/补过的番/剧包括但不限于：《Mr.Robot》《Legal High》《Scorpin》《Elementary》《毛骗》《The Night Of》《S.H.I.E.L.D.》《The Flash》《The Big Bang Theory》《Silcon Valley》《West World》《Game of Thrones》《Black Mirror》《Legends of Tomorrow》《Friends》《逃げるは恥だが役に立つ》《Steins;Gate》&amp;hellip;&amp;hellip;&lt;/li&gt;&#xA;&lt;li&gt;完全掉进了小众音乐（伪）的坑，开始越来越喜欢听赵雷、花粥、草东没有派对、燕池、好妹妹乐队和许许多多以前从来没有听过的歌手和组合的音乐；&lt;/li&gt;&#xA;&lt;li&gt;在YouTube上听穿了近些年岳云鹏和郭德纲（以及德云社）的几乎所有相声作品；&lt;/li&gt;&#xA;&lt;li&gt;用将近三个月的时间，顺利地拿到了C1驾照；&lt;/li&gt;&#xA;&lt;li&gt;开始一个人下馆子，一个人去电影院，一个人去看话剧；&lt;/li&gt;&#xA;&lt;li&gt;本来能有机会去Kcon黑客大会当志愿者，后由于各种原因没去，在秋天的时候去北航参加了CosCon，见识了一些新的东西，听到了一些不错的观点；&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/coscon.jpg&#34; alt=&#34;&#34;&gt;&lt;/li&gt;&#xA;&lt;li&gt;作为NBA球迷：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;更多地观看赛事直播；&lt;br&gt;&#xA;开始翻看以前的录像，截录像中自己喜欢的片段并整理；&lt;br&gt;&#xA;开始喜欢看球评和战术分析相关的文章；&lt;br&gt;&#xA;开始欣赏以前注意不到的比赛细节；&lt;br&gt;&#xA;主动去了解阵地战术和跑位，收集各种采访视频和球员集锦；&lt;br&gt;&#xA;开始对高阶数据感兴趣；&lt;br&gt;&#xA;开始学会拒绝印象流和无脑吹或喷；&lt;br&gt;&#xA;开始关注更多球员的表现；&lt;br&gt;&#xA;另外，我有幸目睹了伟大的2015-2016赛季（60分谢幕战，402记3分，73胜，西决1-3逆转，总决赛历史上最伟大的以下克上，G7君临的勒布朗……）以及数位传奇巨星的退役；&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;人生第一次上场打了5v5全场的比赛，球衣号码选的是我最喜欢的21号；&lt;br&gt;&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/collegegame.jpg&#34; alt=&#34;&#34;&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;  本来其实不那么想写这篇总结，因为我的2016和某位学长的同时期（&lt;a href=&#34;http://aljun.me/post/15&#34;&gt;我与2015的故事&lt;/a&gt;）相比，真的显得弱了很多，完全不值得一写，但考虑再三，觉得其实没有必要和任何人比较，只要和过去的自己比有进步了就可以了，所以还是来写了总结，就当是吹一波自己（其实也没啥好吹的）；&lt;br&gt;&#xA;  2016里，一个重要的变化是我探索世界的手段更加丰富了，我可以看得更远，知道得更多了；&lt;br&gt;&#xA;  2016，我知道了一些事情，想清楚了一些事情，也明白和更深刻地理解了一些事情；在旧的一年里，我割舍了一些东西，尝试了一些新的东西，获得了很多以前从未有过的人生体验；&lt;br&gt;&#xA;  我在2016所获得的成长，不如想象中的迅猛，但在近些年里算是不错的了，也还算是可以吧。&lt;br&gt;&#xA;  而且真心的要感谢关心过我的家人和朋友们，谢谢你们。&lt;br&gt;&#xA;&lt;br/&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;“Wer viel einst zu verkünden hat, schweigt viel in sich hinein. Wer einst den Blitz zu zünden hat, muß lange Wolke sein.”&#xA;&lt;strong&gt;&amp;ldquo;谁终将声震人间，必长久深自缄默；谁终将点燃闪电，必长久如云漂泊。&amp;rdquo;&lt;/strong&gt;    &amp;mdash;-Nietzsche&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;emspemsp2017加油干吧&#34;&gt;  &lt;strong&gt;2017，加油干吧。&lt;/strong&gt;&lt;/h4&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/WM2.png&#34; alt=&#34;&#34;&gt;&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/WM1.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Machine Learning Notes 05</title>
      <link>https://jrd.pub/161202_ml_notes5/</link>
      <pubDate>Fri, 02 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/161202_ml_notes5/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;overfitting&#34;&gt;Overfitting&lt;/h2&gt;&#xA;&lt;p&gt;Overfitting would cause the modle to perform poorly, like this:&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/reg_exmp1.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/reg_exmp2.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;  As above, plotting the hypothesis could be one way to try to decide what degree polynomial to use, but that doesn&amp;rsquo;t always work. Sometims we have too many features which cause that it&amp;rsquo;s difficult to visulize. And if we have a lot of features and very little training data, then overfitting can become a problem.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;two-options-to-solve&#34;&gt;Two options to solve&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;1.Reduce the number of features&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Manually select which features to keep or throw out;&lt;br&gt;&#xA;Model selection algorithm (help ue to decide which features to keep or throw out automatically);&lt;br&gt;&#xA;Disadvantages: Reduce some information about the problem.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;2.Regularization&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Keep all the features, but reduce magnitude/values of parameters \(\theta_{j}\).&#xA;Works well when we have a lot of features, each of which contributes a bit to predicting \(y\).&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;So we can see regularization is a better choice mostly.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;see-the-cost-functinon&#34;&gt;See the cost functinon&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;First, consider this. If our hypothesis is like this:&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;\(\theta_{0} + \theta_{1}x + \theta_{2}x^{2} + \theta_{3}x^3 + \theta_{4}x^4\)&lt;/p&gt;&#xA;&lt;p&gt;and if we penalize and make \(\theta_{3}\) and \(\theta_{4}\) really small, it means that \(\theta_{3}\approx0,\theta_{4}\approx0\), that is like as if we &amp;rsquo;re getting rid of these two terms, then we would find that&#xA;\(\theta_{0} + \theta_{1}x + \theta_{2}x^{2} + \theta_{3}x^3 + \theta_{4}x^4\approx\theta_{0} + \theta_{1}x + \theta_{2}x^{2} \)&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;regularization&#34;&gt;Regularization&lt;/h2&gt;&#xA;&lt;p&gt;“…having &lt;strong&gt;smaller values of the parameters&lt;/strong&gt; corresponds to usually &lt;strong&gt;smoother functions as well for the simpler&lt;/strong&gt;. And which are therefore, also, &lt;strong&gt;less prone to overfitting&lt;/strong&gt;. ”&#xA;What we should do is to modify the cost function to shrink all of the parameters like this:&#xA;\(J(\theta)=\frac{1}{2m}\sum_{i=1}^{n}(h_{\theta}(x^{(i)})-y^{(i)})^{2} + {\color{Blue} {\lambda\sum_{i=1}^{m}\theta_{j}^{2}}}\)&lt;/p&gt;&#xA;&lt;p&gt;And the blue terms is called &lt;strong&gt;regularization terms&lt;/strong&gt;, \(\lambda\) is called &lt;strong&gt;regularization parameters&lt;/strong&gt; which is used to trade off between two different goals:&lt;/p&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;\(\sum(h_{\theta}(x^{(i)})-y^{(i)})^{2}\) fit well&lt;/li&gt;&#xA;&lt;li&gt;\(\sum{\theta_{j}^{2}}\) keep the parameters small&lt;/li&gt;&#xA;&lt;/ol&gt;&#xA;&lt;p&gt;By the way, we don&amp;rsquo;t penalize \(\theta_{0}\) by convention.&#xA;Besides, about the regularization parameters \(\lambda\), if \(\lambda\) is too large, it would cause underfitting, and if \(\lambda\) is too small, it may cause the useless regularization.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;regularized-linear-regression&#34;&gt;Regularized linear regression&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Gradient descent:&#xA;Old:&lt;br&gt;&#xA;   Repeat{&lt;br&gt;&#xA;      \(\theta_{j}:=\theta_{j}-\alpha\frac{1}{m}\sum_{i=1}^{n}(h_{\theta}(x^{(i)})-y^{(i)})x_{j}^{(i)}\:(j=0,1,2,3,\cdots,n)\).&lt;br&gt;&#xA;   }&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;font color=blue&gt;New:&lt;/font&gt;&lt;br&gt;&#xA;   &lt;font color=blue&gt;Repeat{&lt;/font&gt;&lt;br&gt;&#xA;      \({\color{Blue} {\theta_{0}:=\theta_{0}-\alpha\frac{1}{m}\sum_{i=1}^{n}(h_{\theta}(x^{(i)})-y^{(i)})x_{0}^{(i)}}}\)&lt;br&gt;&#xA;      \({\color{Blue} {\theta_{j}:=\theta_{j}-\alpha\frac{1}{m}\sum_{i=1}^{n}(h_{\theta}(x^{(i)})-y^{(i)})x_{j}^{(i)}:(j=1,2,\cdots,n)}}{\color{Red} {+\frac{\lambda}{m}\theta_{j}}}\)&lt;br&gt;&#xA;   &lt;font color=blue&gt;}&lt;/font&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;regularization-logistic-regression&#34;&gt;Regularization logistic regression&lt;/h2&gt;&#xA;&lt;p&gt;   Cost function \(J(\theta)=-ylog(h_{\theta}(x))-(1-y)log(1-h_{\theta}(x)){\color{Blue} {+\frac{\lambda}{2m}\sum_{j=1}^{n}\theta_{j}^{2}}}\)&lt;/p&gt;&#xA;&lt;p&gt;   &lt;font color=blue&gt;Repeat{&lt;/font&gt;&lt;br&gt;&#xA;      \({\color{Blue} {\theta_{0}:=\theta_{0}-\alpha\frac{1}{m}\sum_{i=1}^{n}(h_{\theta}(x^{(i)})-y^{(i)})x_{0}^{(i)}}}\)&lt;br&gt;&#xA;      \(\theta_{j}:=\theta_{j}-\alpha\frac{1}{m}\sum_{i=1}^{n}(h_{\theta}(x^{(i)})-y^{(i)})x_{j}^{(i)}:(j=1,2,\cdots,n){\color{Red} {+\frac{\lambda}{m}\theta_{j}}}\)&lt;br&gt;&#xA;   &lt;font color=blue&gt;}&lt;/font&gt;&lt;br&gt;&#xA;Remember that \(h_{\theta}(x)=\frac{1}{1+e^{-\theta^{T}x}}\)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python Crawler Note 2</title>
      <link>https://jrd.pub/161202_pycrawler2/</link>
      <pubDate>Fri, 02 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/161202_pycrawler2/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;Besides what we have seen in &lt;a href=&#34;https://jrd.pub/161201_pycrawler1/&#34;&gt;Note 1&lt;/a&gt;, we can add some details in our codes:&#xA;Sometimes  we need to pretend as the browser to obtain the content of the page, we can add headers:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; urllib2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;url &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;http://drapor.me&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;headers &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; { &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;User-Agent&amp;#39;&lt;/span&gt; : &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Mozilla/4.0 (compatible; MSIE 5.5; Windows NT)&amp;#39;&lt;/span&gt;} &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;request &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Request(url, headers)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;response &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;urlopen(request)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt; response&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;p&gt;More about headers, you can check &lt;a href=&#34;https://jrd.pub/160427_http/&#34;&gt;this article&lt;/a&gt;.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;And if you need to post some data, like your username or password to the sites, try this:&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; urllib2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;values &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;drapor&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;password&amp;#34;&lt;/span&gt;:&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;*****&amp;#34;&lt;/span&gt;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; urllib&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;urlencode(values) &#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;url &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;http://www.heibanke.com/lesson/crawler_ex01/&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#6272a4&#34;&gt;#This is a crawler game I found before which is quite interesting.&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;request &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Request(url,data)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;response &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;urlopen(request)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt; response&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;If you find there&amp;rsquo;s something wrong with your code, you can try this:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; urllib2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;requset &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Request(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;http://www.xxxxx.com&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;try&lt;/span&gt;:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;urlopen(request)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;except&lt;/span&gt; urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;URLError, e:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt; e&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;reason&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;And you will get the info of the error.&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;And if you need to use cookies, try this:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; urllib2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; cookielib&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cookie &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; cookielib&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;CookieJar() &lt;span style=&#34;color:#6272a4&#34;&gt;#Declar a CookieJar object to save cookie&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;handler &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;HTTPCookieProcessor(cookie) &lt;span style=&#34;color:#6272a4&#34;&gt;#use HTTPCookieProcessor object in urllib2 to create cookie processor&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;opener &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;build_opener(handler) &lt;span style=&#34;color:#6272a4&#34;&gt;#build opener by Handler&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;response &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; opener&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;open(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;http://drapor.me&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#6272a4&#34;&gt;# this opener.open() is the same as urllib2.urlopen()&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; item &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; cookie:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Name = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;item&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;name&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;Value = &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;item&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;value&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Python Crawler Note 1</title>
      <link>https://jrd.pub/161201_pycrawler1/</link>
      <pubDate>Thu, 01 Dec 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/161201_pycrawler1/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;First, let&amp;rsquo;s start with a easy one:&lt;/p&gt;&#xA;&lt;p&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; urllib2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;response &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;urlopen(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;http://drapor.me&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt; response&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;The output should be like:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;&lt;span style=&#34;color:#ff79c6&#34;&gt;html&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&amp;lt;&lt;span style=&#34;color:#ff79c6&#34;&gt;head&lt;/span&gt;&amp;gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;......&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;lt;/&lt;span style=&#34;color:#ff79c6&#34;&gt;html&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;Also, codes below do the same thing,&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; urllib2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;request&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;Request(url)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;response &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;urlopen(request)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;print&lt;/span&gt; response&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read()&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;However, there are too many things in the output result, we want to filter out the content we want (for instance, every article title on the page), so we can add &lt;strong&gt;Regex&lt;/strong&gt;(&lt;a href=&#34;http://deerchao.net/tutorials/regex/regex.htm#mission&#34;&gt;Tutorial I recommand&lt;/a&gt;) here to help us:&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; urllib2&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;import&lt;/span&gt; re&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;response &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; urllib2&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;urlopen(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;http://drapor.me&amp;#39;&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;content &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; response&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;read()              &lt;span style=&#34;color:#6272a4&#34;&gt;#First we store the content of whole webpage&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;content &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; content&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;replace(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&lt;/span&gt;,&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)     &lt;span style=&#34;color:#6272a4&#34;&gt;#I use this to delete all the newline character to avoid some troubles&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pattern &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f1fa8c&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&amp;lt;a class=&amp;#34;article-title&amp;#34; href=&amp;#34;.*?&amp;#34;&amp;gt;.*?&amp;lt;/a&amp;gt;&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#6272a4&#34;&gt;#Then your regex here, remember the &amp;#39;r&amp;#39;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; re&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;findall(pattern, content) &lt;span style=&#34;color:#6272a4&#34;&gt;#Find all the result&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ff79c6&#34;&gt;with&lt;/span&gt; &lt;span style=&#34;color:#8be9fd;font-style:italic&#34;&gt;open&lt;/span&gt;(&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;index.html&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#34;w&amp;#34;&lt;/span&gt;) &lt;span style=&#34;color:#ff79c6&#34;&gt;as&lt;/span&gt; f:    &lt;span style=&#34;color:#6272a4&#34;&gt;#Write the result in a new HTML file&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt; items &lt;span style=&#34;color:#ff79c6&#34;&gt;in&lt;/span&gt; result:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        f&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;write(items&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#f1fa8c&#34;&gt;&amp;#39;&amp;lt;br&amp;gt;&amp;#39;&lt;/span&gt;)&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&#xA;&lt;strong&gt;Tip: Don&amp;rsquo;t use something like &amp;lsquo;+&amp;rsquo; or &amp;lsquo;*&amp;rsquo; in your zero-width assertion or write your regex like &amp;lsquo;(?&amp;lt;![a-z]+)/d+&amp;rsquo;, or you will get:&lt;/strong&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;error: look&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;behind requires fixed&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;width pattern&lt;span style=&#34;color:#ff79c6&#34;&gt;.&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/p&gt;&#xA;&lt;p&gt;And open the new HTML file we create with browser, we got this:&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/pycrawler1_out.PNG&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Wow! How fantastic!!!&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;And here&amp;rsquo;s the first attempt of mine (also my first crawler):&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;URL: &lt;a href=&#34;http://stat.drapor.me/&#34;&gt;http://stat.drapor.me/&lt;/a&gt;&#xA;Code: &lt;a href=&#34;https://github.com/GabrielDrapor/FiveManStat-Of-NBAleague&#34;&gt;https://github.com/GabrielDrapor/FiveManStat-Of-NBAleague&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>Machine Learning Notes 04</title>
      <link>https://jrd.pub/161121_ml_notes4/</link>
      <pubDate>Mon, 21 Nov 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/161121_ml_notes4/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;classification&#34;&gt;Classification&lt;/h2&gt;&#xA;&lt;p&gt;  For the binary classification, \(y\in {0,1 }\)(Also maybe, \(y\in { 0,1,2,3,\cdots}\), that&amp;rsquo;s called a &lt;strong&gt;multiclass classification problem&lt;/strong&gt;, we will discuss it later.).&lt;br&gt;&#xA;  So, we use a model called &lt;strong&gt;Logisitic Regression&lt;/strong&gt;, and we can see the hypothesis \(h_{\theta}(x)\) should value in the range of 0 and 1. This is to say, \(0\leq h_{\theta}(x)\leq 1\).&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;hypothesis-representation&#34;&gt;Hypothesis Representation&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Logistic Regression:&lt;/strong&gt;&#xA;    \(h_{\theta}(x)=g(\theta^{T}x)\), \(g(z)=\frac{1}{1+e^{-z}}\)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Interpretation of Hypothesis Output&lt;/strong&gt;.&#xA;The value of \(h_{\theta}(x)\) equals to the estimated probability that y=1 (on input x, parameterized by \(\theta\) ). This is to say,&#xA;\(h_{\theta}(x)=P(y=2\mid x ; \theta)\)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Decision Boundary&lt;/strong&gt;&lt;br&gt;&#xA;The decision boundaries are like this:&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/decision_boundary.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;  &lt;strong&gt;Emphasis: Decision boundary is the property of hypothesis function, but not the property of training set and its parameters.&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;logistic-regression---how-to-fit-the-parameters-of-theta&#34;&gt;&lt;strong&gt;Logistic Regression&lt;/strong&gt;&amp;mdash;How to fit the parameters of theta&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cost Function of Logistic Regression:&lt;/strong&gt;&lt;br&gt;&#xA;\(Cost(h_{\theta}, y)=-ylog(h_{\theta}(x))-(1-y)log(1-h_{\theta}(x))\)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Gradient Descent:&lt;/strong&gt;&lt;br&gt;&#xA;To minimize \(J_{\theta}\)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;   Repeat{&lt;br&gt;&#xA;      \(\theta_{j}:=\theta_{j}-\alpha\frac{1}{m}\sum_{i=1}^{n}(h_{\theta}(x^{(i)})-y^{(i)})x^{(i)}\)&lt;br&gt;&#xA;   }&lt;/p&gt;&#xA;&lt;p&gt;  &lt;strong&gt;And we can see that this algortithm looks identical to linear regression!&lt;br&gt;&#xA;  But actually, the hypothesis of them are different.&lt;/strong&gt;&lt;br&gt;&#xA; Linear Regression: \(h_{\theta}(x)=\theta^{T}x\)&lt;br&gt;&#xA; Logistic Regression: \(h_{\theta}(x)=\frac{1}{1+e^{-\theta^{T}x}}\)&lt;/p&gt;&#xA;&lt;p&gt;Besides,&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&amp;ldquo;&amp;hellip;use a vector rise implementation, so that a vector rise implementation can update all of these until parameters all in one fell swoop.&amp;rdquo;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;advanced-optimization&#34;&gt;Advanced Optimization&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Gradient Descent&lt;/li&gt;&#xA;&lt;li&gt;Conjngate Gradient&lt;/li&gt;&#xA;&lt;li&gt;BFGS&lt;/li&gt;&#xA;&lt;li&gt;L-BFGS&lt;/li&gt;&#xA;&lt;li&gt;……&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Adcantages:&lt;/strong&gt;&#xA;No need to manually pick \(\alpha\) ;&#xA;Often faster than gradient descent;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Disadvantages:&lt;/strong&gt;&#xA;More complex;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;multi-class-classification-one-vs-all&#34;&gt;Multi-class classification: One-vs-all&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;For example, to slove the three-class problem, we can &lt;em&gt;&amp;ldquo;turn this into three seperate two-class classification problems.&amp;rdquo;&lt;/em&gt;&lt;/li&gt;&#xA;&lt;li&gt;On a new input \(x\), to make a prediction, pick the class i that maximizes.&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>Machine Learning Notes 03</title>
      <link>https://jrd.pub/161018_ml_notes3/</link>
      <pubDate>Tue, 18 Oct 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/161018_ml_notes3/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;multivariate-linear-regression&#34;&gt;Multivariate Linear Regression&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Hypothesis:&lt;/strong&gt;&#xA;\( h(\theta) = \sum_{i=0}^{n}\theta_{i}X_{i} \)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;\( X=\begin{bmatrix}x_{0}\ x_{1}\ .\ .\ .\ x_{n}\end{bmatrix}\in \mathbb{R}^{n+1} ;, \theta=\begin{bmatrix}\theta_{0}\ \theta_{1}\ .\ .\ .\ \theta_{n}\end{bmatrix}\in \mathbb{R}^{n+1}\)&lt;/p&gt;&#xA;&lt;p&gt;  &lt;strong&gt;Also&lt;/strong&gt;, \(h(\theta) = \theta ^{ T} X\)&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;gradient-descent&#34;&gt;&lt;strong&gt;Gradient descent&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Algorithm:&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;   Repeat{&lt;br&gt;&#xA;      \(\theta_{j}:=\theta_{j}-\alpha\frac{1}{m}\sum_{i=1}^{n}(h_{\theta}(x^{(i)})-y^{(i)})x^{(i)}\)&lt;br&gt;&#xA;   }&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;feature-scaling&#34;&gt;Feature Scaling&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Idea&lt;/strong&gt;: Make sure fretures are on a similar scale.&lt;/li&gt;&#xA;&lt;li&gt;&lt;strong&gt;Mean normalization&lt;/strong&gt;&lt;br&gt;&#xA;  Replace \(x_{i}\) with \(x_{i}-\mu_{i}\) to make features have approximately zero mean(Do not apply to \(x_{0}\), Which we suppose equals 1)&lt;br&gt;&#xA;\(x_{i}:=\frac{x_{i}-\mu_{i}}{s_{i}}(i\neq0)\);&lt;br&gt;&#xA;(\(\mu_{i}\) :Average value of \(x_{i}\) in training set, \(s_{i}\) :range(=max-min)(or standard deviation))&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;learning-rate&#34;&gt;Learning Rate&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;If \(\alpha\) is too small: slow convergence;&lt;/li&gt;&#xA;&lt;li&gt;If \(\alpha\) is too large: \(J(\theta)\) may not decrese on every iteration, may not converge(slow converge also possible);&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;normal-equation----solve-for-theta-analytically&#34;&gt;Normal Equation &amp;mdash;Solve for \(\theta\) analytically&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;For the input X, add a column on the left in X filled with 1, make up a new X;&lt;/li&gt;&#xA;&lt;li&gt;then,&#xA;   \(\theta = (X^{ T}X)^{-1}X^{ T}y\)&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;strong&gt;The difference between Gradient Descent and Normal Equation:&lt;/strong&gt;&#xA;&lt;img src=&#34;https://jrd.pub/article_imgs/gd@nrml.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>Machine Learning Notes 02</title>
      <link>https://jrd.pub/161011_ml_notes2/</link>
      <pubDate>Tue, 11 Oct 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/161011_ml_notes2/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;linear-regression-with-one-variable&#34;&gt;Linear Regression with one variable&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Hypothesis:&lt;/strong&gt; \(h(\theta) = {\theta}_{0} + {\theta}_{1} x_{1}\)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;&lt;strong&gt;Cost function:&lt;/strong&gt;&#xA;\(J(\theta_{0},\theta_{1})=\frac{1}{2m}\sum_{i=1}^{n}(h_{\theta}(x^{(i)})-y^{(i)})^2\)&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;gradient-descent&#34;&gt;&lt;strong&gt;Gradient descent&lt;/strong&gt;&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;Target:&lt;/strong&gt; minimize \(J(\theta_{0},\theta_{1})\) or \(J(\theta_{0},\theta_{1},\cdots,\theta_{n})\)&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&lt;strong&gt;Gradient algorithm:&lt;/strong&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;   Repeat until convergence{&lt;br&gt;&#xA;      \( \theta_{j}:=\theta_{j}-\alpha\frac{\partial }{\partial j}J(\theta_{0},\theta_{1})\;(for \: j=0\:and\:j=1)\)&lt;br&gt;&#xA;   }&lt;br&gt;&#xA;    ( \(:=\) -   &lt;em&gt;Assignment&lt;/em&gt;     \(\alpha\) - &lt;em&gt;Learning rate&lt;/em&gt; )&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;Warning:&lt;/strong&gt; \(\theta_{0}\) and \(\theta_{1}\)should be updated &lt;strong&gt;Simultaneously&lt;/strong&gt; !!!&lt;/p&gt;&#xA;&lt;p&gt;  Especially, when gradient descent for linear regression,&lt;/p&gt;&#xA;&lt;p&gt;     \(\frac{\partial }{\partial j}J(\theta_{0},\theta_{1})=\sum_{i=1}^{n}(h_{\theta}(x^{(i)})-y^{(i)})x^{(i)}\)  &lt;br&gt;&#xA;when \(i=0\), we suppose \(x^{(0)}=1\)&lt;/p&gt;</description>
    </item>
    <item>
      <title>Machine Learning Notes 01</title>
      <link>https://jrd.pub/161010_ml_notes1/</link>
      <pubDate>Mon, 10 Oct 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/161010_ml_notes1/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;h2 id=&#34;mordern-defination&#34;&gt;Mordern Defination:&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;  “A computer program is said to &lt;strong&gt;learn&lt;/strong&gt; from experience E with respect to some task T and some performance measure P if its performance on T, as measured by P, improves with experience E.”&lt;/p&gt;&#xA;&lt;p&gt;​&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;——Tom Mitchell(1998)&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;types-of-problems-and-tasks&#34;&gt;Types of problems and tasks:&lt;/h2&gt;&#xA;&lt;p&gt;“&lt;strong&gt;Supervised learning&lt;/strong&gt; is the machine learning task of inferring a function from &lt;strong&gt;labeled&lt;/strong&gt; training data.The training data consist of a set of training examples.”&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Regression&lt;/li&gt;&#xA;&lt;li&gt;Classification&#xA;……&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;br&gt;&#xA;&lt;p&gt;“&lt;strong&gt;Unsupervised learning&lt;/strong&gt; is the machine learning task of inferring a function to describe hidden &lt;strong&gt;structure&lt;/strong&gt; from unlabeled data.&amp;quot;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Clustering&lt;/li&gt;&#xA;&lt;li&gt;&amp;hellip;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;Besides, there are also &lt;strong&gt;Semi-supervised Learnings&lt;/strong&gt; and &lt;strong&gt;Reinforcement learning&lt;/strong&gt;.&lt;/p&gt;</description>
    </item>
    <item>
      <title>一点规划</title>
      <link>https://jrd.pub/160920_plans/</link>
      <pubDate>Tue, 20 Sep 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160920_plans/</guid>
      <summary></summary>
      <description>&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/20160920%20Personal%20Plans.jpeg&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;“彼方始有荣光在。”&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>7.16-8.10</title>
      <link>https://jrd.pub/160810_re/</link>
      <pubDate>Wed, 10 Aug 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160810_re/</guid>
      <summary>&lt;p&gt;这段日子参加了学校SNC组织的暑期学校，所得不少，主要包含以下：&lt;/p&gt;</summary>
      <description>&lt;p&gt;这段日子参加了学校SNC组织的暑期学校，所得不少，主要包含以下：&lt;/p&gt;&#xA;&lt;h2 id=&#34;第一阶段&#34;&gt;第一阶段：&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;运维方向的综述、计算机硬件组成、操作系统的安装（引导方式、分区表）；&lt;/li&gt;&#xA;&lt;li&gt;程序和系统的相关概念（进程、线程、内核空间等）；&lt;/li&gt;&#xA;&lt;li&gt;服务器的管理（储存管理、远程管理、安全管理）；&lt;/li&gt;&#xA;&lt;li&gt;Web服务器和FTP服务器的搭建（限制IP访问，权限配置）；&lt;/li&gt;&#xA;&lt;li&gt;Apache的配置（虚拟主机、目录权限、日志切割、防盗链、MIME、认证、HTTPS等）；&lt;/li&gt;&#xA;&lt;li&gt;MySQL基本操作（增删查改、库备份还原、账户管理等）；&lt;/li&gt;&#xA;&lt;li&gt;PHP基础语法；&lt;/li&gt;&#xA;&lt;li&gt;HTML+CSS+PHP实现动态留言板；&lt;/li&gt;&#xA;&lt;li&gt;Web安全（XSS、SQL注入）；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;第二阶段计算机网络&#34;&gt;第二阶段（计算机网络）：&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;物理层（信号在介质中的传输方式，网络的通信方式，常见的传输媒体，以及宽带接入技术）；&lt;/li&gt;&#xA;&lt;li&gt;数据链路层（三个问题、PPP协议、以太网帧的构成、交换机的工作特点WLAN）；&lt;/li&gt;&#xA;&lt;li&gt;网络层（IP协议、数据报文的传输、IP协议族中的ARP协议、ICMP协议、IGMP协议和ICMPv6协议，VPN和PPPoE原理）；&lt;/li&gt;&#xA;&lt;li&gt;Wireshark抓包、网线制作；&lt;/li&gt;&#xA;&lt;li&gt;传输层（TCP协议、UDP协议）；&lt;/li&gt;&#xA;&lt;li&gt;应用层（HTTP、HTTPS、FTP、TELNET、DHCP）；&lt;/li&gt;&#xA;&lt;li&gt;电子邮件发信原理（SMTP、POP3、IMAP）；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h2 id=&#34;第三阶段linux&#34;&gt;第三阶段（Linux）：&lt;/h2&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Linux基础操作（路径切换、权限设置）；&lt;/li&gt;&#xA;&lt;li&gt;Vim使用（模式切换，删除、替换、查找、复制粘贴等常用操作）；&lt;/li&gt;&#xA;&lt;li&gt;LAMP环境搭建；&lt;/li&gt;&#xA;&lt;li&gt;Linux储存管理（LVM）和防火墙管理（iptables）；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;网络设计相关&#34;&gt;网络设计相关：&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;组网硬件（交换机、路由器）；&lt;/li&gt;&#xA;&lt;li&gt;相关协议（STP、OSPF）；&lt;/li&gt;&#xA;&lt;li&gt;相关概念（VLAN、ACL、NAT策略）；&lt;/li&gt;&#xA;&lt;li&gt;用GNS3/Cisco Packet Tracer模拟搭建校园网络；&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;感谢SNC，感谢暑期学校。&lt;/p&gt;</description>
    </item>
    <item>
      <title>6.26-7.13</title>
      <link>https://jrd.pub/160713_re/</link>
      <pubDate>Wed, 13 Jul 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160713_re/</guid>
      <summary>&lt;p&gt;小学期结束了，也来写个总结吧。&lt;/p&gt;</summary>
      <description>&lt;p&gt;小学期结束了，也来写个总结吧。&lt;/p&gt;&#xA;&lt;h1 id=&#34;一本专业&#34;&gt;一、本专业&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;过去的三周是学校的小学期，我&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;学习了Matlab的基础语法。&lt;/li&gt;&#xA;&lt;li&gt;本以为是只有一次数学建模，没想到是两次。&lt;/li&gt;&#xA;&lt;li&gt;本以为不是很难，结果一做才知道翻文献的时候经常连别人的模型都看不懂。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;尽量抽点时间看看下学期的课，想把概率论提前学了。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;二职业&#34;&gt;二、职业&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;过去的三周我&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;本想把爬虫学完，结果由于数学建模占用了时间，也浪费了一些时间，导致只学习了基础的一部分内容，看完了正则表达式。&lt;/li&gt;&#xA;&lt;li&gt;开始在Coursera上看Andrew Ng的Machine Learning课程，恰好能用到刚刚学的Matlab。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;接下来&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;要参加SNC的暑期学校的培训，可能不能继续学习爬虫了，但是Coursera的课程可以抽空继续上。&lt;/li&gt;&#xA;&lt;li&gt;算法什么的等暑期学校结束之后再规划吧。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;得到的启示：在干自己不那么想干而又不是很容易做的事情的时候，整个人的效率低到了一个惊人的水平。。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;大概如此，想到再来补吧。&lt;/p&gt;</description>
    </item>
    <item>
      <title>5.17-6.24</title>
      <link>https://jrd.pub/160624_re/</link>
      <pubDate>Fri, 24 Jun 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160624_re/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;h1 id=&#34;过去的一个多月里&#34;&gt;过去的一个多月里&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;借助 Hexo 和 Github Pages 搭了自己的博客，也就是现在这个 darpor.me&lt;/li&gt;&#xA;&lt;li&gt;进入六月本想着好好准备期末考试和四级，但是其实还是浪费了很多时间，导致最后一周爆了一周的肝，总归是把所有的课都过了。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;接下来的小学期&#34;&gt;接下来的小学期&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;学习MATLAB，完成一次建模。&lt;/li&gt;&#xA;&lt;li&gt;学习正则表达式；&lt;/li&gt;&#xA;&lt;li&gt;学习python爬虫；&lt;/li&gt;&#xA;&lt;li&gt;开始看Andrew Ng的&lt;em&gt;Machine Learning&lt;/em&gt;课程；&lt;/li&gt;&#xA;&lt;li&gt;继续看《数据结构与算法分析——C语言描述》，每一个知识点自己动手实现一遍；&lt;/li&gt;&#xA;&lt;li&gt;继续看Coursera上PKU的《计算机组成》的课程；&lt;/li&gt;&#xA;&lt;li&gt;挑选数据挖掘的课程，可以考虑开始看《数据挖掘导论》&lt;/li&gt;&#xA;&lt;li&gt;有空余时间的话可以读读《福尔摩斯探案集》&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>4.17-5.17</title>
      <link>https://jrd.pub/160517_re/</link>
      <pubDate>Tue, 17 May 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160517_re/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;h1 id=&#34;一本专业&#34;&gt;一、本专业&lt;/h1&gt;&#xA;&lt;h4 id=&#34;过去的这段时间里&#34;&gt;过去的这段时间里&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;期中考试高代70，数分没及格，数分上还要多下功夫。期末考试两门都不能挂&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;二编程&#34;&gt;二、编程&lt;/h1&gt;&#xA;&lt;h4 id=&#34;过去的这段时间里-1&#34;&gt;过去的这段时间里&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用C和Python两种编程语言，解决了学校OJ中34道问题（虽然有水题）&lt;/li&gt;&#xA;&lt;li&gt;捡起还没看完的《C Primer Plus》接着看，感觉还是很受益的。&lt;/li&gt;&#xA;&lt;li&gt;开始读《数据结构与算法分析——C语言描述》，学了基础的算法分析，学习了一点链表的内容，并做了相应的笔记。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;接下来&#34;&gt;接下来&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;到六月份前配合着MIT的算法导论课，继续自由学习数据结构和算法的内容&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;三网络&#34;&gt;三、网络&lt;/h1&gt;&#xA;&lt;h4 id=&#34;过去的这段时间里我&#34;&gt;过去的这段时间里我&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;学会了用IIS+MS SQL Server架设一个叫做Discuz！NT的ASP.NET网站&lt;/li&gt;&#xA;&lt;li&gt;学会了用Apache+PHP+MySQL架设了一个叫做WordPress的php网站&lt;/li&gt;&#xA;&lt;li&gt;学会了用Tomcat+JDK+MySQL架设了一个叫做Jeecms的Jsp网站&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;接下来-1&#34;&gt;接下来&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;学习远程配置vps（要学一点Linux），有选择性地学习一些网络知识（协议等）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;四其他&#34;&gt;四、其他&lt;/h1&gt;&#xA;&lt;h4 id=&#34;过去的这段时间我还&#34;&gt;过去的这段时间我还&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;能够独立地拆自己十分难拆的笔记本&lt;/li&gt;&#xA;&lt;li&gt;看完了《Mr.Robot》 —— 感觉挺有共鸣的&lt;/li&gt;&#xA;&lt;li&gt;看完了《Legal High》第一季 —— 对法律有了一点新的感想&lt;/li&gt;&#xA;&lt;li&gt;看完了两季《Silicon Valley》，对创业有了新的看法&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;五接下来的一点小计划&#34;&gt;五、接下来的一点小计划&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;发现算法和数据结构还是蛮有意思的，而且很有益处，尽力学&lt;/li&gt;&#xA;&lt;li&gt;读完《C Primer Plus》，查漏补缺（书中涉及数据结构的部分也许可以先不看）&lt;/li&gt;&#xA;&lt;li&gt;把Python基础语法的尾收完&lt;/li&gt;&#xA;&lt;li&gt;边做上面的事情看看有没有合适的OJ题能做，还是要多实践&lt;/li&gt;&#xA;&lt;li&gt;接下来可能有3-5天电脑送修，利用这段时间看看曼昆和费曼的书，总之看看书&lt;/li&gt;&#xA;&lt;li&gt;6月中旬考四级，上了500分大学就可以不用再上英语课啦&lt;/li&gt;&#xA;&lt;li&gt;期末考试要认真准备&lt;/li&gt;&#xA;&lt;li&gt;希望能搭个博客，现在还在犹豫是选Github Pages还是自己租vps搭个WordPress之类的&lt;/li&gt;&#xA;&lt;li&gt;了解一下数据挖掘的路是走怎么走的&lt;/li&gt;&#xA;&lt;li&gt;*学爬虫，扒下自己的全部微博，注销之。&lt;/li&gt;&#xA;&lt;li&gt;要是感觉学习太枯燥了可以学一点Kali Linux&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;&lt;strong&gt;总之，学习不止。&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>《数据结构与算法分析——C语言描述》第二章 算法分析</title>
      <link>https://jrd.pub/160513_dsa-ch2/</link>
      <pubDate>Sat, 14 May 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160513_dsa-ch2/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;2.4.3最大子序列和问题的解&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;最大的子序列和问题&lt;/strong&gt;：给定整数A1，A2，……，AN（可能有负数），求∑(k=i)^j A_k  的最大值（为方便起见，如果所有整数均为负数，则最大子序列和为0）&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;escape&gt;&lt;!-- more --&gt;&lt;/escape&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;• 算法3&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#6272a4&#34;&gt;//T(N)=O(N log N) &#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;MaxSubSum&lt;/span&gt;( &lt;span style=&#34;color:#ff79c6&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; A[], &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; Left,&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; Right )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; MaxLeftSum,MaxRightSum;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; MaxLeftBorderSum,MaxRightBorderSum;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; LeftBorderSum,RightBorderSum;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; Center,i;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;(Left&lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt;Right)   &lt;span style=&#34;color:#6272a4&#34;&gt;//Base Case,即&amp;#39;基准情形&amp;#39;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; (A[Left]&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; A[Left];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;Center &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; (Left &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; Right)&lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;MaxLeftSum&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;MaxSubSum&lt;/span&gt;(A,Left,Center);&lt;span style=&#34;color:#6272a4&#34;&gt;//左边中最大的子序列和&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#x9;&#x9;MaxRightSum&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#50fa7b&#34;&gt;MaxSubSum&lt;/span&gt;(A,Center&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;,Right);&lt;span style=&#34;color:#6272a4&#34;&gt;//右边中最大的子序列和&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#x9;&#x9;MaxLeftBorderSum &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;; LeftBorderSum &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt;(i&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;Center;i&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;=&lt;/span&gt;Left;i&lt;span style=&#34;color:#ff79c6&#34;&gt;--&lt;/span&gt;)&lt;span style=&#34;color:#6272a4&#34;&gt;//从中心开始向左找最大子序列和&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#x9;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;LeftBorderSum&lt;span style=&#34;color:#ff79c6&#34;&gt;+=&lt;/span&gt;A[i];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;(LeftBorderSum&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;MaxLeftBorderSum)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;MaxLeftBorderSum&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; LeftBorderSum;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;MaxRightBorderSum &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;; RightBorderSum &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt;(i&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;Center&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;;i&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;=&lt;/span&gt;Right;i&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;　&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;)&lt;span style=&#34;color:#6272a4&#34;&gt;//从中心开始向右找最大子序列和&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#x9;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;RightBorderSum&lt;span style=&#34;color:#ff79c6&#34;&gt;+=&lt;/span&gt;A[i];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;(RightBorderSum&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;MaxRightBorderSum)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;MaxRightBorderSum&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;RightBorderSum;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Max3&lt;/span&gt;(MaxLeftSum,MaxRightSum,MaxLeftBorderSum &lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt; MaxRightBorderSum);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;MaxSubsequenceSum&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; A[], &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; N)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;MaxSubSum&lt;/span&gt;(A , &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt; , N &lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Max3&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; a,&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; b,&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; c)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; (a&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;b)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; (a&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;c) &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; a;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; c;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt; (c&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;b) &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; c;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; b;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;​&lt;/p&gt;&#xA;&lt;p&gt;​&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;• 更简单有效的算法4&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;MaxSubsequenceSum&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; A[], &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; N)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; ThisSum,MaxSum,j;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;ThisSum&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;MaxSum&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;for&lt;/span&gt;(j&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;;j&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;N;j&lt;span style=&#34;color:#ff79c6&#34;&gt;++&lt;/span&gt;)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;ThisSum&lt;span style=&#34;color:#ff79c6&#34;&gt;+=&lt;/span&gt;A[j];&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;(ThisSum &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; MaxSum)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;MaxSum &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; ThisSum;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;(ThisSum &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;)  &lt;span style=&#34;color:#6272a4&#34;&gt;//这一步是关键，如果前j项和是负的，那就可以扔掉不要了&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#x9;&#x9;&#x9;&#x9;ThisSum&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; MaxSum;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;&#xA;&lt;p&gt;这种算法的附带优点是，只需要扫描一次数据，一旦A[i]被扫入并被处理，它就不再需要被记忆【5/13:数据赋值等操作少】。在任何时刻，算法都能对它已经读入的数据给出子序列问题的正确答案（其他算法不具有这个特性）【5/13:也就是说，假如你输入的是10个数据，在你输入到任何一个的时候，在这种情况下的解已经被算出来了】。具有这种特性的算法叫做&lt;em&gt;联机算法&lt;/em&gt;（online algorithm）。&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;​&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;2.4.4运行时间中的对数&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;除分治算法外，可将对数最常出现的规律概括为下列一般法则：如果一个算法用常数时间（O（1））将问题的大小削减为其一部分（通常是1/2），那么该算法就是O（log N）。另一方面，如果使用常数时间只是把问题减少一个常数（如将问题减少1），那么这种算法就是O（N）的。&#xA;【5/15:可以理解为就是一个循环中，如果这个算法本身能够自己削减循环次数的话，那么就会从O（N）降到O（log N）】&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;• 对分算法&lt;/strong&gt;&#xA;​&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#6272a4&#34;&gt;//T(N)=O（log N）&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;BinarySearch&lt;/span&gt;(&lt;span style=&#34;color:#ff79c6&#34;&gt;const&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; A[], &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; x,&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; n)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; Low,Mid,High;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;Low&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt;;High&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;n&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt;(Low &lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;=&lt;/span&gt; High)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;Mid &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; (Low&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;High) &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;   &#x9;       &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;(A[Mid]&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;lt;&lt;/span&gt;x)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&#x9;Low&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;Mid&lt;span style=&#34;color:#ff79c6&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt; &lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;(A[Mid]&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt; x)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;High&lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt;Mid&lt;span style=&#34;color:#ff79c6&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; Mid;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; NotFound;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;它提供了在O（log N）时间内的Find（查找）操作。访问次数少，而如果是顺序查找的话就会需要多很多的访问次数。&#xA;​&#xA;&lt;strong&gt;• 欧几里德算法&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Gcd&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; M,&lt;span style=&#34;color:#8be9fd&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; N)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; Rem;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;while&lt;/span&gt;( N&lt;span style=&#34;color:#ff79c6&#34;&gt;&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt; )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;Rem &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; M &lt;span style=&#34;color:#ff79c6&#34;&gt;%&lt;/span&gt; N;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;M &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; N;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;N &lt;span style=&#34;color:#ff79c6&#34;&gt;=&lt;/span&gt; Rem;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; M;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;定理2.1&lt;/strong&gt;：如果M &amp;gt; N , 则M mod N &amp;lt; M/2。T（N）=O（log N） 。&#xA;​&#xA;&lt;strong&gt;• 幂运算&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#282a36;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&lt;span style=&#34;color:#6272a4&#34;&gt;//T(N)=O(log N)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&lt;/span&gt;&#x9;&lt;span style=&#34;color:#8be9fd&#34;&gt;long&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Pow&lt;/span&gt;(&lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; X,&lt;span style=&#34;color:#8be9fd&#34;&gt;unsigned&lt;/span&gt; &lt;span style=&#34;color:#8be9fd&#34;&gt;int&lt;/span&gt; N)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;{&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;( N &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;0&lt;/span&gt; )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt;;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;( N &lt;span style=&#34;color:#ff79c6&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;1&lt;/span&gt; )    &lt;span style=&#34;color:#6272a4&#34;&gt;/**接下来的两行也可以不写**/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; X;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;if&lt;/span&gt;( &lt;span style=&#34;color:#50fa7b&#34;&gt;IsEven&lt;/span&gt;( N ) )&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Pow&lt;/span&gt;( X &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; X, N &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt; );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#6272a4&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;&#x9;以下的修改都是不可取的:&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;&#x9;return Pow( Pow( X, 2), N / 2);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;&#x9;return Pow( Pow( X, N / 2), 2);&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;&#x9;-以上这两种会产生无限循环，导致程序崩溃&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;&#x9;return Pow( X, N / 2)* Pow(X, N / 2 );&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;&#x9;-这种影响程序的效率【运行时间应该是O（N）(?)】&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;&#x9;**/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;else&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&#x9;&lt;span style=&#34;color:#ff79c6&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#50fa7b&#34;&gt;Pow&lt;/span&gt;( X &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; X, N &lt;span style=&#34;color:#ff79c6&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#bd93f9&#34;&gt;2&lt;/span&gt; ) &lt;span style=&#34;color:#ff79c6&#34;&gt;*&lt;/span&gt; N;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;&#x9;&lt;span style=&#34;color:#6272a4&#34;&gt;/**&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;&#x9;如果不写N==1那两行的话，上面这行还可以写成&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;&#x9;return Pow(X,N-1)*X;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#6272a4&#34;&gt;&#x9;&#x9;**/&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#x9;}&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;strong&gt;“有时候看一看程序能够进行多大的调整而不影响其正确性倒是很有意思的”&lt;/strong&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>《数据结构与算法分析——C语言描述》第一章 引论</title>
      <link>https://jrd.pub/160513_dsa-ch1/</link>
      <pubDate>Fri, 13 May 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160513_dsa-ch1/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;递归的四条基本法则：&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;ol&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;基准情形。必须总有某些基准情形，它无需递归就能解出。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;不断推进。对于那些需要递归求解的情形，每一次递归调用都必须要使求解状况朝接近基准情形的方向推进。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;设计法则。假设所有的递归调用都能运行。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;合成效益法则（compound interest rule）。在求解一个问题的同一实例时，切勿在不同的递归调用中做重复性的工作。 【5/11:例如求斐波那契数列的和时，比如求Fib(5)其实求了5次Fib(1),3次Fib(2)等等，这是一种极大的浪费】&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ol&gt;</description>
    </item>
    <item>
      <title>ASP.NET 搭建 Discuz! NT</title>
      <link>https://jrd.pub/160503_asp/</link>
      <pubDate>Tue, 03 May 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160503_asp/</guid>
      <summary>&lt;p&gt;&lt;strong&gt;架设环境选择：Windows 7 32bit + IIS 7.0 + Microsoft SQL Server 2014 Express&lt;/strong&gt;&lt;/p&gt;</summary>
      <description>&lt;p&gt;&lt;strong&gt;架设环境选择：Windows 7 32bit + IIS 7.0 + Microsoft SQL Server 2014 Express&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;*&lt;strong&gt;由于搭建时网络的原因，只能在内网搭建，方法基本相同，只需在防火墙和ip等稍作调整即可&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h5 id=&#34;1配置iis&#34;&gt;1.配置IIS。&lt;/h5&gt;&#xA;&lt;p&gt;   IIS是我们的服务器应用程序，我们首先需要打开它。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;首先在控制面板-程序和功能-打开或关闭Windows功能（如图），勾选“Internet Information Services可承载的Web核心”，“Internet信息服务”。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/image004.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;​&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在管理工具中找到“Internet 信息服务(IIS)管理器”，打开它，在左侧的“连接”栏下面找“个人电脑名&amp;gt;网站”，右键点击网站，选择“添加网站”（如图）&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/image001.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;在弹出的对话框中，填写必要信息。&lt;/p&gt;&#xA;&lt;!--more--&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/image005.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;​&lt;/p&gt;&#xA;&lt;pre&gt;&lt;code&gt;网站名称----给你的网站起个名字,如这里的&amp;quot;SNC_ASP.NET&amp;quot;&#xA;&#xA;物理路径----选取你网站在本地的目录&#xA;&#xA;绑定-IP地址----选取你服务器的ip地址，这里由于是在校园网环境中，无法搭建到外网的服务器，所以选取内网ip。&#xA;&#xA;端口----默认是80，如果有冲突可以自行修改。查看当前系统所占用的端口可以打开cmd，输入指令“netstat -a”查询（如图）&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/image007.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;查看IIS的主界面，找到“默认文档”，打开。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在打开的界面中，右键选择添加，添加名称为index.aspx，否则搭建服务器之后由于服务器不认识aspx的首页而打不开它。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/image009.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/image011.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;hr&gt;&#xA;&lt;h5 id=&#34;2配置sql-server&#34;&gt;2.配置SQL Server&lt;/h5&gt;&#xA;&lt;p&gt;从https://www.microsoft.com/zh-CN/download/details.aspx?id=42299 下载 Microsoft® SQL Server® 2014 Express，只需下载&#x9;“ExpressAndTools 64BIT\SQLEXPRWT_你系统位数_CHS.exe”即可。下载完之后打开，选择提取目录，等待解压。&lt;/p&gt;&#xA;&lt;p&gt;打开解压的目录下的SETUP.EXE，在打开的“SQL Server安装中心”中选择“全新SQL Server 独立安装或向现有安装添加功能”，打开“SQL Server 2014安装程序”进行安装。&lt;/p&gt;&#xA;&lt;p&gt;&lt;strong&gt;需要特别注意的是:&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在“实例配置”中，可以自行命名实例，也可以用系统默认的实例名，但最好把名字记下来&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;在“服务器配置”中，需要对SQL Server数据库选择一个用户，可以添加系统中的用户，填写对应的密码。如图。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image013.png&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在“数据库引擎配置”中，最好选择混合模式，单独设置一个SQL Server系统管理员账户，否则在后面关联用户的时候可能会遇到麻烦。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/image015.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image019.png&gt;&#xA;&lt;p&gt;完成安装后，打开SQL Server 2014 Management Studio，连接到你的服务器。&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/image018.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;这里可以选择Windows 身份验证，也可以选择SQL Server身份验证。然后点击“连接”。&lt;/p&gt;&#xA;&lt;p&gt;连接后，在右侧的对象资源管理器中，找到“数据库，右键单击，选择“新建数据库”，填写数据库名称，如dnt，然后设置所有者，可以直接选sa即可。&lt;/p&gt;&#xA;&lt;figure class=&#34;half&#34;&gt;&#xA;&lt;pre&gt;&lt;code&gt;![](/article_imgs/image021.png)&#xA;&#xA;&amp;lt;img src=https://jrd.pub/article_imgs/image019.png&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/figure&gt;&#xA;&lt;hr&gt;&#xA;&lt;h5 id=&#34;3安装discuznt&#34;&gt;3.安装Discuz！NT。&lt;/h5&gt;&#xA;&lt;p&gt;从官网 &lt;a href=&#34;http://www.comsenz.com/products/nt&#34;&gt;http://www.comsenz.com/products/nt&lt;/a&gt; 下载Discuz！NT压缩包，将其解压，&lt;/p&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image022.png&gt;&#xA;&lt;p&gt;打开readme目录下的catalog.html可以看见官方所给出的介绍页面，其中就包括了安装指南&lt;/p&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image023.png&gt;&#xA;&lt;p&gt;接下来，我们只需按照安装指南所给的步骤一步步进行&lt;/p&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image026.png&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;这里特别注意划红线的部分，是把upload_files目录里的东西放到服务器的根目录下而不是把upload_files文件夹整个放进服务器根目录。如图。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image028.png&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image032.png&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;我使用的系统是WIN7，但依旧需要修改目录的权限，右键-属性-安全-编辑就可以编辑用户权限了。在IIS管理器中也可以对目录的权限进行设置。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image030.png&gt;&#xA;&lt;p&gt;&lt;img src=https://jrd.pub/article_imgs/image033.png&gt; &lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;按照教程要求，我们在浏览器地址栏中输入应输入的内容，然后发现了如下的报错。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image034.png&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过阅读错误信息和查看根目录下的web.config配置文件，我们可以大概了解到问题出在Discuz!NT没有获得接管权，而在配置文件中也没有对相关权限的设置。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image036.png&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;此时我们应该做的是，打开控制面板-Windows功能，在应用程序开发功能目录下将下面的ASP.NET功能勾选上。系统会自动将需要的其他功能自动勾选上。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;figure class=&#34;half&#34;&gt;&#xA;&lt;pre&gt;&lt;code&gt;![](/article_imgs/image037.png)&#xA;&#xA;&amp;lt;img src=https://jrd.pub/article_imgs/image039.png&amp;gt;&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&lt;/figure&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;再次运行安装脚本，即访问http://您的域名/install/index.aspx ，会看到如图的界面。 选择&amp;quot;接受&amp;quot;，点击“下一步”。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image041.png&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;通过环境监测后，需要填写数据库信息，填写刚才创建的数据库名称，管理员账号和密码，在数据库服务器一项中填写自己的SQL Server服务器名称。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image045.png&gt;&#xA;&lt;p&gt;点击下一步。&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;在出现的“论坛设置信息”界面中，自行设定管理员名称和密码。然后再次点击下一步。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image043.png&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;然后会出现如图界面。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image047.png&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;点击”进入论坛“，可以看到论坛的界面，说明搭建成功。可以尝试登陆管理员账号，也可以通过本机ip访问论坛。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image049.png&gt;&#xA;&lt;pre&gt;&lt;code&gt; &#xA;&lt;/code&gt;&lt;/pre&gt;</description>
    </item>
    <item>
      <title>jsp搭建JEECMS</title>
      <link>https://jrd.pub/160503_jsp/</link>
      <pubDate>Tue, 03 May 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160503_jsp/</guid>
      <summary>&lt;p&gt;&lt;strong&gt;架设环境选择：Win8.1 64bit + Apache-tomcat-9.0.0 + MySQL5.7 + JDK 8.0&lt;/strong&gt;&lt;/p&gt;</summary>
      <description>&lt;p&gt;&lt;strong&gt;架设环境选择：Win8.1 64bit + Apache-tomcat-9.0.0 + MySQL5.7 + JDK 8.0&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;*&lt;strong&gt;由于搭建时网络的原因，只能在内网搭建，方法基本相同，只需在防火墙和ip等稍作调整即可&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;从http://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html 下载JDK，并安装。并配置好环境变量。&#xA;&lt;img src=https://jrd.pub/article_imgs/image078.png&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image080.png&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image081.png&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;从官方http://tomcat.apache.org/下载tomcat压缩包&#xA;下载之后解压&#xA;&lt;img src=https://jrd.pub/article_imgs/image083.png&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;打开apache-tomcat-9.0.0.M4\bin目录下的start.bat&#xA;出现的对话框如果没有自动关闭，且最后一行为Server startup in xxx ms，说明服务器搭建成功(如图)&#xA;&lt;img src=https://jrd.pub/article_imgs/image085.png&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;打开浏览器，访问localhost:8080，出现如图界面说明成功了&#xA;&lt;img src=https://jrd.pub/article_imgs/image087.png&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;从官网http://www.jeecms.com/ 下载jeecms压缩包，下载之后解压&#xA;将其中ROOT目录替换webapps下的ROOT目录&#xA;重新启动服务器，在浏览器中访问localhost:8080，出现如图界面。说明配置正确了。&#xA;勾选“我已经阅读并同意此协议”，点击“下一步”&#xA;&lt;img src=https://jrd.pub/article_imgs/image089.png&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;之后会出现如图界面，填写相应信息即可。&#xA;点击“提交”&#xA;&lt;img src=https://jrd.pub/article_imgs/image091.png&gt;&#xA;此时会发现服务器报错了（如图），错误代码500。&#xA;&lt;img  src=https://jrd.pub/article_imgs/image094.png&gt;&#xA;参考http://stackoverflow.com/questions/17484764/java-lang-classnotfoundexception-com-mysql-jdbc-driver-in-eclipse 可以得知是连接器出了问题，应该是MySQL与服务器没有连接好。&#xA;于是我们需要从https://dev.mysql.com/downloads/connector/j/下载Connector，下载好之后解压，将其中的mysql-connector-java-5.1.38-bin.jar 放到Tomcat目录下的lib目录中。&#xA;&lt;img src=https://jrd.pub/article_imgs/image093.png&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;重启Tomcat，重新提交数据库信息，然后会出现如下图的界面。&#xA;&lt;img src=https://jrd.pub/article_imgs/image096.png&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;按照指示再次重启Tomcat，访问localhost:8080，可以看到如图界面，说明搭建成功。&#xA;&lt;img src=https://jrd.pub/article_imgs/image098.png&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;可以登陆管理员账户，账号为admin，密码为password。&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;li&gt;&#xA;&lt;p&gt;还可以尝试后台登陆。访问http://localhost:8080/jeeadmin/jeecms/login.do ，可以看到如图界面。输入账号密码。&#xA;&lt;img src=https://jrd.pub/article_imgs/image102.png&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image104.png&gt;&lt;/p&gt;&#xA;&lt;/li&gt;&#xA;&lt;/ul&gt;</description>
    </item>
    <item>
      <title>php搭建WordPress</title>
      <link>https://jrd.pub/160503-php/</link>
      <pubDate>Tue, 03 May 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160503-php/</guid>
      <summary>&lt;p&gt;&lt;strong&gt;架设环境选择：Win8.1 64bit + Apache2.2.25 + MySQL5.7 + PHP5.6.20&lt;/strong&gt;&lt;/p&gt;</summary>
      <description>&lt;p&gt;&lt;strong&gt;架设环境选择：Win8.1 64bit + Apache2.2.25 + MySQL5.7 + PHP5.6.20&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;p&gt;*&lt;strong&gt;由于搭建时网络的原因，只能在内网搭建，方法基本相同，只需在防火墙和ip等稍作调整即可&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h5 id=&#34;1安装apachemysql和php&#34;&gt;1．安装Apache，MySQL和php&lt;/h5&gt;&#xA;&lt;p&gt;不多赘述，但需要注意的是：&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Apache安装过程，中会有端口设置，默认是80，为避免冲突可将其修改。安装后也可以在httpd.conf中修改监听的端口&lt;/li&gt;&#xA;&lt;li&gt;php安装完成后将安装目录下的php-development.ini重命名为php.ini&lt;/li&gt;&#xA;&lt;li&gt;在MySQL安装过程中会要求设置管理员账号，设置之后要记住。&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;2在apache中添加php模块&#34;&gt;2.在Apache中添加php模块&lt;/h5&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;打开apache安装目录下conf目录中的httpd.conf，具体方法参照http://php.net/manual/zh/install.windows.apache2.php ，我采用的是添加cgi模块的方式，添加的部分如右图&#xA;&lt;img src=https://jrd.pub/article_imgs/image052.png&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h5 id=&#34;3在php中加载mysql相关的扩展程序&#34;&gt;3.在PHP中加载MySQL相关的扩展程序&lt;/h5&gt;&#xA;&lt;p&gt;需要在php.ini配置文件中将extension_dir = &amp;ldquo;ext&amp;quot;和extension=php_mysql.dll前的分号去掉，即取消这两行的注释。这一步的目的可以理解为是将php和MySQL相连。&#xA;&lt;img src=https://jrd.pub/article_imgs/image056.png&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image054.png&gt;&lt;/p&gt;&#xA;&lt;h5 id=&#34;4从wordpress官网httpscnwordpressorg下载wordpress的压缩包解压将其放在服务器根目录下或者在httpdconf中将目录设为这个目录&#34;&gt;4.从WordPress官网https://cn.wordpress.org/下载WordPress的压缩包，解压，将其放在服务器根目录下或者在httpd.conf中将目录设为这个目录。&lt;/h5&gt;&#xA;&lt;!--more--&gt;&#xA;&lt;h5 id=&#34;5配置mysql&#34;&gt;5.配置MySQL&lt;/h5&gt;&#xA;&lt;p&gt;打开MySQL目录下的bin文件夹，按住shift右键单击空白处打开命令行。输入mysql –u 用户名 –p，然后按回车输入你的密码。如图。&#xA;&lt;img src=https://jrd.pub/article_imgs/image058.png&gt;&#xA;成功登陆之后，我们需要创建一个新的数据库，指令为”CREATE DATABASE 数据库名;”，注意最后有分号。如下图。创建成功后可以通过指令“SHOW DATABASES;”查看当前所有数据库。如右图。更多SQL指令可以参考http://c.biancheng.net/cpp/u/mysql/&#xA;&lt;img src=https://jrd.pub/article_imgs/image062.png&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image060.png&gt;&lt;/p&gt;&#xA;&lt;h5 id=&#34;6配置在浏览器中访问本机在地址栏中输入127001端口会出现下图的界面点击现在就开始然后会出现如图的界面按照图中说明填写即可然后提交&#34;&gt;6.配置在浏览器中访问本机，在地址栏中输入127.0.0.1:端口，会出现下图的界面，点击“现在就开始！”，然后会出现如图的界面，按照图中说明填写即可，然后提交。&lt;/h5&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image063.png&gt;&#xA;&lt;img src=https://jrd.pub/article_imgs/image065.png&gt;&#xA;其中，输入地址之后可能会遇到网页显示Internal Server Error，可以查看Apache的错误日志，查找错误原因。比如你第3步中如果没有进行第一个修改，日志中会记录如图的错误。这个错误在语法检查中不会被查出来，但是却会导致你无法访问自己的服务器。&#xA;&lt;img src=https://jrd.pub/article_imgs/image067.png&gt;&#xA;另外，提交之后可能会出现如下图的错误，报错的原因是你没有进行第3步。&#xA;&lt;img src=https://jrd.pub/article_imgs/image068.png&gt;&#xA;##### 7.成功之后会出现如图的界面，相应地进行填写。&#xA;&lt;img src=https://jrd.pub/article_imgs/image070.png&gt;&#xA;##### 8.然后输入用户名和密码登陆即可。&#xA;&lt;img src=https://jrd.pub/article_imgs/image072.png&gt;&#xA;登陆之后会显示如图的界面，wordpress提供的图形化界面可以让你自由地个性化你的博客。&#xA;&lt;img src=https://jrd.pub/article_imgs/image076.png&gt;&#xA;最后在地址栏中输入ip地址验证一下网站是否已经架设成功。&#xA;&lt;img src=https://jrd.pub/article_imgs/image074.png&gt;</description>
    </item>
    <item>
      <title>HTTP Response/Request Headers</title>
      <link>https://jrd.pub/160427_http/</link>
      <pubDate>Wed, 27 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160427_http/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;p&gt;这是一次404过程中，客户端和服务器发送请求的头(Headers)&#xA;先想办法炸出404（如图）&lt;/p&gt;&#xA;&lt;p&gt;&lt;img src=&#34;https://jrd.pub/article_imgs/404.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;&#xA;&lt;p&gt;HTTP Headers的内容如下：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;General&lt;/strong&gt;&lt;br&gt;&#xA;Request URL:http://www.xxx.com/xxxxxx.xx  //请求目的地的地址&lt;br&gt;&#xA;Request Method: GET &#x9; &#x9;&#x9;&#x9;//请求方式 这里是管服务器要东西&lt;br&gt;&#xA;Status Code: 404 Not Found HTTP &#x9;//HTTP状态码，这里是404，代表没有找到&lt;br&gt;&#xA;Remote Address: 127.0.0.1:8081  &#x9;//远程地址，不是ip地址，一般是127.0.0.1&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;br&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Response Headers&lt;/strong&gt; &#x9;&#x9;&#x9;&#x9;//应答头部字段&lt;br&gt;&#xA;HTTP/1.1 404 Not Found  &#x9;&#x9;&#x9;//HTTP版本是1.1&lt;br&gt;&#xA;Date: Wed, 27 Apr 2016 10:58:04 GMT //时间，采用格林尼治标准时间&lt;br&gt;&#xA;Server: Apache/2.2.25 (Win32)  &#x9;&#x9;//服务器类型&lt;br&gt;&#xA;Content-Length: 208&#x9;&#x9;&#x9;&#x9;//实体内容长度 208&lt;br&gt;&#xA;Keep-Alive: timeout=5, max=100    &#x9;//持久连接 超时是5秒，最长100秒&lt;br&gt;&#xA;Connection: Keep-Alive&#x9;&#x9;&#x9;&#x9;//连接类型：持续连接&lt;br&gt;&#xA;Content-Type: text/html; charset=iso-8859-1 //实体内容种类:文本/网页 编码类型是iso-8859-1&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;br&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;&lt;strong&gt;Request Headers&lt;/strong&gt;  &#x9;&#x9;&#x9;&#x9;//请求头部字段&lt;br&gt;&#xA;GET /index2.php HTTP/1.1&#x9;&#x9;&#x9;//“我要index2.php，快给我” HTTP版本1.1&lt;br&gt;&#xA;Host: &lt;a href=&#34;https://www.xxx.com&#34;&gt;www.xxx.com&lt;/a&gt;&#x9;&#x9;&#x9;&#x9;&#x9;//要请求的主机的名字&lt;br&gt;&#xA;Connection: keep-alive&#x9;&#x9;&#x9;&#x9;//连接类型： “我要一直连着，不许给我断了“&lt;br&gt;&#xA;Cache-Control: max-age=0&#x9;&#x9;&#x9;//缓存控制：”就不让你缓存，要东西现来找我”&lt;br&gt;&#xA;Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8&lt;br&gt;&#xA;//“我只要下面这些：文本/HTML，应用/XHTML+XML，应用/xml(这个可以往后放不着急)，图片/webp(这个更不着急)”&lt;br&gt;&#xA;Upgrade-Insecure-Requests: 1&#x9;&#x9;//这个是？&lt;br&gt;&#xA;User-Agent: Mozilla/5.0 (Windows NT 6.3; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/50.0.2661.87 Safari/537.36&#x9;//浏览器支持类型&lt;br&gt;&#xA;Accept-Encoding: gzip, deflate, sdch&#x9;//”我只看得懂下面这三种编码：gzip, deflate, sdch”&lt;br&gt;&#xA;Accept-Language: zh-CN,zh;q=0.8 &#x9;//”我只要中文”&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>3.21-4.16</title>
      <link>https://jrd.pub/160416_re/</link>
      <pubDate>Sat, 16 Apr 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160416_re/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;h1 id=&#34;一本专业&#34;&gt;一、本专业&lt;/h1&gt;&#xA;&lt;h4 id=&#34;过去的三周我&#34;&gt;过去的三周我&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;说实话，最近没有认真地学习数分高代，现在心中充满愧疚和罪恶感&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;接下来&#34;&gt;接下来&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;好好看课本，配合MIT的线性代数课程，巩固最近一段时间数分高代的知识&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;二编程&#34;&gt;二、编程&lt;/h1&gt;&#xA;&lt;h4 id=&#34;过去的三周我-1&#34;&gt;过去的三周我&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;用C和Python两种编程语言，解决了学校OJ中27道问题，但还没有涉及数据结构和算法的内容&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;接下来-1&#34;&gt;接下来&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;开始学习数据结构和算法的内容&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;三网络&#34;&gt;三、网络&lt;/h1&gt;&#xA;&lt;h4 id=&#34;过去的三周我-2&#34;&gt;过去的三周我&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;学习了一些关于Apache的基础知识&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h4 id=&#34;接下来-2&#34;&gt;接下来&lt;/h4&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;继续学习，同时学习Tomcat和用vps搭建服务器&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;四其他&#34;&gt;四、其他&lt;/h1&gt;&#xA;&lt;h3 id=&#34;过去三周我还在读这些&#34;&gt;过去三周我还在读这些&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;浪潮之巅/吴军&lt;/li&gt;&#xA;&lt;li&gt;空谷幽兰——寻访当代中国隐士/比尔·波特&lt;/li&gt;&#xA;&lt;li&gt;人生不较劲/周国平&lt;/li&gt;&#xA;&lt;li&gt;经济学原理：微观经济学分册/曼昆&lt;/li&gt;&#xA;&lt;li&gt;怎样解题/波利亚&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>未来一段时间</title>
      <link>https://jrd.pub/160320_plans/</link>
      <pubDate>Sun, 20 Mar 2016 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/160320_plans/</guid>
      <summary>&lt;p&gt; &lt;/p&gt;</summary>
      <description>&lt;p&gt; &lt;/p&gt;&#xA;&lt;h1 id=&#34;一学数学&#34;&gt;一、学数学！&lt;/h1&gt;&#xA;&lt;p&gt;&lt;strong&gt;学好数分高代！&lt;/strong&gt;&#xA;&lt;strong&gt;学好数分高代！&lt;/strong&gt;&#xA;&lt;strong&gt;学好数分高代！&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;二巩固学习c学习数据结构和算法&#34;&gt;二、巩固学习C，学习数据结构和算法&lt;/h1&gt;&#xA;&lt;h3 id=&#34;1书目&#34;&gt;1.书目&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;《C Primer Plus》&lt;/li&gt;&#xA;&lt;li&gt;《C Programming Language》&lt;/li&gt;&#xA;&lt;li&gt;《数据结构》&lt;/li&gt;&#xA;&lt;li&gt;《编程珠玑》&lt;/li&gt;&#xA;&lt;li&gt;《算法导论》&lt;/li&gt;&#xA;&lt;li&gt;《C Reference Manual》&lt;/li&gt;&#xA;&lt;li&gt;《Pointers and C》&lt;/li&gt;&#xA;&lt;li&gt;《C Traps and Pitfalls》&lt;/li&gt;&#xA;&lt;li&gt;《Expert C Programming》&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;p&gt;除此之外，还有与编程可能关系不太大的一些书：&lt;/p&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;《深入理解计算机系统》&lt;/li&gt;&#xA;&lt;li&gt;《计算机网络自顶向下方法》&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;2练习&#34;&gt;2.练习&lt;/h3&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;当然是刷OJ&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://coder.buct.edu.cn&#34;&gt;http://coder.buct.edu.cn&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.bnuoj.com/v3/&#34;&gt;http://www.bnuoj.com/v3/&lt;/a&gt;&lt;/li&gt;&#xA;&lt;li&gt;&lt;a href=&#34;http://www.clang.cc/oj/problemset.php&#34;&gt;http://www.clang.cc/oj/problemset.php&lt;/a&gt;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h3 id=&#34;3目标&#34;&gt;3.目标&lt;/h3&gt;&#xA;&lt;p&gt;培养自己的算法能力&lt;/p&gt;&#xA;&lt;h1 id=&#34;三巩固python基础学习写爬虫&#34;&gt;三、巩固Python基础，学习写爬虫&lt;/h1&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;Python基础知识 &lt;a href=&#34;http://www.liaoxuefeng.com/&#34;&gt;http://www.liaoxuefeng.com/&lt;/a&gt;&#xA;爬虫 &lt;a href=&#34;http://cuiqingcai.com/1052.html&#34;&gt;http://cuiqingcai.com/1052.html&lt;/a&gt;&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;h1 id=&#34;四学习使用linux&#34;&gt;四、学习使用Linux&lt;/h1&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;阅读《鸟哥的Linux私房菜·基础学习篇》&lt;/li&gt;&#xA;&lt;li&gt;学习在Linux下配置服务器&lt;/li&gt;&#xA;&lt;li&gt;有时间的话搞一搞树莓派（在宿舍搭个ftp给室友之类的）&lt;/li&gt;&#xA;&lt;li&gt;在不久的将来，摆脱Windows的束缚，将Linux作为常用系统&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h1 id=&#34;五学习数据挖掘&#34;&gt;五、学习数据挖掘&lt;/h1&gt;&#xA;&lt;p&gt;这个目前有些远，没有特别搜集专门的学习路线，只是找到了这个：&#xA;&lt;a href=&#34;http://www.zhihu.com/question/20757000&#34;&gt;在数据分析、挖掘方面，有哪些好书值得推荐？&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h1 id=&#34;六还有一些与计算机无关的事情&#34;&gt;六、还有一些与计算机无关的事情——&lt;/h1&gt;&#xA;&lt;h2 id=&#34;一读书&#34;&gt;（一）读书&lt;/h2&gt;&#xA;&lt;p&gt;做好摘抄，做好读书笔记&lt;/p&gt;&#xA;&lt;h3 id=&#34;1纸质书单&#34;&gt;1.纸质书单&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;霍乱时期的爱情/加西亚·马尔克斯&lt;/li&gt;&#xA;&lt;li&gt;怎样解题/波利亚&lt;/li&gt;&#xA;&lt;li&gt;人生不较劲/周国平&lt;/li&gt;&#xA;&lt;li&gt;撒哈拉的故事/三毛&lt;/li&gt;&#xA;&lt;li&gt;诗经&lt;/li&gt;&#xA;&lt;li&gt;经济学原理：微观经济学分册/曼昆&lt;/li&gt;&#xA;&lt;li&gt;中国人民共和国宪法&lt;/li&gt;&#xA;&lt;li&gt;…………&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h3 id=&#34;2kindle书单&#34;&gt;2.Kindle书单&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;浪潮之巅/吴军&lt;/li&gt;&#xA;&lt;li&gt;空谷幽兰——寻访当代中国隐士/比尔·波特&lt;/li&gt;&#xA;&lt;li&gt;人生不较劲/周国平&lt;/li&gt;&#xA;&lt;li&gt;皮囊/菜崇达&lt;/li&gt;&#xA;&lt;li&gt;伶人往事/章诒和&lt;/li&gt;&#xA;&lt;li&gt;乌合之众/古斯塔夫·勒庞&lt;/li&gt;&#xA;&lt;li&gt;中国人民共和国宪法&lt;/li&gt;&#xA;&lt;li&gt;…………&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;其实还有很多，不一一列出XD&lt;/p&gt;&#xA;&lt;h2 id=&#34;二电影&#34;&gt;（二）电影&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;荒野猎人&lt;/li&gt;&#xA;&lt;li&gt;秒速五厘米&lt;/li&gt;&#xA;&lt;li&gt;辩护人&lt;/li&gt;&#xA;&lt;li&gt;乱世佳人&lt;/li&gt;&#xA;&lt;li&gt;被遗弃的松子的一生&lt;/li&gt;&#xA;&lt;li&gt;机械姬&lt;/li&gt;&#xA;&lt;li&gt;十二怒汉&lt;/li&gt;&#xA;&lt;li&gt;…………&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;三运动&#34;&gt;（三）运动&lt;/h2&gt;&#xA;&lt;p&gt;** 跑步!**&#xA;** 跑步!**&#xA;** 跑步!**&lt;/p&gt;&#xA;&lt;h2 id=&#34;四nba录像&#34;&gt;（四）NBA录像&lt;/h2&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Bulls@Jazz 1998 NBA Finals Game 6&lt;/li&gt;&#xA;&lt;li&gt;Heat@Bostons 2012 East Finals Game 6&lt;/li&gt;&#xA;&lt;li&gt;Cavaliers@Pistons 2006 East Finals Game 5 Highlight&lt;/li&gt;&#xA;&lt;li&gt;Warriors@Thunder February 28th 2016&lt;/li&gt;&#xA;&lt;li&gt;Bulls@Cavaliers 1989 Eastern Conference First Round Game 5&lt;/li&gt;&#xA;&lt;li&gt;Bulls@Celtics 1986 April 20th&lt;/li&gt;&#xA;&lt;li&gt;…………&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;h2 id=&#34;五个人情趣&#34;&gt;（五）个人情趣&lt;/h2&gt;&#xA;&lt;p&gt;&lt;strong&gt;学习围棋&lt;/strong&gt;  &lt;a href=&#34;http://www.weiqitv.com/&#34;&gt;http://www.weiqitv.com/&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    <item>
      <title>计算机南北桥</title>
      <link>https://jrd.pub/151125_hardware/</link>
      <pubDate>Wed, 25 Nov 2015 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/151125_hardware/</guid>
      <summary>&lt;p&gt;&lt;strong&gt;南桥和北桥是PC主板芯片组中的两枚芯片。&lt;/strong&gt;&lt;/p&gt;</summary>
      <description>&lt;p&gt;&lt;strong&gt;南桥和北桥是PC主板芯片组中的两枚芯片。&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;br&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;  “&lt;strong&gt;北桥&lt;/strong&gt;（英语：Northbridge）是基于 Intel 处理器的个人电脑主板芯片组两枚芯片中的一枚，&lt;strong&gt;北桥设计用来处理高速信号&lt;/strong&gt;，通常处理中央处理器、随机存取存储器、AGP 或 PCI Express 的端口，还有与南桥之间的通信。”&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&lt;br&gt;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;  “&lt;strong&gt;南桥&lt;/strong&gt;是基于个人电脑主板芯片组架构中的其中一枚芯片。&lt;strong&gt;南桥设计用来处理低速信号&lt;/strong&gt;，通过北桥与中央处理器联系。……但在部分的芯片组架构中，会将南桥的功能与北桥集成在一起；或者将部分功能移到北桥，而部分的南桥功能则删除，将被删除的界面功能使用额外独立的芯片组提供功能。这样使得整个芯片组架构中只会有单一芯片，而不会另外的有南桥芯片。&lt;br&gt;&#xA;  南桥包含大多数周边设备界面、多媒体控制器和通讯界面功能。例如PCI控制器、ATA控制器、USB控制器、网络控制器、音效控制器。各世代的南桥性能大多雷同，但偶然听到某些南桥会有较差的Serial ATA或USB性能。”&lt;br&gt;&#xA;  “现行的主板大多将北桥芯片集成进中央处理器的晶粒（die）中，例如Intel的Sandy Bridge和AMD的Fusion处理器（两者均于2011年发表）。2011年推出的LGA 1156和Socket FM1新一代CPU已包含北桥，因此主板只有南桥。&#xA;由于系统单片机（SoC）的推行，在2013年发表的Intel Haswell笔记本型处理器甚至移除了PCH。SoC本身已包含CPU、北桥和南桥三者的功能。”&lt;/p&gt;&#xA;&lt;/blockquote&gt;</description>
    </item>
    <item>
      <title>About Me</title>
      <link>https://jrd.pub/about/</link>
      <pubDate>Fri, 18 Apr 1997 00:00:00 +0000</pubDate>
      <guid>https://jrd.pub/about/</guid>
      <summary>&lt;p&gt;我是 Drapor / Jared / Jelly；&lt;br&gt;&#xA;喜欢咖啡、推理小说、&lt;a href=&#34;https://triviadrome.substack.com/&#34;&gt;设计填字游戏&lt;/a&gt; ；&lt;br&gt;&#xA;目前靠写 Python 为生； &lt;br&gt;&#xA;可以&lt;a href=&#34;mailto:gabrieldrapor@gmail.com&#34;&gt;通过邮件联系我&lt;/a&gt;，也可以在这些地方看到我的动态：&lt;br&gt;&#xA;Douban: &lt;a href=&#34;https://www.douban.com/people/drapor/&#34;&gt;@Drapor&lt;/a&gt;&lt;br&gt;&#xA;Mastodon: &lt;a href=&#34;https://cay.jrd.pub/@drapor&#34;&gt;DRAPORISLET&lt;/a&gt;  &lt;br&gt;&#xA;Instagram: &lt;a href=&#34;https://www.instagram.com/gabrieldrapor/&#34;&gt;@gabrieldrapor&lt;/a&gt;  &lt;br&gt;&#xA;GitHub: &lt;a href=&#34;https://github.com/GabrielDrapor&#34;&gt;@GabrielDrapor&lt;/a&gt; &lt;br&gt;&#xA;&lt;a href=&#34;https://svr.jrd.pub/&#34;&gt;今年看/听/玩了什么？&lt;/a&gt;&lt;/p&gt;</summary>
      <description>&lt;p&gt;我是 Drapor / Jared / Jelly；&lt;br&gt;&#xA;喜欢咖啡、推理小说、&lt;a href=&#34;https://triviadrome.substack.com/&#34;&gt;设计填字游戏&lt;/a&gt; ；&lt;br&gt;&#xA;目前靠写 Python 为生； &lt;br&gt;&#xA;可以&lt;a href=&#34;mailto:gabrieldrapor@gmail.com&#34;&gt;通过邮件联系我&lt;/a&gt;，也可以在这些地方看到我的动态：&lt;br&gt;&#xA;Douban: &lt;a href=&#34;https://www.douban.com/people/drapor/&#34;&gt;@Drapor&lt;/a&gt;&lt;br&gt;&#xA;Mastodon: &lt;a href=&#34;https://cay.jrd.pub/@drapor&#34;&gt;DRAPORISLET&lt;/a&gt;  &lt;br&gt;&#xA;Instagram: &lt;a href=&#34;https://www.instagram.com/gabrieldrapor/&#34;&gt;@gabrieldrapor&lt;/a&gt;  &lt;br&gt;&#xA;GitHub: &lt;a href=&#34;https://github.com/GabrielDrapor&#34;&gt;@GabrielDrapor&lt;/a&gt; &lt;br&gt;&#xA;&lt;a href=&#34;https://svr.jrd.pub/&#34;&gt;今年看/听/玩了什么？&lt;/a&gt;&lt;/p&gt;&#xA;</description>
    </item>
  </channel>
</rss>
